import {
  _9,
  w9
} from "./chunk-JV7AUQY5.js";
import "./chunk-555XXRDK.js";
import "./chunk-M5TF25TK.js";
import "./chunk-4QBCRV47.js";
import "./chunk-YFT6OQ5R.js";
import "./chunk-5SHNTQUO.js";
import "./chunk-F73GDDKZ.js";
import {
  lodash_default_default
} from "./chunk-LK7GAOJV.js";
import "./chunk-M4AHV5EN.js";
import "./chunk-7PYUCYS5.js";
import "./chunk-PLDDJCW6.js";

// node_modules/@fast-crud/fast-extends/dist/uploader-form-42acdd99.mjs
function c(e, n, s) {
  let t;
  s.response ? t = `${s.response.error || s.response}` : s.responseText ? t = `${s.responseText}` : t = `fail to post ${e} ${s.status}`;
  const o = new Error(t);
  return o.status = s.status, o.method = "post", o.url = e, o;
}
function p(e) {
  const n = e.responseText || e.response;
  if (!n)
    return n;
  try {
    return JSON.parse(n);
  } catch {
    return n;
  }
}
function m(e, n, s) {
  if (typeof XMLHttpRequest > "u")
    return;
  const t = new XMLHttpRequest(), o = e.action;
  t.timeout = e.timeout, t.upload && (t.upload.onprogress = function(r) {
    r.total > 0 && (r.percent = r.loaded / r.total * 100), e.onProgress(r);
  });
  const i = new FormData();
  e.data && Object.keys(e.data).forEach((a) => {
    i.append(a, e.data[a]);
  }), i.append(e.name, e.file, e.file.name), t.onerror = function(r) {
    s(r);
  }, t.onload = function() {
    if (t.status < 200 || t.status >= 300)
      return e.onError(c(o, e, t));
    n(p(t));
  }, t.open("post", o, true), e.withCredentials && "withCredentials" in t && (t.withCredentials = true);
  const u = e.headers || {};
  for (const a in u)
    u.hasOwnProperty(a) && u[a] !== null && t.setRequestHeader(a, u[a]);
  return t.send(i), t;
}
function y(e) {
  return new Promise((n, s) => {
    m(e, async (t) => {
      n(t);
    }, (t) => {
      s(t);
    });
  });
}
async function w(e) {
  const { file: n, fileName: s, onProgress: t } = e, o = e.options, i = await _9(n, s, o);
  o.data == null && (o.data = {}), o.data.key = i;
  const u = {
    file: n,
    onProgress: t,
    timeout: 6e4,
    ...o
  };
  delete u.uploadRequest;
  let r = await (o.uploadRequest ?? y)(u);
  return o.successHandle && (r = await o.successHandle(r, u)), r && typeof r == "object" && r.key == null && (r.key = i), r;
}
async function H(e) {
  const { getConfig: n } = w9(), s = n("form");
  return e.options = lodash_default_default.merge({}, lodash_default_default.cloneDeep(s), e.options), await w(e);
}
export {
  H as upload
};
//# sourceMappingURL=uploader-form-42acdd99-6Y4NNTRM.js.map
