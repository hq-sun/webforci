{
  "version": 3,
  "sources": ["../../@fast-crud/fast-extends/src/uploader/components/fs-images-format.vue", "../../@fast-crud/fast-extends/src/uploader/components/fs-images-format.vue", "../../@fast-crud/src/uploader/type/validators.ts", "../../@fast-crud/src/uploader/type/types.tsx", "../../@fast-crud/src/uploader/type/config.ts", "../../@fast-crud/src/uploader/type/index.ts", "../../@fast-crud/src/uploader/components/libs/index.ts", "../../@fast-crud/src/uploader/components/utils/index.ts", "../../@fast-crud/src/uploader/index.ts", "../../@fast-crud/src/editor/type/types.ts", "../../@fast-crud/src/editor/type/config.ts", "../../@fast-crud/src/editor/type/index.ts", "../../@fast-crud/src/editor/index.ts", "../../@fast-crud/src/json/type/types.ts", "../../@fast-crud/src/json/type/index.ts", "../../@fast-crud/src/json/index.ts", "../../@fast-crud/src/copyable/type/types.ts", "../../@fast-crud/src/copyable/type/index.ts", "../../node_modules/.pnpm/@soerenmartius+vue3-clipboard@0.1.2/node_modules/@soerenmartius/vue3-clipboard/dist/vue3-clipboard.esm.js", "../../@fast-crud/src/copyable/index.ts", "../../@fast-crud/src/time/type/types.ts", "../../@fast-crud/src/time/type/index.ts", "../../@fast-crud/src/time/index.ts", "../../@fast-crud/src/input/components/fs-phone-input/phoneCodeCountries.ts", "../../@fast-crud/fast-extends/src/input/components/fs-phone-input/fs-phone-input.vue", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/metadata.max.json.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/max/exports/withMetadataArgument.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/ParseError.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/constants.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/tools/semver-compare.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/isObject.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/metadata.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/extension/createExtensionPattern.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/isViablePhoneNumber.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/extension/extractExtension.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/parseDigits.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/parseIncompletePhoneNumber.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/mergeArrays.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/checkNumberLength.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/isPossible.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/matchesEntirely.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/getNumberType.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/isValid.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/getPossibleCountriesForNumber.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/applyInternationalSeparatorStyle.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/formatNationalNumberUsingFormat.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/getIddPrefix.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/RFC3966.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/format.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/PhoneNumber.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/stripIddPrefix.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/extractNationalNumberFromPossiblyIncompleteNumber.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/extractNationalNumber.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/extractCountryCallingCode.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/getCountryByNationalNumber.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/getCountryByCallingCode.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/extractPhoneContext.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/helpers/extractFormattedPhoneNumberFromPossibleRfc3966NumberUri.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/parse.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/parsePhoneNumberWithError_.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/normalizeArguments.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/parsePhoneNumber_.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/es6/parsePhoneNumber.js", "../../node_modules/.pnpm/libphonenumber-js@1.11.3/node_modules/libphonenumber-js/max/exports/parsePhoneNumber.js", "../../@fast-crud/src/input/components/fs-phone-input/utils.ts", "../../@fast-crud/src/input/components/fs-phone-input/index.ts", "../../@fast-crud/src/input/type/types.tsx", "../../@fast-crud/src/input/type/index.ts", "../../@fast-crud/src/input/index.ts"],
  "sourcesContent": ["<template>\n  <div class=\"fs-image-format\">\n    <component :is=\"ui.imageGroup.name\" v-bind=\"wrapper\">\n      <component :is=\"ui.image.name\" v-for=\"item in imageListRef\" :key=\"item.src\" class=\"fs-image-item\" v-bind=\"item\">\n        <template #placeholder>\n          <div class=\"fs-image-slot\">\n            <fs-loading :loading=\"true\" v-bind=\"errorBinding\" />\n          </div>\n        </template>\n        <template #error>\n          <div class=\"fs-image-slot\">\n            <img :src=\"error\" v-bind=\"errorBinding\" />\n          </div>\n        </template>\n      </component>\n    </component>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, Ref, ref, watch } from \"vue\";\nimport { useUi } from \"@fast-crud/fast-crud\";\nimport _ from \"lodash-es\";\n// 图片行展示组件\nexport default defineComponent({\n  name: \"FsImagesFormat\",\n  inheritAttrs: false,\n  props: {\n    //包裹image的组件配置，antdv是preview-group，element是div\n    wrapper: {\n      type: Object,\n      default: null\n    },\n    // 图片的url\n    // 'value' 或 ['value','value']\n    modelValue: {\n      type: [String, Array, Object],\n      require: true\n    },\n    /**\n     * 构建好的图片链接，如果此处传值，则不走buildUrl方法\n     * 'url' 或 ['url1','url2'] 或 {url,previewUrl} 或 [{url,previewUrl}]\n     */\n    urls: {\n      type: [String, Object, Array]\n    },\n    /**\n     * 加载错误时显示的图片\n     */\n    error: {\n      default:\n        'data:image/svg+xml,%3Csvg xmlns=\"http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"%3E%3Cpath fill=\"%23888\" d=\"M5 21q-.825 0-1.413-.588T3 19v-6.6l3 3l4-4l4 4l4-4l3 3V19q0 .825-.588 1.413T19 21H5ZM5 3h14q.825 0 1.413.588T21 5v6.575l-3-3l-4 4l-4-4l-4 4l-3-3V5q0-.825.588-1.413T5 3Z\"%2F%3E%3C%2Fsvg%3E'\n    },\n    /**\n     * 从value构建图片下载url的方法\n     * 支持异步\n     */\n    buildUrl: {\n      type: Function,\n      default: function (value: any) {\n        return value;\n      }\n    },\n    buildUrls: {\n      type: Function,\n      default: null\n    },\n    /**\n     * 从value或url构建预览大图的方法\n     * 支持异步\n     */\n    buildPreviewUrl: {\n      type: Function,\n      default: function ({ url, value, index }: any) {\n        return url;\n      }\n    },\n\n    buildPreviewUrls: {\n      type: Function,\n      default: null\n    }\n  },\n  setup(props: any, ctx) {\n    const { ui } = useUi();\n    type ImageItem = {\n      value?: any;\n      url?: string;\n      index?: number;\n      previewUrl?: string;\n    };\n    const imageListRef: Ref<any[]> = ref([]);\n\n    const errorBinding = computed(() => {\n      return _.merge({ style: {} }, { style: ctx.attrs.style });\n    });\n\n    const computedValues = computed(() => {\n      const urls: any = [];\n      if (props.modelValue == null || props.modelValue === \"\") {\n        return urls;\n      }\n      if (typeof props.modelValue === \"string\") {\n        urls.push(props.modelValue);\n      } else if (Array.isArray(props.modelValue)) {\n        for (const item of props.modelValue) {\n          if (item == null) {\n            continue;\n          }\n          if (item.url != null) {\n            urls.push(item.url);\n          } else {\n            urls.push(item);\n          }\n        }\n      } else {\n        //object\n        if (props.modelValue.url != null) {\n          urls.push(props.modelValue.url);\n        } else {\n          urls.push(props.modelValue);\n        }\n      }\n      return urls;\n    });\n\n    function buildImageList(images: ImageItem[]) {\n      const urls: string[] = [];\n      const previewUrls: string[] = [];\n      for (let i = 0; i < images.length; i++) {\n        const image = images[i];\n        urls.push(image.url as string);\n        previewUrls.push(image.previewUrl as string);\n      }\n      const imageList: any[] = [];\n      for (let i = 0; i < images.length; i++) {\n        const image = images[i];\n        const url = image.url;\n        const previewUrl = image.url;\n        const preview = ui.image.buildPreviewBind({\n          url,\n          urls,\n          previewUrl,\n          previewUrls,\n          index: i\n        });\n        imageList.push({\n          fit: \"contain\",\n          src: url,\n          [ui.image.fallback]: props.error,\n          ...ctx.attrs,\n          ...preview\n        });\n      }\n      return imageList;\n    }\n\n    async function buildImageListUrls(list: ImageItem[]) {\n      if (props.buildUrls) {\n        const values = list.map((item) => item.value);\n        const urls = await props.buildUrls(values);\n        for (let i = 0; i < list.length; i++) {\n          list[i].url = urls[i];\n        }\n        let previewUrls = urls;\n        if (props.buildPreviewUrls) {\n          previewUrls = await props.buildPreviewUrls(list);\n        }\n        for (let i = 0; i < list.length; i++) {\n          list[i].previewUrl = previewUrls[i];\n        }\n      } else if (props.buildUrl) {\n        for (let item of list) {\n          item.url = await props.buildUrl(item.value);\n          item.previewUrl = item.url;\n          if (props.buildPreviewUrl) {\n            item.previewUrl = await props.buildPreviewUrl(item);\n          }\n        }\n      } else {\n        for (let i = 0; i < list.length; i++) {\n          list[i].url = list[i].value;\n          list[i].previewUrl = list[i].value;\n        }\n      }\n    }\n\n    async function buildImageListByValue(values: any) {\n      const images: ImageItem[] = [];\n      for (let i = 0; i < values.length; i++) {\n        let value = values[i];\n        images.push({\n          value,\n          index: i\n        });\n      }\n\n      await buildImageListUrls(images);\n\n      return buildImageList(images);\n    }\n\n    async function buildImageListByUrls(urls: any) {\n      const list: ImageItem[] = [];\n      if (typeof urls === \"string\") {\n        list.push({\n          value: urls,\n          url: urls,\n          index: 0,\n          previewUrl: urls\n        });\n      } else if (urls instanceof Array) {\n        if (urls.length > 0) {\n          if (typeof urls[0] === \"string\") {\n            for (let i = 0; i < urls.length; i++) {\n              const url = urls[i];\n              list.push({\n                value: url,\n                url: url,\n                previewUrl: url,\n                index: i\n              });\n            }\n          } else {\n            for (let i = 0; i < urls.length; i++) {\n              const url = urls[i];\n              list.push({\n                value: url.url,\n                ...url,\n                index: i\n              });\n            }\n          }\n        }\n      } else {\n        // is object\n        list.push({\n          value: urls.url,\n          ...urls,\n          index: 0\n        });\n      }\n\n      return buildImageList(list);\n    }\n    watch(\n      () => {\n        return computedValues.value;\n      },\n      async (values) => {\n        if (!props.urls) {\n          imageListRef.value = await buildImageListByValue(values);\n        }\n      },\n      {\n        immediate: true\n      }\n    );\n\n    watch(\n      () => {\n        return props.urls;\n      },\n      async (value) => {\n        if (value) {\n          imageListRef.value = await buildImageListByUrls(value);\n        }\n      },\n      {\n        immediate: true\n      }\n    );\n\n    return { imageListRef, ui, errorBinding };\n  }\n});\n</script>\n<style lang=\"less\">\n.fs-image-format {\n  display: flex;\n  margin: 1px;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n\n  .fs-box {\n    display: flex;\n    align-items: center;\n  }\n\n  .fs-image-item {\n    border: 1px solid #eee;\n    margin: 0 1px;\n    object-fit: fill;\n    background-color: #eee;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .fs-image-slot {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    //  height: 100%;\n    width: 100%;\n    height: 100%;\n  }\n\n  .el-image-viewer__close {\n    color: #fff;\n  }\n\n  .el-image__error,\n  .el-image__inner,\n  .el-image__placeholder {\n    height: auto;\n  }\n\n  .el-image__wrapper {\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n}\n</style>\n", "<template>\n  <div class=\"fs-image-format\">\n    <component :is=\"ui.imageGroup.name\" v-bind=\"wrapper\">\n      <component :is=\"ui.image.name\" v-for=\"item in imageListRef\" :key=\"item.src\" class=\"fs-image-item\" v-bind=\"item\">\n        <template #placeholder>\n          <div class=\"fs-image-slot\">\n            <fs-loading :loading=\"true\" v-bind=\"errorBinding\" />\n          </div>\n        </template>\n        <template #error>\n          <div class=\"fs-image-slot\">\n            <img :src=\"error\" v-bind=\"errorBinding\" />\n          </div>\n        </template>\n      </component>\n    </component>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, Ref, ref, watch } from \"vue\";\nimport { useUi } from \"@fast-crud/fast-crud\";\nimport _ from \"lodash-es\";\n// 图片行展示组件\nexport default defineComponent({\n  name: \"FsImagesFormat\",\n  inheritAttrs: false,\n  props: {\n    //包裹image的组件配置，antdv是preview-group，element是div\n    wrapper: {\n      type: Object,\n      default: null\n    },\n    // 图片的url\n    // 'value' 或 ['value','value']\n    modelValue: {\n      type: [String, Array, Object],\n      require: true\n    },\n    /**\n     * 构建好的图片链接，如果此处传值，则不走buildUrl方法\n     * 'url' 或 ['url1','url2'] 或 {url,previewUrl} 或 [{url,previewUrl}]\n     */\n    urls: {\n      type: [String, Object, Array]\n    },\n    /**\n     * 加载错误时显示的图片\n     */\n    error: {\n      default:\n        'data:image/svg+xml,%3Csvg xmlns=\"http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"%3E%3Cpath fill=\"%23888\" d=\"M5 21q-.825 0-1.413-.588T3 19v-6.6l3 3l4-4l4 4l4-4l3 3V19q0 .825-.588 1.413T19 21H5ZM5 3h14q.825 0 1.413.588T21 5v6.575l-3-3l-4 4l-4-4l-4 4l-3-3V5q0-.825.588-1.413T5 3Z\"%2F%3E%3C%2Fsvg%3E'\n    },\n    /**\n     * 从value构建图片下载url的方法\n     * 支持异步\n     */\n    buildUrl: {\n      type: Function,\n      default: function (value: any) {\n        return value;\n      }\n    },\n    buildUrls: {\n      type: Function,\n      default: null\n    },\n    /**\n     * 从value或url构建预览大图的方法\n     * 支持异步\n     */\n    buildPreviewUrl: {\n      type: Function,\n      default: function ({ url, value, index }: any) {\n        return url;\n      }\n    },\n\n    buildPreviewUrls: {\n      type: Function,\n      default: null\n    }\n  },\n  setup(props: any, ctx) {\n    const { ui } = useUi();\n    type ImageItem = {\n      value?: any;\n      url?: string;\n      index?: number;\n      previewUrl?: string;\n    };\n    const imageListRef: Ref<any[]> = ref([]);\n\n    const errorBinding = computed(() => {\n      return _.merge({ style: {} }, { style: ctx.attrs.style });\n    });\n\n    const computedValues = computed(() => {\n      const urls: any = [];\n      if (props.modelValue == null || props.modelValue === \"\") {\n        return urls;\n      }\n      if (typeof props.modelValue === \"string\") {\n        urls.push(props.modelValue);\n      } else if (Array.isArray(props.modelValue)) {\n        for (const item of props.modelValue) {\n          if (item == null) {\n            continue;\n          }\n          if (item.url != null) {\n            urls.push(item.url);\n          } else {\n            urls.push(item);\n          }\n        }\n      } else {\n        //object\n        if (props.modelValue.url != null) {\n          urls.push(props.modelValue.url);\n        } else {\n          urls.push(props.modelValue);\n        }\n      }\n      return urls;\n    });\n\n    function buildImageList(images: ImageItem[]) {\n      const urls: string[] = [];\n      const previewUrls: string[] = [];\n      for (let i = 0; i < images.length; i++) {\n        const image = images[i];\n        urls.push(image.url as string);\n        previewUrls.push(image.previewUrl as string);\n      }\n      const imageList: any[] = [];\n      for (let i = 0; i < images.length; i++) {\n        const image = images[i];\n        const url = image.url;\n        const previewUrl = image.url;\n        const preview = ui.image.buildPreviewBind({\n          url,\n          urls,\n          previewUrl,\n          previewUrls,\n          index: i\n        });\n        imageList.push({\n          fit: \"contain\",\n          src: url,\n          [ui.image.fallback]: props.error,\n          ...ctx.attrs,\n          ...preview\n        });\n      }\n      return imageList;\n    }\n\n    async function buildImageListUrls(list: ImageItem[]) {\n      if (props.buildUrls) {\n        const values = list.map((item) => item.value);\n        const urls = await props.buildUrls(values);\n        for (let i = 0; i < list.length; i++) {\n          list[i].url = urls[i];\n        }\n        let previewUrls = urls;\n        if (props.buildPreviewUrls) {\n          previewUrls = await props.buildPreviewUrls(list);\n        }\n        for (let i = 0; i < list.length; i++) {\n          list[i].previewUrl = previewUrls[i];\n        }\n      } else if (props.buildUrl) {\n        for (let item of list) {\n          item.url = await props.buildUrl(item.value);\n          item.previewUrl = item.url;\n          if (props.buildPreviewUrl) {\n            item.previewUrl = await props.buildPreviewUrl(item);\n          }\n        }\n      } else {\n        for (let i = 0; i < list.length; i++) {\n          list[i].url = list[i].value;\n          list[i].previewUrl = list[i].value;\n        }\n      }\n    }\n\n    async function buildImageListByValue(values: any) {\n      const images: ImageItem[] = [];\n      for (let i = 0; i < values.length; i++) {\n        let value = values[i];\n        images.push({\n          value,\n          index: i\n        });\n      }\n\n      await buildImageListUrls(images);\n\n      return buildImageList(images);\n    }\n\n    async function buildImageListByUrls(urls: any) {\n      const list: ImageItem[] = [];\n      if (typeof urls === \"string\") {\n        list.push({\n          value: urls,\n          url: urls,\n          index: 0,\n          previewUrl: urls\n        });\n      } else if (urls instanceof Array) {\n        if (urls.length > 0) {\n          if (typeof urls[0] === \"string\") {\n            for (let i = 0; i < urls.length; i++) {\n              const url = urls[i];\n              list.push({\n                value: url,\n                url: url,\n                previewUrl: url,\n                index: i\n              });\n            }\n          } else {\n            for (let i = 0; i < urls.length; i++) {\n              const url = urls[i];\n              list.push({\n                value: url.url,\n                ...url,\n                index: i\n              });\n            }\n          }\n        }\n      } else {\n        // is object\n        list.push({\n          value: urls.url,\n          ...urls,\n          index: 0\n        });\n      }\n\n      return buildImageList(list);\n    }\n    watch(\n      () => {\n        return computedValues.value;\n      },\n      async (values) => {\n        if (!props.urls) {\n          imageListRef.value = await buildImageListByValue(values);\n        }\n      },\n      {\n        immediate: true\n      }\n    );\n\n    watch(\n      () => {\n        return props.urls;\n      },\n      async (value) => {\n        if (value) {\n          imageListRef.value = await buildImageListByUrls(value);\n        }\n      },\n      {\n        immediate: true\n      }\n    );\n\n    return { imageListRef, ui, errorBinding };\n  }\n});\n</script>\n<style lang=\"less\">\n.fs-image-format {\n  display: flex;\n  margin: 1px;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n\n  .fs-box {\n    display: flex;\n    align-items: center;\n  }\n\n  .fs-image-item {\n    border: 1px solid #eee;\n    margin: 0 1px;\n    object-fit: fill;\n    background-color: #eee;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .fs-image-slot {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    //  height: 100%;\n    width: 100%;\n    height: 100%;\n  }\n\n  .el-image-viewer__close {\n    color: #fff;\n  }\n\n  .el-image__error,\n  .el-image__inner,\n  .el-image__placeholder {\n    height: auto;\n  }\n\n  .el-image__wrapper {\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n}\n</style>\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "/*!\n  * @soerenmartius/vue3-clipboard v0.1.2\n  * (c) 2021 Soeren Martius\n  * @license MIT\n  */\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar clipboard = createCommonjsModule(function (module, exports) {\n/*!\n * clipboard.js v2.0.6\n * https://clipboardjs.com/\n * \n * Licensed MIT © Zeno Rocha\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tmodule.exports = factory();\n})(commonjsGlobal, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nfunction select(element) {\n    var selectedText;\n\n    if (element.nodeName === 'SELECT') {\n        element.focus();\n\n        selectedText = element.value;\n    }\n    else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n        var isReadOnly = element.hasAttribute('readonly');\n\n        if (!isReadOnly) {\n            element.setAttribute('readonly', '');\n        }\n\n        element.select();\n        element.setSelectionRange(0, element.value.length);\n\n        if (!isReadOnly) {\n            element.removeAttribute('readonly');\n        }\n\n        selectedText = element.value;\n    }\n    else {\n        if (element.hasAttribute('contenteditable')) {\n            element.focus();\n        }\n\n        var selection = window.getSelection();\n        var range = document.createRange();\n\n        range.selectNodeContents(element);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        selectedText = selection.toString();\n    }\n\n    return selectedText;\n}\n\nmodule.exports = select;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nfunction E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    }\n    listener._ = callback;\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar is = __webpack_require__(3);\nvar delegate = __webpack_require__(4);\n\n/**\n * Validates all params and calls the right\n * listener function based on its target type.\n *\n * @param {String|HTMLElement|HTMLCollection|NodeList} target\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listen(target, type, callback) {\n    if (!target && !type && !callback) {\n        throw new Error('Missing required arguments');\n    }\n\n    if (!is.string(type)) {\n        throw new TypeError('Second argument must be a String');\n    }\n\n    if (!is.fn(callback)) {\n        throw new TypeError('Third argument must be a Function');\n    }\n\n    if (is.node(target)) {\n        return listenNode(target, type, callback);\n    }\n    else if (is.nodeList(target)) {\n        return listenNodeList(target, type, callback);\n    }\n    else if (is.string(target)) {\n        return listenSelector(target, type, callback);\n    }\n    else {\n        throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');\n    }\n}\n\n/**\n * Adds an event listener to a HTML element\n * and returns a remove listener function.\n *\n * @param {HTMLElement} node\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNode(node, type, callback) {\n    node.addEventListener(type, callback);\n\n    return {\n        destroy: function() {\n            node.removeEventListener(type, callback);\n        }\n    }\n}\n\n/**\n * Add an event listener to a list of HTML elements\n * and returns a remove listener function.\n *\n * @param {NodeList|HTMLCollection} nodeList\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNodeList(nodeList, type, callback) {\n    Array.prototype.forEach.call(nodeList, function(node) {\n        node.addEventListener(type, callback);\n    });\n\n    return {\n        destroy: function() {\n            Array.prototype.forEach.call(nodeList, function(node) {\n                node.removeEventListener(type, callback);\n            });\n        }\n    }\n}\n\n/**\n * Add an event listener to a selector\n * and returns a remove listener function.\n *\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenSelector(selector, type, callback) {\n    return delegate(document.body, selector, type, callback);\n}\n\nmodule.exports = listen;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n/**\n * Check if argument is a HTML element.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.node = function(value) {\n    return value !== undefined\n        && value instanceof HTMLElement\n        && value.nodeType === 1;\n};\n\n/**\n * Check if argument is a list of HTML elements.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.nodeList = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return value !== undefined\n        && (type === '[object NodeList]' || type === '[object HTMLCollection]')\n        && ('length' in value)\n        && (value.length === 0 || exports.node(value[0]));\n};\n\n/**\n * Check if argument is a string.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.string = function(value) {\n    return typeof value === 'string'\n        || value instanceof String;\n};\n\n/**\n * Check if argument is a function.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.fn = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return type === '[object Function]';\n};\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar closest = __webpack_require__(5);\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction _delegate(element, selector, type, callback, useCapture) {\n    var listenerFn = listener.apply(this, arguments);\n\n    element.addEventListener(type, listenerFn, useCapture);\n\n    return {\n        destroy: function() {\n            element.removeEventListener(type, listenerFn, useCapture);\n        }\n    }\n}\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element|String|Array} [elements]\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction delegate(elements, selector, type, callback, useCapture) {\n    // Handle the regular Element usage\n    if (typeof elements.addEventListener === 'function') {\n        return _delegate.apply(null, arguments);\n    }\n\n    // Handle Element-less usage, it defaults to global delegation\n    if (typeof type === 'function') {\n        // Use `document` as the first parameter, then apply arguments\n        // This is a short way to .unshift `arguments` without running into deoptimizations\n        return _delegate.bind(null, document).apply(null, arguments);\n    }\n\n    // Handle Selector-based usage\n    if (typeof elements === 'string') {\n        elements = document.querySelectorAll(elements);\n    }\n\n    // Handle Array-like based usage\n    return Array.prototype.map.call(elements, function (element) {\n        return _delegate(element, selector, type, callback, useCapture);\n    });\n}\n\n/**\n * Finds closest match and invokes callback.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Function}\n */\nfunction listener(element, selector, type, callback) {\n    return function(e) {\n        e.delegateTarget = closest(e.target, selector);\n\n        if (e.delegateTarget) {\n            callback.call(element, e);\n        }\n    }\n}\n\nmodule.exports = delegate;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nvar DOCUMENT_NODE_TYPE = 9;\n\n/**\n * A polyfill for Element.matches()\n */\nif (typeof Element !== 'undefined' && !Element.prototype.matches) {\n    var proto = Element.prototype;\n\n    proto.matches = proto.matchesSelector ||\n                    proto.mozMatchesSelector ||\n                    proto.msMatchesSelector ||\n                    proto.oMatchesSelector ||\n                    proto.webkitMatchesSelector;\n}\n\n/**\n * Finds the closest parent that matches a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @return {Function}\n */\nfunction closest (element, selector) {\n    while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {\n        if (typeof element.matches === 'function' &&\n            element.matches(selector)) {\n          return element;\n        }\n        element = element.parentNode;\n    }\n}\n\nmodule.exports = closest;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/select/src/select.js\nvar src_select = __webpack_require__(0);\nvar select_default = /*#__PURE__*/__webpack_require__.n(src_select);\n\n// CONCATENATED MODULE: ./src/clipboard-action.js\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n/**\n * Inner class which performs selection from either `text` or `target`\n * properties and then executes copy or cut operations.\n */\n\nvar clipboard_action_ClipboardAction = function () {\n    /**\n     * @param {Object} options\n     */\n    function ClipboardAction(options) {\n        _classCallCheck(this, ClipboardAction);\n\n        this.resolveOptions(options);\n        this.initSelection();\n    }\n\n    /**\n     * Defines base properties passed from constructor.\n     * @param {Object} options\n     */\n\n\n    _createClass(ClipboardAction, [{\n        key: 'resolveOptions',\n        value: function resolveOptions() {\n            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            this.action = options.action;\n            this.container = options.container;\n            this.emitter = options.emitter;\n            this.target = options.target;\n            this.text = options.text;\n            this.trigger = options.trigger;\n\n            this.selectedText = '';\n        }\n\n        /**\n         * Decides which selection strategy is going to be applied based\n         * on the existence of `text` and `target` properties.\n         */\n\n    }, {\n        key: 'initSelection',\n        value: function initSelection() {\n            if (this.text) {\n                this.selectFake();\n            } else if (this.target) {\n                this.selectTarget();\n            }\n        }\n\n        /**\n         * Creates a fake textarea element, sets its value from `text` property,\n         * and makes a selection on it.\n         */\n\n    }, {\n        key: 'selectFake',\n        value: function selectFake() {\n            var _this = this;\n\n            var isRTL = document.documentElement.getAttribute('dir') == 'rtl';\n\n            this.removeFake();\n\n            this.fakeHandlerCallback = function () {\n                return _this.removeFake();\n            };\n            this.fakeHandler = this.container.addEventListener('click', this.fakeHandlerCallback) || true;\n\n            this.fakeElem = document.createElement('textarea');\n            // Prevent zooming on iOS\n            this.fakeElem.style.fontSize = '12pt';\n            // Reset box model\n            this.fakeElem.style.border = '0';\n            this.fakeElem.style.padding = '0';\n            this.fakeElem.style.margin = '0';\n            // Move element out of screen horizontally\n            this.fakeElem.style.position = 'absolute';\n            this.fakeElem.style[isRTL ? 'right' : 'left'] = '-9999px';\n            // Move element to the same position vertically\n            var yPosition = window.pageYOffset || document.documentElement.scrollTop;\n            this.fakeElem.style.top = yPosition + 'px';\n\n            this.fakeElem.setAttribute('readonly', '');\n            this.fakeElem.value = this.text;\n\n            this.container.appendChild(this.fakeElem);\n\n            this.selectedText = select_default()(this.fakeElem);\n            this.copyText();\n        }\n\n        /**\n         * Only removes the fake element after another click event, that way\n         * a user can hit `Ctrl+C` to copy because selection still exists.\n         */\n\n    }, {\n        key: 'removeFake',\n        value: function removeFake() {\n            if (this.fakeHandler) {\n                this.container.removeEventListener('click', this.fakeHandlerCallback);\n                this.fakeHandler = null;\n                this.fakeHandlerCallback = null;\n            }\n\n            if (this.fakeElem) {\n                this.container.removeChild(this.fakeElem);\n                this.fakeElem = null;\n            }\n        }\n\n        /**\n         * Selects the content from element passed on `target` property.\n         */\n\n    }, {\n        key: 'selectTarget',\n        value: function selectTarget() {\n            this.selectedText = select_default()(this.target);\n            this.copyText();\n        }\n\n        /**\n         * Executes the copy operation based on the current selection.\n         */\n\n    }, {\n        key: 'copyText',\n        value: function copyText() {\n            var succeeded = void 0;\n\n            try {\n                succeeded = document.execCommand(this.action);\n            } catch (err) {\n                succeeded = false;\n            }\n\n            this.handleResult(succeeded);\n        }\n\n        /**\n         * Fires an event based on the copy operation result.\n         * @param {Boolean} succeeded\n         */\n\n    }, {\n        key: 'handleResult',\n        value: function handleResult(succeeded) {\n            this.emitter.emit(succeeded ? 'success' : 'error', {\n                action: this.action,\n                text: this.selectedText,\n                trigger: this.trigger,\n                clearSelection: this.clearSelection.bind(this)\n            });\n        }\n\n        /**\n         * Moves focus away from `target` and back to the trigger, removes current selection.\n         */\n\n    }, {\n        key: 'clearSelection',\n        value: function clearSelection() {\n            if (this.trigger) {\n                this.trigger.focus();\n            }\n            document.activeElement.blur();\n            window.getSelection().removeAllRanges();\n        }\n\n        /**\n         * Sets the `action` to be performed which can be either 'copy' or 'cut'.\n         * @param {String} action\n         */\n\n    }, {\n        key: 'destroy',\n\n\n        /**\n         * Destroy lifecycle.\n         */\n        value: function destroy() {\n            this.removeFake();\n        }\n    }, {\n        key: 'action',\n        set: function set() {\n            var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'copy';\n\n            this._action = action;\n\n            if (this._action !== 'copy' && this._action !== 'cut') {\n                throw new Error('Invalid \"action\" value, use either \"copy\" or \"cut\"');\n            }\n        }\n\n        /**\n         * Gets the `action` property.\n         * @return {String}\n         */\n        ,\n        get: function get() {\n            return this._action;\n        }\n\n        /**\n         * Sets the `target` property using an element\n         * that will be have its content copied.\n         * @param {Element} target\n         */\n\n    }, {\n        key: 'target',\n        set: function set(target) {\n            if (target !== undefined) {\n                if (target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && target.nodeType === 1) {\n                    if (this.action === 'copy' && target.hasAttribute('disabled')) {\n                        throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\n                    }\n\n                    if (this.action === 'cut' && (target.hasAttribute('readonly') || target.hasAttribute('disabled'))) {\n                        throw new Error('Invalid \"target\" attribute. You can\\'t cut text from elements with \"readonly\" or \"disabled\" attributes');\n                    }\n\n                    this._target = target;\n                } else {\n                    throw new Error('Invalid \"target\" value, use a valid Element');\n                }\n            }\n        }\n\n        /**\n         * Gets the `target` property.\n         * @return {String|HTMLElement}\n         */\n        ,\n        get: function get() {\n            return this._target;\n        }\n    }]);\n\n    return ClipboardAction;\n}();\n\n/* harmony default export */ var clipboard_action = (clipboard_action_ClipboardAction);\n// EXTERNAL MODULE: ./node_modules/tiny-emitter/index.js\nvar tiny_emitter = __webpack_require__(1);\nvar tiny_emitter_default = /*#__PURE__*/__webpack_require__.n(tiny_emitter);\n\n// EXTERNAL MODULE: ./node_modules/good-listener/src/listen.js\nvar listen = __webpack_require__(2);\nvar listen_default = /*#__PURE__*/__webpack_require__.n(listen);\n\n// CONCATENATED MODULE: ./src/clipboard.js\nvar clipboard_typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar clipboard_createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction clipboard_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n/**\n * Base class which takes one or more elements, adds event listeners to them,\n * and instantiates a new `ClipboardAction` on each click.\n */\n\nvar clipboard_Clipboard = function (_Emitter) {\n    _inherits(Clipboard, _Emitter);\n\n    /**\n     * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n     * @param {Object} options\n     */\n    function Clipboard(trigger, options) {\n        clipboard_classCallCheck(this, Clipboard);\n\n        var _this = _possibleConstructorReturn(this, (Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).call(this));\n\n        _this.resolveOptions(options);\n        _this.listenClick(trigger);\n        return _this;\n    }\n\n    /**\n     * Defines if attributes would be resolved using internal setter functions\n     * or custom functions that were passed in the constructor.\n     * @param {Object} options\n     */\n\n\n    clipboard_createClass(Clipboard, [{\n        key: 'resolveOptions',\n        value: function resolveOptions() {\n            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            this.action = typeof options.action === 'function' ? options.action : this.defaultAction;\n            this.target = typeof options.target === 'function' ? options.target : this.defaultTarget;\n            this.text = typeof options.text === 'function' ? options.text : this.defaultText;\n            this.container = clipboard_typeof(options.container) === 'object' ? options.container : document.body;\n        }\n\n        /**\n         * Adds a click event listener to the passed trigger.\n         * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n         */\n\n    }, {\n        key: 'listenClick',\n        value: function listenClick(trigger) {\n            var _this2 = this;\n\n            this.listener = listen_default()(trigger, 'click', function (e) {\n                return _this2.onClick(e);\n            });\n        }\n\n        /**\n         * Defines a new `ClipboardAction` on each click event.\n         * @param {Event} e\n         */\n\n    }, {\n        key: 'onClick',\n        value: function onClick(e) {\n            var trigger = e.delegateTarget || e.currentTarget;\n\n            if (this.clipboardAction) {\n                this.clipboardAction = null;\n            }\n\n            this.clipboardAction = new clipboard_action({\n                action: this.action(trigger),\n                target: this.target(trigger),\n                text: this.text(trigger),\n                container: this.container,\n                trigger: trigger,\n                emitter: this\n            });\n        }\n\n        /**\n         * Default `action` lookup function.\n         * @param {Element} trigger\n         */\n\n    }, {\n        key: 'defaultAction',\n        value: function defaultAction(trigger) {\n            return getAttributeValue('action', trigger);\n        }\n\n        /**\n         * Default `target` lookup function.\n         * @param {Element} trigger\n         */\n\n    }, {\n        key: 'defaultTarget',\n        value: function defaultTarget(trigger) {\n            var selector = getAttributeValue('target', trigger);\n\n            if (selector) {\n                return document.querySelector(selector);\n            }\n        }\n\n        /**\n         * Returns the support of the given action, or all actions if no action is\n         * given.\n         * @param {String} [action]\n         */\n\n    }, {\n        key: 'defaultText',\n\n\n        /**\n         * Default `text` lookup function.\n         * @param {Element} trigger\n         */\n        value: function defaultText(trigger) {\n            return getAttributeValue('text', trigger);\n        }\n\n        /**\n         * Destroy lifecycle.\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.listener.destroy();\n\n            if (this.clipboardAction) {\n                this.clipboardAction.destroy();\n                this.clipboardAction = null;\n            }\n        }\n    }], [{\n        key: 'isSupported',\n        value: function isSupported() {\n            var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['copy', 'cut'];\n\n            var actions = typeof action === 'string' ? [action] : action;\n            var support = !!document.queryCommandSupported;\n\n            actions.forEach(function (action) {\n                support = support && !!document.queryCommandSupported(action);\n            });\n\n            return support;\n        }\n    }]);\n\n    return Clipboard;\n}(tiny_emitter_default.a);\n\n/**\n * Helper function to retrieve attribute value.\n * @param {String} suffix\n * @param {Element} element\n */\n\n\nfunction getAttributeValue(suffix, element) {\n    var attribute = 'data-clipboard-' + suffix;\n\n    if (!element.hasAttribute(attribute)) {\n        return;\n    }\n\n    return element.getAttribute(attribute);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (clipboard_Clipboard);\n\n/***/ })\n/******/ ])[\"default\"];\n});\n});\n\nvar ClipboardJS = /*@__PURE__*/getDefaultExportFromCjs(clipboard);\n\nconst defaultConfig = {\r\n    autoSetContainer: false,\r\n    appendToBody: true,\r\n};\r\nconst VueClipboard = {\r\n    config: (options) => {\r\n        const { autoSetContainer, appendToBody } = options;\r\n        defaultConfig.autoSetContainer = autoSetContainer ? autoSetContainer : false;\r\n        defaultConfig.appendToBody = appendToBody ? appendToBody : true;\r\n    },\r\n    install: (app) => {\r\n        app.config.globalProperties.$vclipboard = toClipboard;\r\n        app.directive('clipboard', {\r\n            beforeMount(el, binding) {\r\n                if (binding.arg === 'success') {\r\n                    el._vClipboard_success = binding.value;\r\n                }\r\n                else if (binding.arg === 'error') {\r\n                    el._vClipboard_error = binding.value;\r\n                }\r\n                else {\r\n                    const clipboard = new ClipboardJS(el, {\r\n                        text: () => binding.value,\r\n                        action: () => {\r\n                            return binding.arg === 'cut' ? 'cut' : 'copy';\r\n                        },\r\n                        container: defaultConfig.autoSetContainer ? el : undefined,\r\n                    });\r\n                    clipboard.on('success', (e) => {\r\n                        const callback = el._vClipboard_success;\r\n                        callback && callback(e);\r\n                    });\r\n                    clipboard.on('error', (e) => {\r\n                        const callback = el._vClipboard_error;\r\n                        callback && callback(e);\r\n                    });\r\n                    el._vClipboard = clipboard;\r\n                }\r\n            },\r\n            updated(el, binding) {\r\n                if (binding.arg === 'success') {\r\n                    el._vClipboard_success = binding.value;\r\n                }\r\n                else if (binding.arg === 'error') {\r\n                    el._vClipboard_error = binding.value;\r\n                }\r\n                else {\r\n                    el._vClipboard.text = () => {\r\n                        return binding.value;\r\n                    };\r\n                    el._vClipboard.action = () => {\r\n                        return binding.arg === 'cut' ? 'cut' : 'copy';\r\n                    };\r\n                }\r\n            },\r\n            unmounted(el, binding) {\r\n                if (binding.arg === 'success') {\r\n                    delete el._vClipboard_success;\r\n                }\r\n                else if (binding.arg === 'error') {\r\n                    delete el._vClipboard_error;\r\n                }\r\n                else {\r\n                    el._vClipboard.destroy();\r\n                    delete el._vClipboard;\r\n                }\r\n            },\r\n        });\r\n    },\r\n    toClipboard: (text, action) => toClipboard(text, action),\r\n};\r\nconst toClipboard = (text, action = 'copy') => {\r\n    return new Promise((resolve, reject) => {\r\n        const fakeElement = document.createElement('button');\r\n        const clipboard = new ClipboardJS(fakeElement, {\r\n            text: () => text,\r\n            action: () => action,\r\n        });\r\n        clipboard.on('success', (e) => {\r\n            clipboard.destroy();\r\n            resolve(e);\r\n        });\r\n        clipboard.on('error', (e) => {\r\n            clipboard.destroy();\r\n            reject(e);\r\n        });\r\n        if (defaultConfig.appendToBody) {\r\n            document.body.appendChild(fakeElement);\r\n        }\r\n        fakeElement.click();\r\n        if (defaultConfig.appendToBody) {\r\n            document.body.removeChild(fakeElement);\r\n        }\r\n    });\r\n};\n\nexport { VueClipboard, toClipboard };\n", null, null, null, null, null, "<template>\n  <div class=\"fs-phone-input\">\n    <fs-dict-select\n      :disabled=\"disabled\"\n      :readonly=\"readonly\"\n      :filterable=\"filterable\"\n      :clearable=\"clearable\"\n      :options=\"countryOptions\"\n      :dict=\"countryDict\"\n      :show-search=\"true\"\n      :allow-clear=\"true\"\n      v-bind=\"computedSelect\"\n    />\n    <component\n      :is=\"ui.input.name\"\n      type=\"text\"\n      :clearable=\"clearable\"\n      :disabled=\"disabled\"\n      :readonly=\"readonly\"\n      :allow-clear=\"true\"\n      v-bind=\"computedInput\"\n    >\n    </component>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { countries } from \"./phoneCodeCountries.js\";\nimport { computed, Ref, ref, watch } from \"vue\";\nimport { dict, useUi } from \"@fast-crud/fast-crud\";\nimport _ from \"lodash-es\";\nconst { ui } = useUi();\n\ntype PhoneInputValue = {\n  callingCode?: string;\n  countryCode?: string;\n  phoneNumber?: string;\n};\n\ntype PhoneInputProps = {\n  /**\n   * 选择框参数\n   */\n  select?: {\n    width?: string;\n    placeholder?: string;\n    [key: string]: any;\n  };\n\n  /**\n   * 号码框参数\n   */\n  input?: {\n    placeholder?: string;\n    [key: string]: any;\n  };\n  /**\n   * 输入输出值\n   */\n  modelValue?: PhoneInputValue; // 结构\n  /**\n   * 仅限哪些国家\n   */\n  onlyCountries?: string[];\n  /**\n   * 忽略哪些国家\n   */\n  ignoredCountries?: string[];\n  /**\n   * 优先哪些国家\n   */\n  priorityCountries?: string[];\n\n  clearable?: boolean;\n  filterable?: boolean;\n  /**\n   * 默认国家\n   */\n  defaultCountry?: string;\n  disabled?: boolean;\n  readonly?: boolean;\n};\nconst formValidator = ui.formItem.injectFormItemContext();\nconst props = withDefaults(defineProps<PhoneInputProps>(), {\n  defaultCountry: \"CN\"\n});\n\nconst emits = defineEmits([\"change\", \"input\", \"update:modelValue\"]);\n// eslint-disable-next-line vue/no-setup-props-destructure\nconst selectValue: Ref = ref<PhoneInputValue>(\n  props.modelValue || {\n    callingCode: undefined, // 电话区号\n    countryCode: undefined, // 国家代码\n    phoneNumber: undefined // 电话号码\n  }\n);\n\nconst countryDict = dict({\n  value: \"iso2\",\n  label: \"label\"\n});\n\nconst countryOptions = computed(() => {\n  let options = [];\n  if (props.onlyCountries != null && props.onlyCountries.length > 0) {\n    for (let country of countries) {\n      if (props.onlyCountries.find((item) => item.toLowerCase() === country.iso2.toLowerCase())) {\n        options.push(country);\n      }\n    }\n  } else {\n    const priorityCountries = props.priorityCountries || [];\n    const ignoredCountries = props.ignoredCountries || [];\n    const priorities = [];\n    const leaved = [];\n    for (let country of countries) {\n      if (priorityCountries.find((item) => item.toLowerCase() === country.iso2.toLowerCase())) {\n        priorities.push(country);\n      }\n      if (!ignoredCountries.find((item) => item.toLowerCase() === country.iso2.toLowerCase())) {\n        leaved.push(country);\n      }\n    }\n    options = priorities.concat(leaved);\n  }\n\n  options = options.map((item) => {\n    return {\n      ...item,\n      label: item.name + \"(\" + item.dialCode + \")\"\n    };\n  });\n  return options;\n});\n\nconst computedSelect = computed(() => {\n  const def = {\n    placeholder: \"请选择\",\n    [ui.select.filterable]: true,\n    [ui.select.clearable]: true,\n    [ui.select.modelValue]: selectValue.value.countryCode,\n    [\"onUpdate:\" + ui.select.modelValue]: handleSelectInput\n  };\n  return _.merge(def, props.select);\n});\n\nconst computedInput = computed(() => {\n  const def: any = {\n    placeholder: \"请输入\",\n    [ui.select.clearable]: true,\n    [ui.input.modelValue]: selectValue.value.phoneNumber,\n    [`onUpdate:${ui.input.modelValue}`]: handleNumberInput\n  };\n  return _.merge(def, props.input);\n});\n\nfunction isChanged(value: any) {\n  if (value === selectValue.value) {\n    return false;\n  }\n  return true;\n  // if (value && selectValue.value) {\n  //   return (\n  //     value.callingCode !== selectValue.value.callingCode ||\n  //     value.countryCode !== selectValue.value.countryCode ||\n  //     value.phoneNumber !== selectValue.value.phoneNumber\n  //   );\n  // } else {\n  //   return value !== selectValue.value;\n  // }\n}\n\nfunction setValue(value: any) {\n  selectValue.value = { callingCode: undefined, countryCode: undefined, phoneNumber: undefined };\n  const ret = getCountryByValue(value);\n  if (ret != null) {\n    selectValue.value.callingCode = ret.callingCode;\n    selectValue.value.countryCode = ret.countryCode;\n  }\n  if (value && value.phoneNumber) {\n    selectValue.value.phoneNumber = value.phoneNumber;\n  } else {\n    selectValue.value.phoneNumber = undefined;\n  }\n}\nfunction getCountryByValue(value: any): any {\n  let ret: any = null;\n  if (value != null) {\n    if (value.countryCode != null) {\n      ret = countryOptions.value.find((item) => item.iso2 === value.countryCode);\n    } else if (value.callingCode != null) {\n      ret = countryOptions.value.find((item) => item.dialCode === value.callingCode);\n    }\n  }\n  if (ret != null) {\n    ret = {\n      callingCode: ret.dialCode,\n      countryCode: ret.iso2\n    };\n  }\n  if (ret == null) {\n    ret = getCountryByValue({ countryCode: props.defaultCountry });\n  }\n  return ret;\n}\n\nfunction handleSelectInput(countryCode: any) {\n  changeCountry(countryCode);\n  let emitValue: any = getEmitValue();\n  emits(\"update:modelValue\", emitValue);\n  emits(\"input\", emitValue);\n  emits(\"change\", emitValue);\n  formValidator.onChange();\n  formValidator.onBlur();\n}\n\nfunction handleNumberInput(number: any) {\n  selectValue.value.phoneNumber = number;\n  if (selectValue.value.callingCode == null && selectValue.value.countryCode == null) {\n    selectValue.value.countryCode = props.defaultCountry;\n    const country = getCountryByValue(selectValue.value);\n    if (country) {\n      selectValue.value.callingCode = country.callingCode;\n    }\n  }\n  let emitValue = getEmitValue();\n  emits(\"update:modelValue\", emitValue);\n  emits(\"input\", emitValue);\n  emits(\"change\", emitValue);\n  formValidator.onChange();\n  formValidator.onBlur();\n}\n\nfunction getEmitValue(): PhoneInputValue {\n  return {\n    countryCode: selectValue.value.countryCode,\n    callingCode: selectValue.value.callingCode,\n    phoneNumber: selectValue.value.phoneNumber\n  };\n}\n\nfunction changeCountry(countryCode: any) {\n  if (!countryCode) {\n    selectValue.value.callingCode = undefined;\n  }\n  selectValue.value.countryCode = countryCode;\n  let ret = getCountryByValue(selectValue.value);\n  if (ret) {\n    selectValue.value.callingCode = ret.callingCode;\n  }\n}\n\nwatch(\n  () => {\n    return props.modelValue;\n  },\n  (value, oldValue) => {\n    setValue(value);\n    emits(\"change\", selectValue.value);\n  },\n  {\n    immediate: true\n  }\n);\n</script>\n<style lang=\"less\">\n.fs-phone-input {\n  display: flex;\n  align-items: center;\n  .ant-select {\n    width: 120px;\n    max-width: 50%;\n    .ant-select-selector {\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  }\n\n  .ant-input,\n  .ant-input-affix-wrapper {\n    border-bottom-left-radius: 0;\n    border-top-left-radius: 0;\n    border-left: 0;\n  }\n\n  .el-select {\n    width: 100px;\n    max-width: 50%;\n\n    .el-input {\n      border-right: 0;\n    }\n    .el-input__wrapper {\n      border-right: 0;\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  }\n  .el-input {\n    border-left: 0;\n    .el-input__wrapper {\n      border-bottom-left-radius: 0;\n      border-top-left-radius: 0;\n      border-left: 0;\n    }\n  }\n\n  .n-select {\n    width: 100px;\n    max-width: 50%;\n    .n-base-selection {\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n    .n-base-selection__border {\n      border-right: 0;\n    }\n  }\n\n  .n-input {\n    border-bottom-left-radius: 0;\n    border-top-left-radius: 0;\n  }\n}\n</style>\n", "// This file is a workaround for a bug in web browsers' \"native\"\n// ES6 importing system which is uncapable of importing \"*.json\" files.\n// https://github.com/catamphetamine/libphonenumber-js/issues/239\nexport default {\"version\":4,\"country_calling_codes\":{\"1\":[\"US\",\"AG\",\"AI\",\"AS\",\"BB\",\"BM\",\"BS\",\"CA\",\"DM\",\"DO\",\"GD\",\"GU\",\"JM\",\"KN\",\"KY\",\"LC\",\"MP\",\"MS\",\"PR\",\"SX\",\"TC\",\"TT\",\"VC\",\"VG\",\"VI\"],\"7\":[\"RU\",\"KZ\"],\"20\":[\"EG\"],\"27\":[\"ZA\"],\"30\":[\"GR\"],\"31\":[\"NL\"],\"32\":[\"BE\"],\"33\":[\"FR\"],\"34\":[\"ES\"],\"36\":[\"HU\"],\"39\":[\"IT\",\"VA\"],\"40\":[\"RO\"],\"41\":[\"CH\"],\"43\":[\"AT\"],\"44\":[\"GB\",\"GG\",\"IM\",\"JE\"],\"45\":[\"DK\"],\"46\":[\"SE\"],\"47\":[\"NO\",\"SJ\"],\"48\":[\"PL\"],\"49\":[\"DE\"],\"51\":[\"PE\"],\"52\":[\"MX\"],\"53\":[\"CU\"],\"54\":[\"AR\"],\"55\":[\"BR\"],\"56\":[\"CL\"],\"57\":[\"CO\"],\"58\":[\"VE\"],\"60\":[\"MY\"],\"61\":[\"AU\",\"CC\",\"CX\"],\"62\":[\"ID\"],\"63\":[\"PH\"],\"64\":[\"NZ\"],\"65\":[\"SG\"],\"66\":[\"TH\"],\"81\":[\"JP\"],\"82\":[\"KR\"],\"84\":[\"VN\"],\"86\":[\"CN\"],\"90\":[\"TR\"],\"91\":[\"IN\"],\"92\":[\"PK\"],\"93\":[\"AF\"],\"94\":[\"LK\"],\"95\":[\"MM\"],\"98\":[\"IR\"],\"211\":[\"SS\"],\"212\":[\"MA\",\"EH\"],\"213\":[\"DZ\"],\"216\":[\"TN\"],\"218\":[\"LY\"],\"220\":[\"GM\"],\"221\":[\"SN\"],\"222\":[\"MR\"],\"223\":[\"ML\"],\"224\":[\"GN\"],\"225\":[\"CI\"],\"226\":[\"BF\"],\"227\":[\"NE\"],\"228\":[\"TG\"],\"229\":[\"BJ\"],\"230\":[\"MU\"],\"231\":[\"LR\"],\"232\":[\"SL\"],\"233\":[\"GH\"],\"234\":[\"NG\"],\"235\":[\"TD\"],\"236\":[\"CF\"],\"237\":[\"CM\"],\"238\":[\"CV\"],\"239\":[\"ST\"],\"240\":[\"GQ\"],\"241\":[\"GA\"],\"242\":[\"CG\"],\"243\":[\"CD\"],\"244\":[\"AO\"],\"245\":[\"GW\"],\"246\":[\"IO\"],\"247\":[\"AC\"],\"248\":[\"SC\"],\"249\":[\"SD\"],\"250\":[\"RW\"],\"251\":[\"ET\"],\"252\":[\"SO\"],\"253\":[\"DJ\"],\"254\":[\"KE\"],\"255\":[\"TZ\"],\"256\":[\"UG\"],\"257\":[\"BI\"],\"258\":[\"MZ\"],\"260\":[\"ZM\"],\"261\":[\"MG\"],\"262\":[\"RE\",\"YT\"],\"263\":[\"ZW\"],\"264\":[\"NA\"],\"265\":[\"MW\"],\"266\":[\"LS\"],\"267\":[\"BW\"],\"268\":[\"SZ\"],\"269\":[\"KM\"],\"290\":[\"SH\",\"TA\"],\"291\":[\"ER\"],\"297\":[\"AW\"],\"298\":[\"FO\"],\"299\":[\"GL\"],\"350\":[\"GI\"],\"351\":[\"PT\"],\"352\":[\"LU\"],\"353\":[\"IE\"],\"354\":[\"IS\"],\"355\":[\"AL\"],\"356\":[\"MT\"],\"357\":[\"CY\"],\"358\":[\"FI\",\"AX\"],\"359\":[\"BG\"],\"370\":[\"LT\"],\"371\":[\"LV\"],\"372\":[\"EE\"],\"373\":[\"MD\"],\"374\":[\"AM\"],\"375\":[\"BY\"],\"376\":[\"AD\"],\"377\":[\"MC\"],\"378\":[\"SM\"],\"380\":[\"UA\"],\"381\":[\"RS\"],\"382\":[\"ME\"],\"383\":[\"XK\"],\"385\":[\"HR\"],\"386\":[\"SI\"],\"387\":[\"BA\"],\"389\":[\"MK\"],\"420\":[\"CZ\"],\"421\":[\"SK\"],\"423\":[\"LI\"],\"500\":[\"FK\"],\"501\":[\"BZ\"],\"502\":[\"GT\"],\"503\":[\"SV\"],\"504\":[\"HN\"],\"505\":[\"NI\"],\"506\":[\"CR\"],\"507\":[\"PA\"],\"508\":[\"PM\"],\"509\":[\"HT\"],\"590\":[\"GP\",\"BL\",\"MF\"],\"591\":[\"BO\"],\"592\":[\"GY\"],\"593\":[\"EC\"],\"594\":[\"GF\"],\"595\":[\"PY\"],\"596\":[\"MQ\"],\"597\":[\"SR\"],\"598\":[\"UY\"],\"599\":[\"CW\",\"BQ\"],\"670\":[\"TL\"],\"672\":[\"NF\"],\"673\":[\"BN\"],\"674\":[\"NR\"],\"675\":[\"PG\"],\"676\":[\"TO\"],\"677\":[\"SB\"],\"678\":[\"VU\"],\"679\":[\"FJ\"],\"680\":[\"PW\"],\"681\":[\"WF\"],\"682\":[\"CK\"],\"683\":[\"NU\"],\"685\":[\"WS\"],\"686\":[\"KI\"],\"687\":[\"NC\"],\"688\":[\"TV\"],\"689\":[\"PF\"],\"690\":[\"TK\"],\"691\":[\"FM\"],\"692\":[\"MH\"],\"850\":[\"KP\"],\"852\":[\"HK\"],\"853\":[\"MO\"],\"855\":[\"KH\"],\"856\":[\"LA\"],\"880\":[\"BD\"],\"886\":[\"TW\"],\"960\":[\"MV\"],\"961\":[\"LB\"],\"962\":[\"JO\"],\"963\":[\"SY\"],\"964\":[\"IQ\"],\"965\":[\"KW\"],\"966\":[\"SA\"],\"967\":[\"YE\"],\"968\":[\"OM\"],\"970\":[\"PS\"],\"971\":[\"AE\"],\"972\":[\"IL\"],\"973\":[\"BH\"],\"974\":[\"QA\"],\"975\":[\"BT\"],\"976\":[\"MN\"],\"977\":[\"NP\"],\"992\":[\"TJ\"],\"993\":[\"TM\"],\"994\":[\"AZ\"],\"995\":[\"GE\"],\"996\":[\"KG\"],\"998\":[\"UZ\"]},\"countries\":{\"AC\":[\"247\",\"00\",\"(?:[01589]\\\\d|[46])\\\\d{4}\",[5,6],0,0,0,0,0,0,0,[[\"6[2-467]\\\\d{3}\",[5]],[\"4\\\\d{4}\",[5]],0,0,0,0,[\"(?:0[1-9]|[1589]\\\\d)\\\\d{4}\",[6]]]],\"AD\":[\"376\",\"00\",\"(?:1|6\\\\d)\\\\d{7}|[135-9]\\\\d{5}\",[6,8,9],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"[135-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]],0,0,0,0,0,0,[[\"[78]\\\\d{5}\",[6]],[\"690\\\\d{6}|[356]\\\\d{5}\",[6,9]],[\"180[02]\\\\d{4}\",[8]],[\"[19]\\\\d{5}\",[6]]]],\"AE\":[\"971\",\"00\",\"(?:[4-7]\\\\d|9[0-689])\\\\d{7}|800\\\\d{2,9}|[2-4679]\\\\d{7}\",[5,6,7,8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{2,9})\",\"$1 $2\",[\"60|8\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[236]|[479][2-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{5})\",\"$1 $2 $3\",[\"[479]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"[2-4679][2-8]\\\\d{6}\",[8]],[\"5[024-68]\\\\d{7}\",[9]],[\"400\\\\d{6}|800\\\\d{2,9}\"],[\"900[02]\\\\d{5}\",[9]],0,0,[\"600[25]\\\\d{5}\",[9]],0,0,[\"700[05]\\\\d{5}\",[9]]]],\"AF\":[\"93\",\"00\",\"[2-7]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:[25][0-8]|[34][0-4]|6[0-5])[2-9]\\\\d{6}\"],[\"7\\\\d{8}\"]]],\"AG\":[\"1\",\"011\",\"(?:268|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([457]\\\\d{6})$|1\",\"268$1\",0,\"268\",[[\"268(?:4(?:6[0-38]|84)|56[0-2])\\\\d{4}\"],[\"268(?:464|7(?:1[3-9]|[28]\\\\d|3[0246]|64|7[0-689]))\\\\d{4}\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"],0,0,[\"26840[69]\\\\d{4}\"],[\"26848[01]\\\\d{4}\"]]],\"AI\":[\"1\",\"011\",\"(?:264|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2457]\\\\d{6})$|1\",\"264$1\",0,\"264\",[[\"264(?:292|4(?:6[12]|9[78]))\\\\d{4}\"],[\"264(?:235|4(?:69|76)|5(?:3[6-9]|8[1-4])|7(?:29|72))\\\\d{4}\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"],0,0,[\"264724\\\\d{4}\"]]],\"AL\":[\"355\",\"00\",\"(?:700\\\\d\\\\d|900)\\\\d{3}|8\\\\d{5,7}|(?:[2-5]|6\\\\d)\\\\d{7}\",[6,7,8,9],[[\"(\\\\d{3})(\\\\d{3,4})\",\"$1 $2\",[\"80|9\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2358][2-5]|4\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[23578]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"6\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"4505[0-2]\\\\d{3}|(?:[2358][16-9]\\\\d[2-9]|4410)\\\\d{4}|(?:[2358][2-5][2-9]|4(?:[2-57-9][2-9]|6\\\\d))\\\\d{5}\",[8]],[\"6(?:[78][2-9]|9\\\\d)\\\\d{6}\",[9]],[\"800\\\\d{4}\",[7]],[\"900[1-9]\\\\d\\\\d\",[6]],[\"700[2-9]\\\\d{4}\",[8]],0,0,0,0,[\"808[1-9]\\\\d\\\\d\",[6]]]],\"AM\":[\"374\",\"00\",\"(?:[1-489]\\\\d|55|60|77)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]0\"],\"0 $1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2|3[12]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"1|47\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[3-9]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:(?:1[0-25]|47)\\\\d|2(?:2[2-46]|3[1-8]|4[2-69]|5[2-7]|6[1-9]|8[1-7])|3[12]2)\\\\d{5}\"],[\"(?:33|4[1349]|55|77|88|9[13-9])\\\\d{6}\"],[\"800\\\\d{5}\"],[\"90[016]\\\\d{5}\"],0,0,0,0,[\"60(?:2[78]|3[5-9]|4[02-9]|5[0-46-9]|[6-8]\\\\d|9[0-2])\\\\d{4}\"],[\"80[1-4]\\\\d{5}\"]]],\"AO\":[\"244\",\"00\",\"[29]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[29]\"]]],0,0,0,0,0,0,[[\"2\\\\d(?:[0134][25-9]|[25-9]\\\\d)\\\\d{5}\"],[\"9[1-579]\\\\d{7}\"]]],\"AR\":[\"54\",\"00\",\"(?:11|[89]\\\\d\\\\d)\\\\d{8}|[2368]\\\\d{9}\",[10,11],[[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$1 $2-$3\",[\"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])\",\"2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)\",\"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"],\"0$1\",1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"1\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[68]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[23]\"],\"0$1\",1],[\"(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9(?:2[2-469]|3[3-578])\",\"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))\",\"9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)\",\"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"],\"0$1\",0,\"$1 $2 $3-$4\"],[\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$2 15-$3-$4\",[\"91\"],\"0$1\",0,\"$1 $2 $3-$4\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1-$2-$3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9\"],\"0$1\",0,\"$1 $2 $3-$4\"]],\"0\",0,\"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?\",\"9$1\",0,0,[[\"3(?:7(?:1[15]|81)|8(?:21|4[16]|69|9[12]))[46]\\\\d{5}|(?:2(?:657|9(?:54|66))|3(?:7(?:55|77)|865))[2-8]\\\\d{5}|(?:2(?:2(?:2[59]|44|52)|3(?:26|44)|473|9(?:[07]2|2[26]|34|46))|3327)[45]\\\\d{5}|(?:2(?:284|3(?:02|23)|920)|3(?:4(?:46|8[27]|92)|541|878))[2-7]\\\\d{5}|(?:2(?:(?:26|62)2|320|477|9(?:42|83))|3(?:329|4(?:62|76|89)|564))[2-6]\\\\d{5}|(?:(?:11[1-8]|670)\\\\d|2(?:2(?:0[45]|1[2-6]|3[3-6])|3(?:[06]4|7[45])|494|6(?:04|1[2-8]|[36][45]|4[3-6])|80[45]|9(?:[17][4-6]|[48][45]|9[3-6]))|3(?:364|4(?:1[2-8]|[235][4-6]|84)|5(?:1[2-9]|[38][4-6])|6(?:2[45]|44)|7[069][45]|8(?:0[45]|[17][2-6]|3[4-6]|5[3-6]|8[3-68])))\\\\d{6}|2(?:2(?:21|4[23]|6[145]|7[1-4]|8[356]|9[267])|3(?:16|3[13-8]|43|5[346-8]|9[3-5])|475|6(?:2[46]|4[78]|5[1568])|9(?:03|2[1457-9]|3[1356]|4[08]|[56][23]|82))4\\\\d{5}|(?:2(?:2(?:57|81)|3(?:24|46|92)|9(?:01|23|64))|3(?:4(?:42|71)|5(?:25|37|4[347]|71)|7(?:18|5[17])))[3-6]\\\\d{5}|(?:2(?:2(?:02|2[3467]|4[156]|5[45]|6[6-8]|91)|3(?:1[47]|25|[45][25]|96)|47[48]|625|932)|3(?:38[2578]|4(?:0[0-24-9]|3[78]|4[457]|58|6[03-9]|72|83|9[136-8])|5(?:2[124]|[368][23]|4[2689]|7[2-6])|7(?:16|2[15]|3[145]|4[13]|5[468]|7[2-5]|8[26])|8(?:2[5-7]|3[278]|4[3-5]|5[78]|6[1-378]|[78]7|94)))[4-6]\\\\d{5}\",[10]],[\"93(?:7(?:1[15]|81)|8(?:21|4[16]|69|9[12]))[46]\\\\d{5}|9(?:2(?:657|9(?:54|66))|3(?:7(?:55|77)|865))[2-8]\\\\d{5}|9(?:2(?:2(?:2[59]|44|52)|3(?:26|44)|473|9(?:[07]2|2[26]|34|46))|3327)[45]\\\\d{5}|9(?:2(?:284|3(?:02|23)|920)|3(?:4(?:46|8[27]|92)|541|878))[2-7]\\\\d{5}|9(?:2(?:(?:26|62)2|320|477|9(?:42|83))|3(?:329|4(?:62|76|89)|564))[2-6]\\\\d{5}|(?:675\\\\d|9(?:11[1-8]\\\\d|2(?:2(?:0[45]|1[2-6]|3[3-6])|3(?:[06]4|7[45])|494|6(?:04|1[2-8]|[36][45]|4[3-6])|80[45]|9(?:[17][4-6]|[48][45]|9[3-6]))|3(?:364|4(?:1[2-8]|[235][4-6]|84)|5(?:1[2-9]|[38][4-6])|6(?:2[45]|44)|7[069][45]|8(?:0[45]|[17][2-6]|3[4-6]|5[3-6]|8[3-68]))))\\\\d{6}|92(?:2(?:21|4[23]|6[145]|7[1-4]|8[356]|9[267])|3(?:16|3[13-8]|43|5[346-8]|9[3-5])|475|6(?:2[46]|4[78]|5[1568])|9(?:03|2[1457-9]|3[1356]|4[08]|[56][23]|82))4\\\\d{5}|9(?:2(?:2(?:57|81)|3(?:24|46|92)|9(?:01|23|64))|3(?:4(?:42|71)|5(?:25|37|4[347]|71)|7(?:18|5[17])))[3-6]\\\\d{5}|9(?:2(?:2(?:02|2[3467]|4[156]|5[45]|6[6-8]|91)|3(?:1[47]|25|[45][25]|96)|47[48]|625|932)|3(?:38[2578]|4(?:0[0-24-9]|3[78]|4[457]|58|6[03-9]|72|83|9[136-8])|5(?:2[124]|[368][23]|4[2689]|7[2-6])|7(?:16|2[15]|3[145]|4[13]|5[468]|7[2-5]|8[26])|8(?:2[5-7]|3[278]|4[3-5]|5[78]|6[1-378]|[78]7|94)))[4-6]\\\\d{5}\"],[\"800\\\\d{7,8}\"],[\"60[04579]\\\\d{7}\",[10]],0,0,[\"810\\\\d{7}\",[10]]]],\"AS\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|684|900)\\\\d{7}\",[10],0,\"1\",0,\"([267]\\\\d{6})$|1\",\"684$1\",0,\"684\",[[\"6846(?:22|33|44|55|77|88|9[19])\\\\d{4}\"],[\"684(?:2(?:48|5[2468]|7[26])|7(?:3[13]|70|82))\\\\d{4}\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"AT\":[\"43\",\"00\",\"1\\\\d{3,12}|2\\\\d{6,12}|43(?:(?:0\\\\d|5[02-9])\\\\d{3,9}|2\\\\d{4,5}|[3467]\\\\d{4}|8\\\\d{4,6}|9\\\\d{4,7})|5\\\\d{4,12}|8\\\\d{7,12}|9\\\\d{8,12}|(?:[367]\\\\d|4[0-24-9])\\\\d{4,11}\",[4,5,6,7,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{3,12})\",\"$1 $2\",[\"1(?:11|[2-9])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})\",\"$1 $2\",[\"517\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"5[079]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,10})\",\"$1 $2\",[\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,9})\",\"$1 $2\",[\"[2-467]|5[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4,7})\",\"$1 $2 $3\",[\"5\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"1(?:11\\\\d|[2-9]\\\\d{3,11})|(?:316|463|(?:51|66|73)2)\\\\d{3,10}|(?:2(?:1[467]|2[13-8]|5[2357]|6[1-46-8]|7[1-8]|8[124-7]|9[1458])|3(?:1[1-578]|3[23568]|4[5-7]|5[1378]|6[1-38]|8[3-68])|4(?:2[1-8]|35|7[1368]|8[2457])|5(?:2[1-8]|3[357]|4[147]|5[12578]|6[37])|6(?:13|2[1-47]|4[135-8]|5[468])|7(?:2[1-8]|35|4[13478]|5[68]|6[16-8]|7[1-6]|9[45]))\\\\d{4,10}\"],[\"6(?:5[0-3579]|6[013-9]|[7-9]\\\\d)\\\\d{4,10}\",[7,8,9,10,11,12,13]],[\"800\\\\d{6,10}\",[9,10,11,12,13]],[\"(?:8[69][2-68]|9(?:0[01]|3[019]))\\\\d{6,10}\",[9,10,11,12,13]],0,0,0,0,[\"5(?:0[1-9]|17|[79]\\\\d)\\\\d{2,10}|7[28]0\\\\d{6,10}\",[5,6,7,8,9,10,11,12,13]],[\"8(?:10|2[018])\\\\d{6,10}|828\\\\d{5}\",[8,9,10,11,12,13]]]],\"AU\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{7}(?:\\\\d(?:\\\\d{2})?)?|8[0-24-9]\\\\d{7})|[2-478]\\\\d{8}|1\\\\d{4,7}\",[5,6,7,8,9,10,12],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"16\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"16\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"14|4\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[2378]\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:30|[89])\"]]],\"0\",0,\"(183[12])|0\",0,0,0,[[\"(?:(?:(?:2(?:[0-26-9]\\\\d|3[0-8]|4[02-9]|5[0135-9])|7(?:[013-57-9]\\\\d|2[0-8]))\\\\d|3(?:(?:[0-3589]\\\\d|6[1-9]|7[0-35-9])\\\\d|4(?:[0-578]\\\\d|90)))\\\\d\\\\d|8(?:51(?:0(?:0[03-9]|[12479]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\\\d|7[89]|9[0-4])|3\\\\d\\\\d)|(?:6[0-8]|[78]\\\\d)\\\\d{3}|9(?:[02-9]\\\\d{3}|1(?:(?:[0-58]\\\\d|6[0135-9])\\\\d|7(?:0[0-24-9]|[1-9]\\\\d)|9(?:[0-46-9]\\\\d|5[0-79])))))\\\\d{3}\",[9]],[\"4(?:79[01]|83[0-389]|94[0-4])\\\\d{5}|4(?:[0-36]\\\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,[\"163\\\\d{2,6}\",[5,6,7,8,9]],[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"AW\":[\"297\",\"00\",\"(?:[25-79]\\\\d\\\\d|800)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[25-9]\"]]],0,0,0,0,0,0,[[\"5(?:2\\\\d|8[1-9])\\\\d{4}\"],[\"(?:290|5[69]\\\\d|6(?:[03]0|22|4[0-2]|[69]\\\\d)|7(?:[34]\\\\d|7[07])|9(?:6[45]|9[4-8]))\\\\d{4}\"],[\"800\\\\d{4}\"],[\"900\\\\d{4}\"],0,0,0,0,[\"(?:28\\\\d|501)\\\\d{4}\"]]],\"AX\":[\"358\",\"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\"2\\\\d{4,9}|35\\\\d{4,5}|(?:60\\\\d\\\\d|800)\\\\d{4,6}|7\\\\d{5,11}|(?:[14]\\\\d|3[0-46-9]|50)\\\\d{4,8}\",[5,6,7,8,9,10,11,12],0,\"0\",0,0,0,0,\"18\",[[\"18[1-8]\\\\d{3,6}\",[6,7,8,9]],[\"4946\\\\d{2,6}|(?:4[0-8]|50)\\\\d{4,8}\",[6,7,8,9,10]],[\"800\\\\d{4,6}\",[7,8,9]],[\"[67]00\\\\d{5,6}\",[8,9]],0,0,[\"20\\\\d{4,8}|60[12]\\\\d{5,6}|7(?:099\\\\d{4,5}|5[03-9]\\\\d{3,7})|20[2-59]\\\\d\\\\d|(?:606|7(?:0[78]|1|3\\\\d))\\\\d{7}|(?:10|29|3[09]|70[1-5]\\\\d)\\\\d{4,8}\"]],\"00\"],\"AZ\":[\"994\",\"00\",\"365\\\\d{6}|(?:[124579]\\\\d|60|88)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[28]|2|365|46\",\"1[28]|2|365[45]|46\",\"1[28]|2|365(?:4|5[02])|46\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[13-9]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:2[12]428|3655[02])\\\\d{4}|(?:2(?:22[0-79]|63[0-28])|3654)\\\\d{5}|(?:(?:1[28]|46)\\\\d|2(?:[014-6]2|[23]3))\\\\d{6}\"],[\"36554\\\\d{4}|(?:[16]0|4[04]|5[015]|7[07]|99)\\\\d{7}\"],[\"88\\\\d{7}\"],[\"900200\\\\d{3}\"]]],\"BA\":[\"387\",\"00\",\"6\\\\d{8}|(?:[35689]\\\\d|49|70)\\\\d{6}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[1-3]|[7-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2-$3\",[\"[3-5]|6[56]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"6\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:3(?:[05-79][2-9]|1[4579]|[23][24-9]|4[2-4689]|8[2457-9])|49[2-579]|5(?:0[2-49]|[13][2-9]|[268][2-4679]|4[4689]|5[2-79]|7[2-69]|9[2-4689]))\\\\d{5}\",[8]],[\"6040\\\\d{5}|6(?:03|[1-356]|44|7\\\\d)\\\\d{6}\"],[\"8[08]\\\\d{6}\",[8]],[\"9[0246]\\\\d{6}\",[8]],0,0,[\"703[235]0\\\\d{3}|70(?:2[0-5]|3[0146]|[56]0)\\\\d{4}\",[8]],0,0,[\"8[12]\\\\d{6}\",[8]]]],\"BB\":[\"1\",\"011\",\"(?:246|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"246$1\",0,\"246\",[[\"246521[0369]\\\\d{3}|246(?:2(?:2[78]|7[0-4])|4(?:1[024-6]|2\\\\d|3[2-9])|5(?:20|[34]\\\\d|54|7[1-3])|6(?:2\\\\d|38)|7[35]7|9(?:1[89]|63))\\\\d{4}\"],[\"246(?:(?:2(?:[3568]\\\\d|4[0-57-9])|3(?:5[2-9]|6[0-6])|4(?:46|5\\\\d)|69[5-7]|8(?:[2-5]\\\\d|83))\\\\d|52(?:1[147]|20))\\\\d{3}\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"(?:246976|900[2-9]\\\\d\\\\d)\\\\d{4}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"],0,[\"246(?:292|367|4(?:1[7-9]|3[01]|4[47-9]|67)|7(?:1[2-9]|2\\\\d|3[016]|53))\\\\d{4}\"],0,[\"24631\\\\d{5}\"]]],\"BD\":[\"880\",\"00\",\"[1-469]\\\\d{9}|8[0-79]\\\\d{7,8}|[2-79]\\\\d{8}|[2-9]\\\\d{7}|[3-9]\\\\d{6}|[57-9]\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1-$2\",[\"31[5-8]|[459]1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1-$2\",[\"3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:[15]|28|4[14])|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,6})\",\"$1-$2\",[\"[13-9]|22\"],\"0$1\"],[\"(\\\\d)(\\\\d{7,8})\",\"$1-$2\",[\"2\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:4(?:31\\\\d\\\\d|423)|5222)\\\\d{3}(?:\\\\d{2})?|8332[6-9]\\\\d\\\\d|(?:3(?:03[56]|224)|4(?:22[25]|653))\\\\d{3,4}|(?:3(?:42[47]|529|823)|4(?:027|525|65(?:28|8))|562|6257|7(?:1(?:5[3-5]|6[12]|7[156]|89)|22[589]56|32|42675|52(?:[25689](?:56|8)|[347]8)|71(?:6[1267]|75|89)|92374)|82(?:2[59]|32)56|9(?:03[23]56|23(?:256|373)|31|5(?:1|2[4589]56)))\\\\d{3}|(?:3(?:02[348]|22[35]|324|422)|4(?:22[67]|32[236-9]|6(?:2[46]|5[57])|953)|5526|6(?:024|6655)|81)\\\\d{4,5}|(?:2(?:7(?:1[0-267]|2[0-289]|3[0-29]|4[01]|5[1-3]|6[013]|7[0178]|91)|8(?:0[125]|1[1-6]|2[0157-9]|3[1-69]|41|6[1-35]|7[1-5]|8[1-8]|9[0-6])|9(?:0[0-2]|1[0-4]|2[568]|3[3-6]|5[5-7]|6[0136-9]|7[0-7]|8[014-9]))|3(?:0(?:2[025-79]|3[2-4])|181|22[12]|32[2356]|824)|4(?:02[09]|22[348]|32[045]|523|6(?:27|54))|666(?:22|53)|7(?:22[57-9]|42[56]|82[35])8|8(?:0[124-9]|2(?:181|2[02-4679]8)|4[12]|[5-7]2)|9(?:[04]2|2(?:2|328)|81))\\\\d{4}|(?:2(?:2\\\\d|[45])\\\\d\\\\d|3(?:1(?:2[5-7]|[5-7])|425|822)|4(?:033|1\\\\d|[257]1|332|4(?:2[246]|5[25])|6(?:2[35]|56|62)|8(?:23|54)|92[2-5])|5(?:02[03489]|22[457]|32[35-79]|42[46]|6(?:[18]|53)|724|826)|6(?:023|2(?:2[2-5]|5[3-5]|8)|32[3478]|42[34]|52[47]|6(?:[18]|6(?:2[34]|5[24]))|[78]2[2-5]|92[2-6])|7(?:02|21\\\\d|[3-589]1|6[12]|72[24])|8(?:217|3[12]|[5-7]1)|9[24]1)\\\\d{5}|(?:(?:3[2-8]|5[2-57-9]|6[03-589])1|4[4689][18])\\\\d{5}|[59]1\\\\d{5}\"],[\"(?:1[13-9]\\\\d|644)\\\\d{7}|(?:3[78]|44|66)[02-9]\\\\d{7}\",[10]],[\"80[03]\\\\d{7}\",[10]],0,0,0,0,0,[\"96(?:0[469]|1[0-47]|3[389]|43|6[69]|7[78])\\\\d{6}\",[10]]]],\"BE\":[\"32\",\"00\",\"4\\\\d{8}|[1-9]\\\\d{7}\",[8,9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:80|9)0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[239]|4[23]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[15-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"80[2-8]\\\\d{5}|(?:1[0-69]|[23][2-8]|4[23]|5\\\\d|6[013-57-9]|71|8[1-79]|9[2-4])\\\\d{6}\",[8]],[\"4[5-9]\\\\d{7}\",[9]],[\"800[1-9]\\\\d{4}\",[8]],[\"(?:70(?:2[0-57]|3[04-7]|44|6[4-69]|7[0579])|90\\\\d\\\\d)\\\\d{4}\",[8]],0,0,[\"78(?:0[57]|1[014-8]|2[25]|3[15-8]|48|[56]0|7[06-8]|9\\\\d)\\\\d{4}\",[8]],0,0,[\"7879\\\\d{4}\",[8]]]],\"BF\":[\"226\",\"00\",\"[025-7]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[025-7]\"]]],0,0,0,0,0,0,[[\"2(?:0(?:49|5[23]|6[5-7]|9[016-9])|4(?:4[569]|5[4-6]|6[5-7]|7[0179])|5(?:[34]\\\\d|50|6[5-7]))\\\\d{4}\"],[\"(?:0[1-35-7]|5[0-8]|[67]\\\\d)\\\\d{6}\"]]],\"BG\":[\"359\",\"00\",\"00800\\\\d{7}|[2-7]\\\\d{6,7}|[89]\\\\d{6,8}|2\\\\d{5}\",[6,7,8,9,12],[[\"(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"43[1-6]|70[1-9]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:70|8)0\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3\",[\"43[1-7]|7\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[48]|9[08]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"2\\\\d{5,7}|(?:43[1-6]|70[1-9])\\\\d{4,5}|(?:[36]\\\\d|4[124-7]|[57][1-9]|8[1-6]|9[1-7])\\\\d{5,6}\",[6,7,8]],[\"(?:43[07-9]|99[69]\\\\d)\\\\d{5}|(?:8[7-9]|98)\\\\d{7}\",[8,9]],[\"(?:00800\\\\d\\\\d|800)\\\\d{5}\",[8,12]],[\"90\\\\d{6}\",[8]],0,0,0,0,0,[\"700\\\\d{5}\",[8]]]],\"BH\":[\"973\",\"00\",\"[136-9]\\\\d{7}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[13679]|8[02-4679]\"]]],0,0,0,0,0,0,[[\"(?:1(?:3[1356]|6[0156]|7\\\\d)\\\\d|6(?:1[16]\\\\d|500|6(?:0\\\\d|3[12]|44|55|7[7-9]|88)|9[69][69])|7(?:[07]\\\\d\\\\d|1(?:11|78)))\\\\d{4}\"],[\"(?:3(?:[0-79]\\\\d|8[0-57-9])\\\\d|6(?:3(?:00|33|6[16])|441|6(?:3[03-9]|[69]\\\\d|7[0-689])))\\\\d{4}\"],[\"8[02369]\\\\d{6}\"],[\"(?:87|9[0-8])\\\\d{6}\"],0,0,0,0,0,[\"84\\\\d{6}\"]]],\"BI\":[\"257\",\"00\",\"(?:[267]\\\\d|31)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2367]\"]]],0,0,0,0,0,0,[[\"(?:22|31)\\\\d{6}\"],[\"(?:29|[67][125-9])\\\\d{6}\"]]],\"BJ\":[\"229\",\"00\",\"[24-689]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24-689]\"]]],0,0,0,0,0,0,[[\"2(?:02|1[037]|2[45]|3[68]|4\\\\d)\\\\d{5}\"],[\"(?:4[0-7]|[56]\\\\d|9[013-9])\\\\d{6}\"],0,0,0,0,[\"81\\\\d{6}\"],0,[\"857[58]\\\\d{4}\"]]],\"BL\":[\"590\",\"00\",\"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],0,\"0\",0,0,0,0,0,[[\"590(?:2[7-9]|3[3-7]|5[12]|87)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\\\d)|6(?:1[016-9]|5[0-4]|[67]\\\\d))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:(?:39[5-7]|76[018])\\\\d|475[0-5])\\\\d{4}\"]]],\"BM\":[\"1\",\"011\",\"(?:441|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"441$1\",0,\"441\",[[\"441(?:[46]\\\\d\\\\d|5(?:4\\\\d|60|89))\\\\d{4}\"],[\"441(?:[2378]\\\\d|5[0-39]|9[02])\\\\d{5}\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"BN\":[\"673\",\"00\",\"[2-578]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-578]\"]]],0,0,0,0,0,0,[[\"22[0-7]\\\\d{4}|(?:2[013-9]|[34]\\\\d|5[0-25-9])\\\\d{5}\"],[\"(?:22[89]|[78]\\\\d\\\\d)\\\\d{4}\"],0,0,0,0,0,0,[\"5[34]\\\\d{5}\"]]],\"BO\":[\"591\",\"00(?:1\\\\d)?\",\"(?:[2-467]\\\\d\\\\d|8001)\\\\d{5}\",[8,9],[[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"[23]|4[46]\"]],[\"(\\\\d{8})\",\"$1\",[\"[67]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],\"0\",0,\"0(1\\\\d)?\",0,0,0,[[\"(?:2(?:2\\\\d\\\\d|5(?:11|[258]\\\\d|9[67])|6(?:12|2\\\\d|9[34])|8(?:2[34]|39|62))|3(?:3\\\\d\\\\d|4(?:6\\\\d|8[24])|8(?:25|42|5[257]|86|9[25])|9(?:[27]\\\\d|3[2-4]|4[248]|5[24]|6[2-6]))|4(?:4\\\\d\\\\d|6(?:11|[24689]\\\\d|72)))\\\\d{4}\",[8]],[\"[67]\\\\d{7}\",[8]],[\"8001[07]\\\\d{4}\",[9]]]],\"BQ\":[\"599\",\"00\",\"(?:[34]1|7\\\\d)\\\\d{5}\",[7],0,0,0,0,0,0,\"[347]\",[[\"(?:318[023]|41(?:6[023]|70)|7(?:1[578]|2[05]|50)\\\\d)\\\\d{3}\"],[\"(?:31(?:8[14-8]|9[14578])|416[14-9]|7(?:0[01]|7[07]|8\\\\d|9[056])\\\\d)\\\\d{3}\"]]],\"BR\":[\"55\",\"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)\",\"(?:[1-46-9]\\\\d\\\\d|5(?:[0-46-9]\\\\d|5[0-46-9]))\\\\d{8}|[1-9]\\\\d{9}|[3589]\\\\d{8}|[34]\\\\d{7}\",[8,9,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"300|4(?:0[02]|37)\",\"4(?:02|37)0|[34]00\"]],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{4})\",\"$1 $2 $3\",[\"(?:[358]|90)0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1 $2-$3\",[\"[16][1-9]|[2-57-9]\"],\"($1)\"]],\"0\",0,\"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\",\"$2\",0,0,[[\"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-5]\\\\d{7}\",[10]],[\"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])(?:7|9\\\\d)\\\\d{7}\",[10,11]],[\"800\\\\d{6,7}\",[9,10]],[\"300\\\\d{6}|[59]00\\\\d{6,7}\",[9,10]],0,0,0,0,0,[\"(?:30[03]\\\\d{3}|4(?:0(?:0\\\\d|20)|370))\\\\d{4}|300\\\\d{5}\",[8,10]]]],\"BS\":[\"1\",\"011\",\"(?:242|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([3-8]\\\\d{6})$|1\",\"242$1\",0,\"242\",[[\"242(?:3(?:02|[236][1-9]|4[0-24-9]|5[0-68]|7[347]|8[0-4]|9[2-467])|461|502|6(?:0[1-5]|12|2[013]|[45]0|7[67]|8[78]|9[89])|7(?:02|88))\\\\d{4}\"],[\"242(?:3(?:5[79]|7[56]|95)|4(?:[23][1-9]|4[1-35-9]|5[1-8]|6[2-8]|7\\\\d|81)|5(?:2[45]|3[35]|44|5[1-46-9]|65|77)|6[34]6|7(?:27|38)|8(?:0[1-9]|1[02-9]|2\\\\d|3[0-4]|[89]9))\\\\d{4}\"],[\"242300\\\\d{4}|8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"],0,[\"242225\\\\d{4}\"]]],\"BT\":[\"975\",\"00\",\"[17]\\\\d{7}|[2-8]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-68]|7[246]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[67]|7\"]]],0,0,0,0,0,0,[[\"(?:2[3-6]|[34][5-7]|5[236]|6[2-46]|7[246]|8[2-4])\\\\d{5}\",[7]],[\"(?:1[67]|77)\\\\d{6}\",[8]]]],\"BW\":[\"267\",\"00\",\"(?:0800|(?:[37]|800)\\\\d)\\\\d{6}|(?:[2-6]\\\\d|90)\\\\d{5}\",[7,8,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"90\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[24-6]|3[15-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]],0,0,0,0,0,0,[[\"(?:2(?:4[0-48]|6[0-24]|9[0578])|3(?:1[0-35-9]|55|[69]\\\\d|7[013]|81)|4(?:6[03]|7[1267]|9[0-5])|5(?:3[03489]|4[0489]|7[1-47]|88|9[0-49])|6(?:2[1-35]|5[149]|8[013467]))\\\\d{4}\",[7]],[\"(?:321|7[1-8]\\\\d)\\\\d{5}\",[8]],[\"(?:0800|800\\\\d)\\\\d{6}\",[10]],[\"90\\\\d{5}\",[7]],0,0,0,0,[\"79(?:1(?:[0-2]\\\\d|3[0-3])|2[0-7]\\\\d)\\\\d{3}\",[8]]]],\"BY\":[\"375\",\"810\",\"(?:[12]\\\\d|33|44|902)\\\\d{7}|8(?:0[0-79]\\\\d{5,7}|[1-7]\\\\d{9})|8(?:1[0-489]|[5-79]\\\\d)\\\\d{7}|8[1-79]\\\\d{6,7}|8[0-79]\\\\d{5}|8\\\\d{5}\",[6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"800\"],\"8 $1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,4})\",\"$1 $2 $3\",[\"800\"],\"8 $1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{3})\",\"$1 $2-$3\",[\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\",\"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"1(?:[56]|7[467])|2[1-3]\"],\"8 0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[1-4]\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"8 $1\"]],\"8\",0,\"0|80?\",0,0,0,[[\"(?:1(?:5(?:1[1-5]|[24]\\\\d|6[2-4]|9[1-7])|6(?:[235]\\\\d|4[1-7])|7\\\\d\\\\d)|2(?:1(?:[246]\\\\d|3[0-35-9]|5[1-9])|2(?:[235]\\\\d|4[0-8])|3(?:[26]\\\\d|3[02-79]|4[024-7]|5[03-7])))\\\\d{5}\",[9]],[\"(?:2(?:5[5-79]|9[1-9])|(?:33|44)\\\\d)\\\\d{6}\",[9]],[\"800\\\\d{3,7}|8(?:0[13]|20\\\\d)\\\\d{7}\"],[\"(?:810|902)\\\\d{7}\",[10]],0,0,0,0,[\"249\\\\d{6}\",[9]]],\"8~10\"],\"BZ\":[\"501\",\"00\",\"(?:0800\\\\d|[2-8])\\\\d{6}\",[7,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-8]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"0\"]]],0,0,0,0,0,0,[[\"(?:2(?:[02]\\\\d|36|[68]0)|[3-58](?:[02]\\\\d|[68]0)|7(?:[02]\\\\d|32|[68]0))\\\\d{4}\",[7]],[\"6[0-35-7]\\\\d{5}\",[7]],[\"0800\\\\d{7}\",[11]]]],\"CA\":[\"1\",\"011\",\"(?:[2-8]\\\\d|90)\\\\d{8}|3\\\\d{6}\",[7,10],0,\"1\",0,0,0,0,0,[[\"(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|[26]8|3[178]|50|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|7[39])|90[25])[2-9]\\\\d{6}\",[10]],[\"\",[10]],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",[10]],[\"900[2-9]\\\\d{6}\",[10]],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|(?:5(?:00|2[125-9]|33|44|66|77|88)|622)[2-9]\\\\d{6}\",[10]],0,[\"310\\\\d{4}\",[7]],0,[\"600[2-9]\\\\d{6}\",[10]]]],\"CC\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",[6,7,8,9,10,12],0,\"0\",0,\"([59]\\\\d{7})$|0\",\"8$1\",0,0,[[\"8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\\\d|70[23]|959))\\\\d{3}\",[9]],[\"4(?:79[01]|83[0-389]|94[0-4])\\\\d{5}|4(?:[0-36]\\\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,0,[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"CD\":[\"243\",\"00\",\"[189]\\\\d{8}|[1-68]\\\\d{6}\",[7,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[1-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"12\\\\d{7}|[1-6]\\\\d{6}\"],[\"88\\\\d{5}|(?:8[0-69]|9[017-9])\\\\d{7}\"]]],\"CF\":[\"236\",\"00\",\"(?:[27]\\\\d{3}|8776)\\\\d{4}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[278]\"]]],0,0,0,0,0,0,[[\"2[12]\\\\d{6}\"],[\"7[024-7]\\\\d{6}\"],0,[\"8776\\\\d{4}\"]]],\"CG\":[\"242\",\"00\",\"222\\\\d{6}|(?:0\\\\d|80)\\\\d{7}\",[9],[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[02]\"]]],0,0,0,0,0,0,[[\"222[1-589]\\\\d{5}\"],[\"026(?:1[0-5]|6[6-9])\\\\d{4}|0(?:[14-6]\\\\d\\\\d|2(?:40|5[5-8]|6[07-9]))\\\\d{5}\"],0,[\"80[0-2]\\\\d{6}\"]]],\"CH\":[\"41\",\"00\",\"8\\\\d{11}|[2-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8[047]|90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-79]|81\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"8\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:2[12467]|3[1-4]|4[134]|5[256]|6[12]|[7-9]1)\\\\d{7}\"],[\"(?:6[89]|7[235-9])\\\\d{7}\"],[\"800\\\\d{6}\"],[\"90[016]\\\\d{6}\"],[\"878\\\\d{6}\"],0,[\"5[18]\\\\d{7}\"],[\"74[0248]\\\\d{6}\"],0,[\"84[0248]\\\\d{6}\"]]],\"CI\":[\"225\",\"00\",\"[02]\\\\d{9}\",[10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d)(\\\\d{5})\",\"$1 $2 $3 $4\",[\"2\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"0\"]]],0,0,0,0,0,0,[[\"2(?:[15]\\\\d{3}|7(?:2(?:0[23]|1[2357]|2[245]|3[45]|4[3-5])|3(?:06|1[69]|[2-6]7)))\\\\d{5}\"],[\"0[157]\\\\d{8}\"]]],\"CK\":[\"682\",\"00\",\"[2-578]\\\\d{4}\",[5],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"[2-578]\"]]],0,0,0,0,0,0,[[\"(?:2\\\\d|3[13-7]|4[1-5])\\\\d{3}\"],[\"[578]\\\\d{4}\"]]],\"CL\":[\"56\",\"(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0\",\"12300\\\\d{6}|6\\\\d{9,10}|[2-9]\\\\d{8}\",[9,10,11],[[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"219\",\"2196\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"44\"]],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[1-36]\"],\"($1)\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"9[2-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"60|8\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"60\"]]],0,0,0,0,0,0,[[\"2(?:1982[0-6]|3314[05-9])\\\\d{3}|(?:2(?:1(?:160|962)|3(?:2\\\\d\\\\d|3(?:[03467]\\\\d|1[0-35-9]|2[1-9]|5[0-24-9]|8[0-3])|600)|646[59])|80[1-9]\\\\d\\\\d|9(?:3(?:[0-57-9]\\\\d\\\\d|6(?:0[02-9]|[1-9]\\\\d))|6(?:[0-8]\\\\d\\\\d|9(?:[02-79]\\\\d|1[05-9]))|7[1-9]\\\\d\\\\d|9(?:[03-9]\\\\d\\\\d|1(?:[0235-9]\\\\d|4[0-24-9])|2(?:[0-79]\\\\d|8[0-46-9]))))\\\\d{4}|(?:22|3[2-5]|[47][1-35]|5[1-3578]|6[13-57]|8[1-9]|9[2458])\\\\d{7}\",[9]],[\"\",[9]],[\"(?:123|8)00\\\\d{6}\",[9,11]],0,0,0,0,0,[\"44\\\\d{7}\",[9]],[\"600\\\\d{7,8}\",[10,11]]]],\"CM\":[\"237\",\"00\",\"[26]\\\\d{8}|88\\\\d{6,7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"88\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[26]|88\"]]],0,0,0,0,0,0,[[\"2(?:22|33)\\\\d{6}\",[9]],[\"(?:24[23]|6[25-9]\\\\d)\\\\d{6}\",[9]],[\"88\\\\d{6,7}\"]]],\"CN\":[\"86\",\"00|1(?:[12]\\\\d|79)\\\\d\\\\d00\",\"1[127]\\\\d{8,9}|2\\\\d{9}(?:\\\\d{2})?|[12]\\\\d{6,7}|86\\\\d{6}|(?:1[03-689]\\\\d|6)\\\\d{7,9}|(?:[3-579]\\\\d|8[0-57-9])\\\\d{6,9}\",[7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{5,6})\",\"$1 $2\",[\"(?:10|2[0-57-9])[19]\",\"(?:10|2[0-57-9])(?:10|9[56])\",\"10(?:10|9[56])|2[0-57-9](?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]\",\"(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))[19]\",\"85[23](?:10|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:10|9[56])\",\"85[23](?:100|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"(?:4|80)0\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"10|2(?:[02-57-9]|1[1-9])\",\"10|2(?:[02-57-9]|1[1-9])\",\"10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"9\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"80\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-578]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"1[3-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"[12]\"],\"0$1\",1]],\"0\",0,\"(1(?:[12]\\\\d|79)\\\\d\\\\d)|0\",0,0,0,[[\"(?:10(?:[02-79]\\\\d\\\\d|[18](?:0[1-9]|[1-9]\\\\d))|21(?:[18](?:0[1-9]|[1-9]\\\\d)|[2-79]\\\\d\\\\d))\\\\d{5}|(?:43[35]|754)\\\\d{7,8}|8(?:078\\\\d{7}|51\\\\d{7,8})|(?:10|(?:2|85)1|43[35]|754)(?:100\\\\d\\\\d|95\\\\d{3,4})|(?:2[02-57-9]|3(?:11|7[179])|4(?:[15]1|3[12])|5(?:1\\\\d|2[37]|3[12]|51|7[13-79]|9[15])|7(?:[39]1|5[57]|6[09])|8(?:71|98))(?:[02-8]\\\\d{7}|1(?:0(?:0\\\\d\\\\d(?:\\\\d{3})?|[1-9]\\\\d{5})|[1-9]\\\\d{6})|9(?:[0-46-9]\\\\d{6}|5\\\\d{3}(?:\\\\d(?:\\\\d{2})?)?))|(?:3(?:1[02-9]|35|49|5\\\\d|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|3[46-9]|5[2-9]|6[47-9]|7\\\\d|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[17]\\\\d|2[248]|3[04-9]|4[3-6]|5[0-3689]|6[2368]|9[02-9])|8(?:1[236-8]|2[5-7]|3\\\\d|5[2-9]|7[02-9]|8[36-8]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:[02-8]\\\\d{6}|1(?:0(?:0\\\\d\\\\d(?:\\\\d{2})?|[1-9]\\\\d{4})|[1-9]\\\\d{5})|9(?:[0-46-9]\\\\d{5}|5\\\\d{3,5}))\",[7,8,9,10,11]],[\"1740[0-5]\\\\d{6}|1(?:[38]\\\\d|4[57]|[59][0-35-9]|6[25-7]|7[0-35-8])\\\\d{8}\",[11]],[\"(?:(?:10|21)8|8)00\\\\d{7}\",[10,12]],[\"16[08]\\\\d{5}\",[8]],0,0,0,0,0,[\"10(?:10\\\\d{4}|96\\\\d{3,4})|400\\\\d{7}|950\\\\d{7,8}|(?:2[0-57-9]|3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))96\\\\d{3,4}\",[7,8,9,10,11]]],\"00\"],\"CO\":[\"57\",\"00(?:4(?:[14]4|56)|[579])\",\"(?:60\\\\d\\\\d|9101)\\\\d{6}|(?:1\\\\d|3)\\\\d{9}\",[10,11],[[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"6\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3[0-357]|91\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{7})\",\"$1-$2-$3\",[\"1\"],\"0$1\",0,\"$1 $2 $3\"]],\"0\",0,\"0([3579]|4(?:[14]4|56))?\",0,0,0,[[\"601055(?:[0-4]\\\\d|50)\\\\d\\\\d|6010(?:[0-4]\\\\d|5[0-4])\\\\d{4}|60(?:[124-7][2-9]|8[1-9])\\\\d{6}\",[10]],[\"333301[0-5]\\\\d{3}|3333(?:00|2[5-9]|[3-9]\\\\d)\\\\d{4}|(?:3(?:24[1-9]|3(?:00|3[0-24-9]))|9101)\\\\d{6}|3(?:0[0-5]|1\\\\d|2[0-3]|5[01]|70)\\\\d{7}\",[10]],[\"1800\\\\d{7}\",[11]],[\"19(?:0[01]|4[78])\\\\d{7}\",[11]]]],\"CR\":[\"506\",\"00\",\"(?:8\\\\d|90)\\\\d{8}|(?:[24-8]\\\\d{3}|3005)\\\\d{4}\",[8,10],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|8[3-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[89]\"]]],0,0,\"(19(?:0[0-2468]|1[09]|20|66|77|99))\",0,0,0,[[\"210[7-9]\\\\d{4}|2(?:[024-7]\\\\d|1[1-9])\\\\d{5}\",[8]],[\"(?:3005\\\\d|6500[01])\\\\d{3}|(?:5[07]|6[0-4]|7[0-3]|8[3-9])\\\\d{6}\",[8]],[\"800\\\\d{7}\",[10]],[\"90[059]\\\\d{7}\",[10]],0,0,0,0,[\"(?:210[0-6]|4\\\\d{3}|5100)\\\\d{4}\",[8]]]],\"CU\":[\"53\",\"119\",\"(?:[2-7]|8\\\\d\\\\d)\\\\d{7}|[2-47]\\\\d{6}|[34]\\\\d{5}\",[6,7,8,10],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"2[1-4]|[34]\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{6,7})\",\"$1 $2\",[\"7\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"[56]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"8\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:3[23]|4[89])\\\\d{4,6}|(?:31|4[36]|8(?:0[25]|78)\\\\d)\\\\d{6}|(?:2[1-4]|4[1257]|7\\\\d)\\\\d{5,6}\"],[\"(?:5\\\\d|6[2-4])\\\\d{6}\",[8]],[\"800\\\\d{7}\",[10]],0,0,0,0,0,0,[\"807\\\\d{7}\",[10]]]],\"CV\":[\"238\",\"0\",\"(?:[2-59]\\\\d\\\\d|800)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2-589]\"]]],0,0,0,0,0,0,[[\"2(?:2[1-7]|3[0-8]|4[12]|5[1256]|6\\\\d|7[1-3]|8[1-5])\\\\d{4}\"],[\"(?:36|5[1-389]|9\\\\d)\\\\d{5}\"],[\"800\\\\d{4}\"],0,0,0,0,0,[\"(?:3[3-5]|4[356])\\\\d{5}\"]]],\"CW\":[\"599\",\"00\",\"(?:[34]1|60|(?:7|9\\\\d)\\\\d)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[3467]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9[4-8]\"]]],0,0,0,0,0,\"[69]\",[[\"9(?:4(?:3[0-5]|4[14]|6\\\\d)|50\\\\d|7(?:2[014]|3[02-9]|4[4-9]|6[357]|77|8[7-9])|8(?:3[39]|[46]\\\\d|7[01]|8[57-9]))\\\\d{4}\"],[\"953[01]\\\\d{4}|9(?:5[12467]|6[5-9])\\\\d{5}\"],0,0,0,0,0,[\"955\\\\d{5}\",[8]],0,[\"60[0-2]\\\\d{4}\",[7]]]],\"CX\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",[6,7,8,9,10,12],0,\"0\",0,\"([59]\\\\d{7})$|0\",\"8$1\",0,0,[[\"8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\\\d|7(?:0[01]|1[0-2])|958))\\\\d{3}\",[9]],[\"4(?:79[01]|83[0-389]|94[0-4])\\\\d{5}|4(?:[0-36]\\\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,0,[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"CY\":[\"357\",\"00\",\"(?:[279]\\\\d|[58]0)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[257-9]\"]]],0,0,0,0,0,0,[[\"2[2-6]\\\\d{6}\"],[\"9(?:10|[4-79]\\\\d)\\\\d{5}\"],[\"800\\\\d{5}\"],[\"90[09]\\\\d{5}\"],[\"700\\\\d{5}\"],0,[\"(?:50|77)\\\\d{6}\"],0,0,[\"80[1-9]\\\\d{5}\"]]],\"CZ\":[\"420\",\"00\",\"(?:[2-578]\\\\d|60)\\\\d{7}|9\\\\d{8,11}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]|9[015-7]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"96\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]]],0,0,0,0,0,0,[[\"(?:2\\\\d|3[1257-9]|4[16-9]|5[13-9])\\\\d{7}\"],[\"(?:60[1-8]\\\\d|7(?:0(?:[2-5]\\\\d|60)|190|[2379]\\\\d\\\\d))\\\\d{5}\"],[\"800\\\\d{6}\"],[\"9(?:0[05689]|76)\\\\d{6}\"],[\"70[01]\\\\d{6}\"],0,[\"9(?:5\\\\d|7[2-4])\\\\d{6}\"],0,[\"9[17]0\\\\d{6}\"],[\"8[134]\\\\d{7}\"]]],\"DE\":[\"49\",\"00\",\"[2579]\\\\d{5,14}|49(?:[34]0|69|8\\\\d)\\\\d\\\\d?|49(?:37|49|60|7[089]|9\\\\d)\\\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\\\d{1,8}|(?:1|[368]\\\\d|4[0-8])\\\\d{3,13}|49(?:[015]\\\\d|2[13]|31|[46][1-8])\\\\d{1,9}\",[4,5,6,7,8,9,10,11,12,13,14,15],[[\"(\\\\d{2})(\\\\d{3,13})\",\"$1 $2\",[\"3[02]|40|[68]9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,12})\",\"$1 $2\",[\"2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\",\"2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2,11})\",\"$1 $2\",[\"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]\",\"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"138\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{2,10})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,11})\",\"$1 $2\",[\"181\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{4,10})\",\"$1 $2 $3\",[\"1(?:3|80)|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"1[67]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7,12})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{6})\",\"$1 $2\",[\"185\",\"1850\",\"18500\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{7})\",\"$1 $2\",[\"18[68]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{7})\",\"$1 $2\",[\"15[1279]\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{6})\",\"$1 $2\",[\"15[03568]\",\"15(?:[0568]|31)\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{8})\",\"$1 $2\",[\"18\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{7,8})\",\"$1 $2 $3\",[\"1(?:6[023]|7)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{7})\",\"$1 $2 $3\",[\"15[279]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{8})\",\"$1 $2 $3\",[\"15\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"32\\\\d{9,11}|49[1-6]\\\\d{10}|322\\\\d{6}|49[0-7]\\\\d{3,9}|(?:[34]0|[68]9)\\\\d{3,13}|(?:2(?:0[1-689]|[1-3569]\\\\d|4[0-8]|7[1-7]|8[0-7])|3(?:[3569]\\\\d|4[0-79]|7[1-7]|8[1-8])|4(?:1[02-9]|[2-48]\\\\d|5[0-6]|6[0-8]|7[0-79])|5(?:0[2-8]|[124-6]\\\\d|[38][0-8]|[79][0-7])|6(?:0[02-9]|[1-358]\\\\d|[47][0-8]|6[1-9])|7(?:0[2-8]|1[1-9]|[27][0-7]|3\\\\d|[4-6][0-8]|8[0-5]|9[013-7])|8(?:0[2-9]|1[0-79]|2\\\\d|3[0-46-9]|4[0-6]|5[013-9]|6[1-8]|7[0-8]|8[0-24-6])|9(?:0[6-9]|[1-4]\\\\d|[589][0-7]|6[0-8]|7[0-467]))\\\\d{3,12}\",[5,6,7,8,9,10,11,12,13,14,15]],[\"15(?:[0-25-9]\\\\d\\\\d|310)\\\\d{6}|1(?:6[023]|7\\\\d)\\\\d{7,8}\",[10,11]],[\"800\\\\d{7,12}\",[10,11,12,13,14,15]],[\"(?:137[7-9]|900(?:[135]|9\\\\d))\\\\d{6}\",[10,11]],[\"700\\\\d{8}\",[11]],0,[\"18(?:1\\\\d{5,11}|[2-9]\\\\d{8})\",[8,9,10,11,12,13,14]],[\"16(?:4\\\\d{1,10}|[89]\\\\d{1,11})\",[4,5,6,7,8,9,10,11,12,13,14]],0,[\"180\\\\d{5,11}|13(?:7[1-6]\\\\d\\\\d|8)\\\\d{4}\",[7,8,9,10,11,12,13,14]]]],\"DJ\":[\"253\",\"00\",\"(?:2\\\\d|77)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[27]\"]]],0,0,0,0,0,0,[[\"2(?:1[2-5]|7[45])\\\\d{5}\"],[\"77\\\\d{6}\"]]],\"DK\":[\"45\",\"00\",\"[2-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-9]\"]]],0,0,0,0,0,0,[[\"(?:(?:2\\\\d|9[1-46-9])\\\\d|3(?:[0-37]\\\\d|4[013]|5[0-58]|6[01347-9]|8[0-8]|9[0-79])|4(?:[0-25]\\\\d|[34][02-9]|6[013-579]|7[013579]|8[0-47]|9[0-27])|5(?:[0-36]\\\\d|4[0146-9]|5[03-57-9]|7[0568]|8[0-358]|9[0-69])|6(?:[013578]\\\\d|2[0-68]|4[02-8]|6[01689]|9[015689])|7(?:[0-69]\\\\d|7[03-9]|8[0147])|8(?:[16-9]\\\\d|2[0-58]))\\\\d{5}\"],[\"(?:[2-7]\\\\d|8[126-9]|9[1-46-9])\\\\d{6}\"],[\"80\\\\d{6}\"],[\"90\\\\d{6}\"]]],\"DM\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|767|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"767$1\",0,\"767\",[[\"767(?:2(?:55|66)|4(?:2[01]|4[0-25-9])|50[0-4])\\\\d{4}\"],[\"767(?:2(?:[2-4689]5|7[5-7])|31[5-7]|61[1-8]|70[1-6])\\\\d{4}\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"DO\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"8001|8[024]9\",[[\"8(?:[04]9[2-9]\\\\d\\\\d|29(?:2(?:[0-59]\\\\d|6[04-9]|7[0-27]|8[0237-9])|3(?:[0-35-9]\\\\d|4[7-9])|[45]\\\\d\\\\d|6(?:[0-27-9]\\\\d|[3-5][1-9]|6[0135-8])|7(?:0[013-9]|[1-37]\\\\d|4[1-35689]|5[1-4689]|6[1-57-9]|8[1-79]|9[1-8])|8(?:0[146-9]|1[0-48]|[248]\\\\d|3[1-79]|5[01589]|6[013-68]|7[124-8]|9[0-8])|9(?:[0-24]\\\\d|3[02-46-9]|5[0-79]|60|7[0169]|8[57-9]|9[02-9])))\\\\d{4}\"],[\"8[024]9[2-9]\\\\d{6}\"],[\"8(?:00(?:14|[2-9]\\\\d)|(?:33|44|55|66|77|88)[2-9]\\\\d)\\\\d{5}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"DZ\":[\"213\",\"00\",\"(?:[1-4]|[5-79]\\\\d|80)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-4]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-8]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"9619\\\\d{5}|(?:1\\\\d|2[013-79]|3[0-8]|4[013-689])\\\\d{6}\"],[\"(?:5(?:4[0-29]|5\\\\d|6[0-2])|6(?:[569]\\\\d|7[0-6])|7[7-9]\\\\d)\\\\d{6}\",[9]],[\"800\\\\d{6}\",[9]],[\"80[3-689]1\\\\d{5}\",[9]],0,0,0,0,[\"98[23]\\\\d{6}\",[9]],[\"80[12]1\\\\d{5}\",[9]]]],\"EC\":[\"593\",\"00\",\"1\\\\d{9,10}|(?:[2-7]|9\\\\d)\\\\d{7}\",[8,9,10,11],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[2-7]\"],\"(0$1)\",0,\"$1-$2-$3\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1\"]]],\"0\",0,0,0,0,0,[[\"[2-7][2-7]\\\\d{6}\",[8]],[\"964[0-2]\\\\d{5}|9(?:39|[57][89]|6[0-36-9]|[89]\\\\d)\\\\d{6}\",[9]],[\"1800\\\\d{7}|1[78]00\\\\d{6}\",[10,11]],0,0,0,0,0,[\"[2-7]890\\\\d{4}\",[8]]]],\"EE\":[\"372\",\"00\",\"8\\\\d{9}|[4578]\\\\d{7}|(?:[3-8]\\\\d|90)\\\\d{5}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88\",\"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88\"]],[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[45]|8(?:00|[1-49])\",\"[45]|8(?:00[1-9]|[1-49])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]],0,0,0,0,0,0,[[\"(?:3[23589]|4[3-8]|6\\\\d|7[1-9]|88)\\\\d{5}\",[7]],[\"(?:5\\\\d{5}|8(?:1(?:0(?:0(?:00|[178]\\\\d)|[3-9]\\\\d\\\\d)|(?:1(?:0[236]|1\\\\d)|(?:2[0-59]|[3-79]\\\\d)\\\\d)\\\\d)|2(?:0(?:0(?:00|4\\\\d)|(?:19|[2-7]\\\\d)\\\\d)|(?:(?:[124-6]\\\\d|3[5-9])\\\\d|7(?:[0-79]\\\\d|8[13-9])|8(?:[2-6]\\\\d|7[01]))\\\\d)|[349]\\\\d{4}))\\\\d\\\\d|5(?:(?:[02]\\\\d|5[0-478])\\\\d|1(?:[0-8]\\\\d|95)|6(?:4[0-4]|5[1-589]))\\\\d{3}\",[7,8]],[\"800(?:(?:0\\\\d\\\\d|1)\\\\d|[2-9])\\\\d{3}\"],[\"(?:40\\\\d\\\\d|900)\\\\d{4}\",[7,8]],[\"70[0-2]\\\\d{5}\",[8]]]],\"EG\":[\"20\",\"00\",\"[189]\\\\d{8,9}|[24-6]\\\\d{8}|[135]\\\\d{7}\",[8,9,10],[[\"(\\\\d)(\\\\d{7,8})\",\"$1 $2\",[\"[23]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6,7})\",\"$1 $2\",[\"1[35]|[4-6]|8[2468]|9[235-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{8})\",\"$1 $2\",[\"1\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"13[23]\\\\d{6}|(?:15|57)\\\\d{6,7}|(?:2[2-4]|3|4[05-8]|5[05]|6[24-689]|8[2468]|9[235-7])\\\\d{7}\",[8,9]],[\"1[0-25]\\\\d{8}\",[10]],[\"800\\\\d{7}\",[10]],[\"900\\\\d{7}\",[10]]]],\"EH\":[\"212\",\"00\",\"[5-8]\\\\d{8}\",[9],0,\"0\",0,0,0,0,\"528[89]\",[[\"528[89]\\\\d{5}\"],[\"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[0167]\\\\d|2[0-4]|5[01]|8[0-3]))\\\\d{6}\"],[\"80[0-7]\\\\d{6}\"],[\"89\\\\d{7}\"],0,0,0,0,[\"(?:592(?:4[0-2]|93)|80[89]\\\\d\\\\d)\\\\d{4}\"]]],\"ER\":[\"291\",\"00\",\"[178]\\\\d{6}\",[7],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[178]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:1(?:1[12568]|[24]0|55|6[146])|8\\\\d\\\\d)\\\\d{4}\"],[\"(?:17[1-3]|7\\\\d\\\\d)\\\\d{4}\"]]],\"ES\":[\"34\",\"00\",\"[5-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]00\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-9]\"]]],0,0,0,0,0,0,[[\"96906(?:0[0-8]|1[1-9]|[2-9]\\\\d)\\\\d\\\\d|9(?:69(?:0[0-57-9]|[1-9]\\\\d)|73(?:[0-8]\\\\d|9[1-9]))\\\\d{4}|(?:8(?:[1356]\\\\d|[28][0-8]|[47][1-9])|9(?:[135]\\\\d|[268][0-8]|4[1-9]|7[124-9]))\\\\d{6}\"],[\"(?:590[16]00\\\\d|9(?:6906(?:09|10)|7390\\\\d\\\\d))\\\\d\\\\d|(?:6\\\\d|7[1-48])\\\\d{7}\"],[\"[89]00\\\\d{6}\"],[\"80[367]\\\\d{6}\"],[\"70\\\\d{7}\"],0,[\"51\\\\d{7}\"],0,0,[\"90[12]\\\\d{6}\"]]],\"ET\":[\"251\",\"00\",\"(?:11|[2-579]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-579]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"11667[01]\\\\d{3}|(?:11(?:1(?:1[124]|2[2-7]|3[1-5]|5[5-8]|8[6-8])|2(?:13|3[6-8]|5[89]|7[05-9]|8[2-6])|3(?:2[01]|3[0-289]|4[1289]|7[1-4]|87)|4(?:1[69]|3[2-49]|4[0-3]|6[5-8])|5(?:1[578]|44|5[0-4])|6(?:1[578]|2[69]|39|4[5-7]|5[0-5]|6[0-59]|8[015-8]))|2(?:2(?:11[1-9]|22[0-7]|33\\\\d|44[1467]|66[1-68])|5(?:11[124-6]|33[2-8]|44[1467]|55[14]|66[1-3679]|77[124-79]|880))|3(?:3(?:11[0-46-8]|(?:22|55)[0-6]|33[0134689]|44[04]|66[01467])|4(?:44[0-8]|55[0-69]|66[0-3]|77[1-5]))|4(?:6(?:119|22[0-24-7]|33[1-5]|44[13-69]|55[14-689]|660|88[1-4])|7(?:(?:11|22)[1-9]|33[13-7]|44[13-6]|55[1-689]))|5(?:7(?:227|55[05]|(?:66|77)[14-8])|8(?:11[149]|22[013-79]|33[0-68]|44[013-8]|550|66[1-5]|77\\\\d)))\\\\d{4}\"],[\"700[1-9]\\\\d{5}|(?:7(?:0[1-9]|1[0-8]|22|77|86|99)|9\\\\d\\\\d)\\\\d{6}\"]]],\"FI\":[\"358\",\"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\"[1-35689]\\\\d{4}|7\\\\d{10,11}|(?:[124-7]\\\\d|3[0-46-9])\\\\d{8}|[1-9]\\\\d{5,8}\",[5,6,7,8,9,10,11,12],[[\"(\\\\d{5})\",\"$1\",[\"20[2-59]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"(?:[1-3]0|[68])0|70[07-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4,8})\",\"$1 $2\",[\"[14]|2[09]|50|7[135]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6,10})\",\"$1 $2\",[\"7\"],\"0$1\"],[\"(\\\\d)(\\\\d{4,9})\",\"$1 $2\",[\"(?:1[3-79]|[2568])[1-8]|3(?:0[1-9]|[1-9])|9\"],\"0$1\"]],\"0\",0,0,0,0,\"1[03-79]|[2-9]\",[[\"(?:1[3-79][1-8]|[23568][1-8]\\\\d|9(?:00|[1-8]\\\\d))\\\\d{2,6}\",[5,6,7,8,9]],[\"4946\\\\d{2,6}|(?:4[0-8]|50)\\\\d{4,8}\",[6,7,8,9,10]],[\"800\\\\d{4,6}\",[7,8,9]],[\"[67]00\\\\d{5,6}\",[8,9]],0,0,[\"20\\\\d{4,8}|60[12]\\\\d{5,6}|7(?:099\\\\d{4,5}|5[03-9]\\\\d{3,7})|20[2-59]\\\\d\\\\d|(?:606|7(?:0[78]|1|3\\\\d))\\\\d{7}|(?:10|29|3[09]|70[1-5]\\\\d)\\\\d{4,8}\"]],\"00\"],\"FJ\":[\"679\",\"0(?:0|52)\",\"45\\\\d{5}|(?:0800\\\\d|[235-9])\\\\d{6}\",[7,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[235-9]|45\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]]],0,0,0,0,0,0,[[\"603\\\\d{4}|(?:3[0-5]|6[25-7]|8[58])\\\\d{5}\",[7]],[\"(?:[279]\\\\d|45|5[01568]|8[034679])\\\\d{5}\",[7]],[\"0800\\\\d{7}\",[11]]],\"00\"],\"FK\":[\"500\",\"00\",\"[2-7]\\\\d{4}\",[5],0,0,0,0,0,0,0,[[\"[2-47]\\\\d{4}\"],[\"[56]\\\\d{4}\"]]],\"FM\":[\"691\",\"00\",\"(?:[39]\\\\d\\\\d|820)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[389]\"]]],0,0,0,0,0,0,[[\"31(?:00[67]|208|309)\\\\d\\\\d|(?:3(?:[2357]0[1-9]|602|804|905)|(?:820|9[2-6]\\\\d)\\\\d)\\\\d{3}\"],[\"31(?:00[67]|208|309)\\\\d\\\\d|(?:3(?:[2357]0[1-9]|602|804|905)|(?:820|9[2-7]\\\\d)\\\\d)\\\\d{3}\"]]],\"FO\":[\"298\",\"00\",\"[2-9]\\\\d{5}\",[6],[[\"(\\\\d{6})\",\"$1\",[\"[2-9]\"]]],0,0,\"(10(?:01|[12]0|88))\",0,0,0,[[\"(?:20|[34]\\\\d|8[19])\\\\d{4}\"],[\"(?:[27][1-9]|5\\\\d|9[16])\\\\d{4}\"],[\"80[257-9]\\\\d{3}\"],[\"90(?:[13-5][15-7]|2[125-7]|9\\\\d)\\\\d\\\\d\"],0,0,0,0,[\"(?:6[0-36]|88)\\\\d{4}\"]]],\"FR\":[\"33\",\"00\",\"[1-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0 $1\"],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[1-79]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:26[013-9]|59[1-35-9])\\\\d{6}|(?:[13]\\\\d|2[0-57-9]|4[1-9]|5[0-8])\\\\d{7}\"],[\"(?:6(?:[0-24-8]\\\\d|3[0-8]|9[589])|7[3-9]\\\\d)\\\\d{6}\"],[\"80[0-5]\\\\d{6}\"],[\"836(?:0[0-36-9]|[1-9]\\\\d)\\\\d{4}|8(?:1[2-9]|2[2-47-9]|3[0-57-9]|[569]\\\\d|8[0-35-9])\\\\d{6}\"],0,0,[\"80[6-9]\\\\d{6}\"],0,[\"9\\\\d{8}\"],[\"8(?:1[01]|2[0156]|4[02]|84)\\\\d{6}\"]]],\"GA\":[\"241\",\"00\",\"(?:[067]\\\\d|11)\\\\d{6}|[2-7]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"11|[67]\"],\"0$1\"]],0,0,\"0(11\\\\d{6}|60\\\\d{6}|61\\\\d{6}|6[256]\\\\d{6}|7[467]\\\\d{6})\",\"$1\",0,0,[[\"[01]1\\\\d{6}\",[8]],[\"(?:(?:0[2-7]|7[467])\\\\d|6(?:0[0-4]|10|[256]\\\\d))\\\\d{5}|[2-7]\\\\d{6}\"]]],\"GB\":[\"44\",\"00\",\"[1-357-9]\\\\d{9}|[18]\\\\d{8}|8\\\\d{6}\",[7,9,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"800\",\"8001\",\"80011\",\"800111\",\"8001111\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"845\",\"8454\",\"84546\",\"845464\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"800\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"1(?:38|5[23]|69|76|94)\",\"1(?:(?:38|69)7|5(?:24|39)|768|946)\",\"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5,6})\",\"$1 $2\",[\"1(?:[2-69][02-9]|[78])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[25]|7(?:0|6[02-9])\",\"[25]|7(?:0|6(?:[03-9]|2[356]))\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1389]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:1(?:1(?:3(?:[0-58]\\\\d\\\\d|73[0-35])|4(?:(?:[0-5]\\\\d|70)\\\\d|69[7-9])|(?:(?:5[0-26-9]|[78][0-49])\\\\d|6(?:[0-4]\\\\d|50))\\\\d)|(?:2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)\\\\d|1(?:[0-7]\\\\d|8[0-3]))|(?:3(?:0\\\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\\\d)\\\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d{3})\\\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\\\d)|76\\\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[5-7]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}\",[9,10]],[\"7(?:457[0-57-9]|700[01]|911[028])\\\\d{5}|7(?:[1-3]\\\\d\\\\d|4(?:[0-46-9]\\\\d|5[0-689])|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\\\d|8[02-9]|9[0-689])|8(?:[014-9]\\\\d|[23][0-8])|9(?:[024-9]\\\\d|1[02-9]|3[0-689]))\\\\d{6}\",[10]],[\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"],[\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[2-49]))\\\\d{7}|845464\\\\d\",[7,10]],[\"70\\\\d{8}\",[10]],0,[\"(?:3[0347]|55)\\\\d{8}\",[10]],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",[10]],[\"56\\\\d{8}\",[10]]],0,\" x\"],\"GD\":[\"1\",\"011\",\"(?:473|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"473$1\",0,\"473\",[[\"473(?:2(?:3[0-2]|69)|3(?:2[89]|86)|4(?:[06]8|3[5-9]|4[0-4]|5[579]|73|90)|63[68]|7(?:58|84)|800|938)\\\\d{4}\"],[\"473(?:4(?:0[2-79]|1[04-9]|2[0-5]|49|5[68])|5(?:2[01]|3[3-8])|901)\\\\d{4}\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"GE\":[\"995\",\"00\",\"(?:[3-57]\\\\d\\\\d|800)\\\\d{6}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"70\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"32\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[57]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[348]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:3(?:[256]\\\\d|4[124-9]|7[0-4])|4(?:1\\\\d|2[2-7]|3[1-79]|4[2-8]|7[239]|9[1-7]))\\\\d{6}\"],[\"5(?:(?:(?:0555|1(?:[17]77|555))[5-9]|757(?:7[7-9]|8[01]))\\\\d|22252[0-4])\\\\d\\\\d|(?:5(?:0(?:0(?:0\\\\d|11|22|3[0-6]|44|5[05]|77|88|9[09])|111|77\\\\d)|1(?:1(?:[03][01]|[124]\\\\d)|4\\\\d\\\\d)|[23]555|4(?:4\\\\d\\\\d|555)|5(?:[0157-9]\\\\d\\\\d|200)|6[89]\\\\d\\\\d|7(?:[0147-9]\\\\d\\\\d|5(?:00|[57]5))|8(?:0(?:[018]\\\\d|2[0-4])|5(?:55|8[89])|8(?:55|88))|9(?:090|[1-35-9]\\\\d\\\\d))|790\\\\d\\\\d)\\\\d{4}|5(?:0(?:0[17]0|505)|1(?:0[01]0|1(?:07|33|51))|2(?:0[02]0|2[25]2)|3(?:0[03]0|3[35]3)|(?:40[04]|900)0|5222)[0-4]\\\\d{3}\"],[\"800\\\\d{6}\"],0,0,0,0,0,[\"70[67]\\\\d{6}\"]]],\"GF\":[\"594\",\"00\",\"[56]94\\\\d{6}|(?:80|9\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[56]|9[47]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[89]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"594(?:[02-49]\\\\d|1[0-5]|5[6-9]|6[0-3]|80)\\\\d{4}\"],[\"694(?:[0-249]\\\\d|3[0-8])\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:(?:396|76\\\\d)\\\\d|476[0-5])\\\\d{4}\"]]],\"GG\":[\"44\",\"00\",\"(?:1481|[357-9]\\\\d{3})\\\\d{6}|8\\\\d{6}(?:\\\\d{2})?\",[7,9,10],0,\"0\",0,\"([25-9]\\\\d{5})$|0\",\"1481$1\",0,0,[[\"1481[25-9]\\\\d{5}\",[10]],[\"7(?:(?:781|839)\\\\d|911[17])\\\\d{5}\",[10]],[\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"],[\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[0-3]))\\\\d{7}|845464\\\\d\",[7,10]],[\"70\\\\d{8}\",[10]],0,[\"(?:3[0347]|55)\\\\d{8}\",[10]],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",[10]],[\"56\\\\d{8}\",[10]]]],\"GH\":[\"233\",\"00\",\"(?:[235]\\\\d{3}|800)\\\\d{5}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[235]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"3082[0-5]\\\\d{4}|3(?:0(?:[237]\\\\d|8[01])|[167](?:2[0-6]|7\\\\d|80)|2(?:2[0-5]|7\\\\d|80)|3(?:2[0-3]|7\\\\d|80)|4(?:2[013-9]|3[01]|7\\\\d|80)|5(?:2[0-7]|7\\\\d|80)|8(?:2[0-2]|7\\\\d|80)|9(?:[28]0|7\\\\d))\\\\d{5}\",[9]],[\"(?:2(?:[0346-9]\\\\d|5[67])|5(?:[03-7]\\\\d|9[1-9]))\\\\d{6}\",[9]],[\"800\\\\d{5}\",[8]]]],\"GI\":[\"350\",\"00\",\"(?:[25]\\\\d|60)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2\"]]],0,0,0,0,0,0,[[\"2190[0-2]\\\\d{3}|2(?:0(?:[02]\\\\d|3[01])|16[24-9]|2[2-5]\\\\d)\\\\d{4}\"],[\"5251[0-4]\\\\d{3}|(?:5(?:[146-8]\\\\d\\\\d|250)|60(?:1[01]|6\\\\d))\\\\d{4}\"]]],\"GL\":[\"299\",\"00\",\"(?:19|[2-689]\\\\d|70)\\\\d{4}\",[6],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"19|[2-9]\"]]],0,0,0,0,0,0,[[\"(?:19|3[1-7]|[68][1-9]|70|9\\\\d)\\\\d{4}\"],[\"[245]\\\\d{5}\"],[\"80\\\\d{4}\"],0,0,0,0,0,[\"3[89]\\\\d{4}\"]]],\"GM\":[\"220\",\"00\",\"[2-9]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]],0,0,0,0,0,0,[[\"(?:4(?:[23]\\\\d\\\\d|4(?:1[024679]|[6-9]\\\\d))|5(?:5(?:3\\\\d|4[0-7])|6[67]\\\\d|7(?:1[04]|2[035]|3[58]|48))|8\\\\d{3})\\\\d{3}\"],[\"(?:[23679]\\\\d|5[0-489])\\\\d{5}\"]]],\"GN\":[\"224\",\"00\",\"722\\\\d{6}|(?:3|6\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"3\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[67]\"]]],0,0,0,0,0,0,[[\"3(?:0(?:24|3[12]|4[1-35-7]|5[13]|6[189]|[78]1|9[1478])|1\\\\d\\\\d)\\\\d{4}\",[8]],[\"6[0-356]\\\\d{7}\",[9]],0,0,0,0,0,0,[\"722\\\\d{6}\",[9]]]],\"GP\":[\"590\",\"00\",\"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1-9]|5[3-579]|[68][0-689]|7[08]|9\\\\d)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\\\d)|6(?:1[016-9]|5[0-4]|[67]\\\\d))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:(?:39[5-7]|76[018])\\\\d|475[0-5])\\\\d{4}\"]]],\"GQ\":[\"240\",\"00\",\"222\\\\d{6}|(?:3\\\\d|55|[89]0)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235]\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[89]\"]]],0,0,0,0,0,0,[[\"33[0-24-9]\\\\d[46]\\\\d{4}|3(?:33|5\\\\d)\\\\d[7-9]\\\\d{4}\"],[\"(?:222|55\\\\d)\\\\d{6}\"],[\"80\\\\d[1-9]\\\\d{5}\"],[\"90\\\\d[1-9]\\\\d{5}\"]]],\"GR\":[\"30\",\"00\",\"5005000\\\\d{3}|8\\\\d{9,11}|(?:[269]\\\\d|70)\\\\d{8}\",[10,11,12],[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"21|7\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2689]\"]],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{5})\",\"$1 $2 $3\",[\"8\"]]],0,0,0,0,0,0,[[\"2(?:1\\\\d\\\\d|2(?:2[1-46-9]|[36][1-8]|4[1-7]|5[1-4]|7[1-5]|[89][1-9])|3(?:1\\\\d|2[1-57]|[35][1-3]|4[13]|7[1-7]|8[124-6]|9[1-79])|4(?:1\\\\d|2[1-8]|3[1-4]|4[13-5]|6[1-578]|9[1-5])|5(?:1\\\\d|[29][1-4]|3[1-5]|4[124]|5[1-6])|6(?:1\\\\d|[269][1-6]|3[1245]|4[1-7]|5[13-9]|7[14]|8[1-5])|7(?:1\\\\d|2[1-5]|3[1-6]|4[1-7]|5[1-57]|6[135]|9[125-7])|8(?:1\\\\d|2[1-5]|[34][1-4]|9[1-57]))\\\\d{6}\",[10]],[\"68[57-9]\\\\d{7}|(?:69|94)\\\\d{8}\",[10]],[\"800\\\\d{7,9}\"],[\"90[19]\\\\d{7}\",[10]],[\"70\\\\d{8}\",[10]],0,[\"5005000\\\\d{3}\",[10]],0,0,[\"8(?:0[16]|12|[27]5|50)\\\\d{7}\",[10]]]],\"GT\":[\"502\",\"00\",\"80\\\\d{6}|(?:1\\\\d{3}|[2-7])\\\\d{7}\",[8,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-8]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]],0,0,0,0,0,0,[[\"[267][2-9]\\\\d{6}\",[8]],[\"(?:[3-5]\\\\d\\\\d|80[0-4])\\\\d{5}\",[8]],[\"18[01]\\\\d{8}\",[11]],[\"19\\\\d{9}\",[11]]]],\"GU\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|671|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"671$1\",0,\"671\",[[\"671(?:2\\\\d\\\\d|3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[02-46-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[0479]7|2[0167]|3[45]|8[7-9])|8(?:[2-57-9]8|6[48])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\\\d{4}\"],[\"\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"GW\":[\"245\",\"00\",\"[49]\\\\d{8}|4\\\\d{6}\",[7,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"40\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[49]\"]]],0,0,0,0,0,0,[[\"443\\\\d{6}\",[9]],[\"9(?:5\\\\d|6[569]|77)\\\\d{6}\",[9]],0,0,0,0,0,0,[\"40\\\\d{5}\",[7]]]],\"GY\":[\"592\",\"001\",\"(?:[2-8]\\\\d{3}|9008)\\\\d{3}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]],0,0,0,0,0,0,[[\"(?:2(?:1[6-9]|2[0-35-9]|3[1-4]|5[3-9]|6\\\\d|7[0-79])|3(?:2[25-9]|3\\\\d)|4(?:4[0-24]|5[56])|50[0-6]|77[1-57])\\\\d{4}\"],[\"(?:510|6\\\\d\\\\d|7(?:[013]\\\\d|2[0-25-8]|4[0-29]|5[1-9]))\\\\d{4}\"],[\"(?:289|8(?:00|6[28]|88|99))\\\\d{4}\"],[\"9008\\\\d{3}\"],0,0,0,0,[\"515\\\\d{4}\"]]],\"HK\":[\"852\",\"00(?:30|5[09]|[126-9]?)\",\"8[0-46-9]\\\\d{6,7}|9\\\\d{4,7}|(?:[2-7]|9\\\\d{3})\\\\d{7}\",[5,6,7,8,9,11],[[\"(\\\\d{3})(\\\\d{2,5})\",\"$1 $2\",[\"900\",\"9003\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|8[1-4]|9(?:0[1-9]|[1-8])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]]],0,0,0,0,0,0,[[\"(?:2(?:[13-9]\\\\d|2[013-9])\\\\d|3(?:(?:[1569][0-24-9]|4[0-246-9]|7[0-24-69])\\\\d|8(?:4[0-8]|[59]\\\\d|6[0-2]))|58(?:0[1-9]|1[2-9]))\\\\d{4}\",[8]],[\"(?:4(?:44[0-25-9]|6(?:1[0-7]|4[0-57-9]|6[0-4]))|5(?:73[0-6]|95[0-8])|6(?:26[013-8]|66[0-3])|70(?:7[1-8]|8[0-4])|848[0-35-9]|9(?:29[013-9]|39[01]|59[0-4]|899))\\\\d{4}|(?:4(?:4[0-35-8]|6[02357-9])|5(?:[1-59][0-46-9]|6[0-4689]|7[0-246-9])|6(?:0[1-9]|[13-59]\\\\d|[268][0-57-9]|7[0-79])|70[129]|84[0-29]|9(?:0[1-9]|1[02-9]|[2358][0-8]|[467]\\\\d))\\\\d{5}\",[8]],[\"800\\\\d{6}\",[9]],[\"900(?:[0-24-9]\\\\d{7}|3\\\\d{1,4})\",[5,6,7,8,11]],[\"8(?:1[0-4679]\\\\d|2(?:[0-36]\\\\d|7[0-4])|3(?:[034]\\\\d|2[09]|70))\\\\d{4}\",[8]],0,[\"30(?:0[1-9]|[15-7]\\\\d|2[047]|89)\\\\d{4}\",[8]],[\"7(?:1(?:0[0-38]|1[0-3679]|3[013]|69|9[0136])|2(?:[02389]\\\\d|1[18]|7[27-9])|3(?:[0-38]\\\\d|7[0-369]|9[2357-9])|47\\\\d|5(?:[178]\\\\d|5[0-5])|6(?:0[0-7]|2[236-9]|[35]\\\\d)|7(?:[27]\\\\d|8[7-9])|8(?:[23689]\\\\d|7[1-9])|9(?:[025]\\\\d|6[0-246-8]|7[0-36-9]|8[238]))\\\\d{4}\",[8]]],\"00\"],\"HN\":[\"504\",\"00\",\"8\\\\d{10}|[237-9]\\\\d{7}\",[8,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"[237-9]\"]]],0,0,0,0,0,0,[[\"2(?:2(?:0[0-59]|1[1-9]|[23]\\\\d|4[02-6]|5[57]|6[245]|7[0135689]|8[01346-9]|9[0-2])|4(?:0[578]|2[3-59]|3[13-9]|4[0-68]|5[1-3589])|5(?:0[2357-9]|1[1-356]|4[03-5]|5\\\\d|6[014-69]|7[04]|80)|6(?:[056]\\\\d|17|2[067]|3[047]|4[0-378]|[78][0-8]|9[01])|7(?:0[5-79]|6[46-9]|7[02-9]|8[034]|91)|8(?:79|8[0-357-9]|9[1-57-9]))\\\\d{4}\",[8]],[\"[37-9]\\\\d{7}\",[8]],[\"8002\\\\d{7}\",[11]]]],\"HR\":[\"385\",\"00\",\"(?:[24-69]\\\\d|3[0-79])\\\\d{7}|80\\\\d{5,7}|[1-79]\\\\d{7}|6\\\\d{5,6}\",[6,7,8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"6[01]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"6|7[245]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-57]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"1\\\\d{7}|(?:2[0-3]|3[1-5]|4[02-47-9]|5[1-3])\\\\d{6,7}\",[8,9]],[\"9(?:(?:0[1-9]|[12589]\\\\d)\\\\d\\\\d|7(?:[0679]\\\\d\\\\d|5(?:[01]\\\\d|44|55|77|9[5-7])))\\\\d{4}|98\\\\d{6}\",[8,9]],[\"80\\\\d{5,7}\",[7,8,9]],[\"6[01459]\\\\d{6}|6[01]\\\\d{4,5}\",[6,7,8]],[\"7[45]\\\\d{6}\",[8]],0,[\"62\\\\d{6,7}|72\\\\d{6}\",[8,9]]]],\"HT\":[\"509\",\"00\",\"(?:[2-489]\\\\d|55)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-589]\"]]],0,0,0,0,0,0,[[\"2(?:2\\\\d|5[1-5]|81|9[149])\\\\d{5}\"],[\"(?:[34]\\\\d|55)\\\\d{6}\"],[\"8\\\\d{7}\"],0,0,0,0,0,[\"9(?:[67][0-4]|8[0-3589]|9\\\\d)\\\\d{5}\"]]],\"HU\":[\"36\",\"00\",\"[235-7]\\\\d{8}|[1-9]\\\\d{7}\",[8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"(06 $1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]\"],\"(06 $1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"],\"06 $1\"]],\"06\",0,0,0,0,0,[[\"(?:1\\\\d|[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6[23689]|8[2-57-9]|9[2-69])\\\\d{6}\",[8]],[\"(?:[257]0|3[01])\\\\d{7}\",[9]],[\"(?:[48]0\\\\d|680[29])\\\\d{5}\"],[\"9[01]\\\\d{6}\",[8]],0,0,[\"38\\\\d{7}\",[9]],0,[\"21\\\\d{7}\",[9]]]],\"ID\":[\"62\",\"00[89]\",\"(?:(?:00[1-9]|8\\\\d)\\\\d{4}|[1-36])\\\\d{6}|00\\\\d{10}|[1-9]\\\\d{8,10}|[2-9]\\\\d{7}\",[7,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"15\"]],[\"(\\\\d{2})(\\\\d{5,9})\",\"$1 $2\",[\"2[124]|[36]1\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,7})\",\"$1 $2\",[\"800\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,8})\",\"$1 $2\",[\"[2-79]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{3})\",\"$1-$2-$3\",[\"8[1-35-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6,8})\",\"$1 $2\",[\"1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"804\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"80\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1-$2-$3\",[\"8\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"2[124]\\\\d{7,8}|619\\\\d{8}|2(?:1(?:14|500)|2\\\\d{3})\\\\d{3}|61\\\\d{5,8}|(?:2(?:[35][1-4]|6[0-8]|7[1-6]|8\\\\d|9[1-8])|3(?:1|[25][1-8]|3[1-68]|4[1-3]|6[1-3568]|7[0-469]|8\\\\d)|4(?:0[1-589]|1[01347-9]|2[0-36-8]|3[0-24-68]|43|5[1-378]|6[1-5]|7[134]|8[1245])|5(?:1[1-35-9]|2[25-8]|3[124-9]|4[1-3589]|5[1-46]|6[1-8])|6(?:[25]\\\\d|3[1-69]|4[1-6])|7(?:02|[125][1-9]|[36]\\\\d|4[1-8]|7[0-36-9])|9(?:0[12]|1[013-8]|2[0-479]|5[125-8]|6[23679]|7[159]|8[01346]))\\\\d{5,8}\",[7,8,9,10,11]],[\"8[1-35-9]\\\\d{7,10}\",[9,10,11,12]],[\"00[17]803\\\\d{7}|(?:177\\\\d|800)\\\\d{5,7}|001803\\\\d{6}\",[8,9,10,11,12,13]],[\"809\\\\d{7}\",[10]],0,0,[\"(?:1500|8071\\\\d{3})\\\\d{3}\",[7,10]],0,0,[\"804\\\\d{7}\",[10]]]],\"IE\":[\"353\",\"00\",\"(?:1\\\\d|[2569])\\\\d{6,8}|4\\\\d{6,9}|7\\\\d{8}|8\\\\d{8,9}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"2[24-9]|47|58|6[237-9]|9[35-9]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[45]0\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2569]|4[1-69]|7[14]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"70\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"81\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"4\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:1\\\\d|21)\\\\d{6,7}|(?:2[24-9]|4(?:0[24]|5\\\\d|7)|5(?:0[45]|1\\\\d|8)|6(?:1\\\\d|[237-9])|9(?:1\\\\d|[35-9]))\\\\d{5}|(?:23|4(?:[1-469]|8\\\\d)|5[23679]|6[4-6]|7[14]|9[04])\\\\d{7}\"],[\"8(?:22|[35-9]\\\\d)\\\\d{6}\",[9]],[\"1800\\\\d{6}\",[10]],[\"15(?:1[2-8]|[2-8]0|9[089])\\\\d{6}\",[10]],[\"700\\\\d{6}\",[9]],0,[\"818\\\\d{6}\",[9]],0,[\"76\\\\d{7}\",[9]],[\"18[59]0\\\\d{6}\",[10]]]],\"IL\":[\"972\",\"0(?:0|1[2-9])\",\"1\\\\d{6}(?:\\\\d{3,5})?|[57]\\\\d{8}|[1-489]\\\\d{7}\",[7,8,9,10,11,12],[[\"(\\\\d{4})(\\\\d{3})\",\"$1-$2\",[\"125\"]],[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"121\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[2-489]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"12\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1-$2\",[\"159\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"1[7-9]\"]],[\"(\\\\d{3})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3-$4\",[\"15\"]]],\"0\",0,0,0,0,0,[[\"153\\\\d{8,9}|29[1-9]\\\\d{5}|(?:2[0-8]|[3489]\\\\d)\\\\d{6}\",[8,11,12]],[\"55410\\\\d{4}|5(?:(?:[02][02-9]|[149][2-9]|[36]\\\\d|8[3-7])\\\\d|5(?:01|2\\\\d|3[0-3]|4[34]|5[0-25689]|6[6-8]|7[0-267]|8[7-9]|9[1-9]))\\\\d{5}\",[9]],[\"1(?:255|80[019]\\\\d{3})\\\\d{3}\",[7,10]],[\"1212\\\\d{4}|1(?:200|9(?:0[0-2]|19))\\\\d{6}\",[8,10]],0,0,[\"1599\\\\d{6}\",[10]],0,[\"7(?:38(?:0\\\\d|5[0-29]|88)|8(?:33|55|77|81)\\\\d)\\\\d{4}|7(?:18|2[23]|3[237]|47|6[258]|7\\\\d|82|9[2-9])\\\\d{6}\",[9]],[\"1700\\\\d{6}\",[10]]]],\"IM\":[\"44\",\"00\",\"1624\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",[10],0,\"0\",0,\"([25-8]\\\\d{5})$|0\",\"1624$1\",0,\"74576|(?:16|7[56])24\",[[\"1624(?:230|[5-8]\\\\d\\\\d)\\\\d{3}\"],[\"76245[06]\\\\d{4}|7(?:4576|[59]24\\\\d|624[0-4689])\\\\d{5}\"],[\"808162\\\\d{4}\"],[\"8(?:440[49]06|72299\\\\d)\\\\d{3}|(?:8(?:45|70)|90[0167])624\\\\d{4}\"],[\"70\\\\d{8}\"],0,[\"3440[49]06\\\\d{3}|(?:3(?:08162|3\\\\d{4}|45624|7(?:0624|2299))|55\\\\d{4})\\\\d{4}\"],0,[\"56\\\\d{8}\"]]],\"IN\":[\"91\",\"00\",\"(?:000800|[2-9]\\\\d\\\\d)\\\\d{7}|1\\\\d{7,12}\",[8,9,10,11,12,13],[[\"(\\\\d{8})\",\"$1\",[\"5(?:0|2[23]|3[03]|[67]1|88)\",\"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)\",\"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)\"],0,1],[\"(\\\\d{4})(\\\\d{4,5})\",\"$1 $2\",[\"180\",\"1800\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"140\"],0,1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"11|2[02]|33|4[04]|79[1-7]|80[2-46]\",\"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])\",\"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]\",\"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]\",\"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807\",\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]\",\"1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\\\d|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]))[2-7]\"],\"0$1\",1],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"[6-9]\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:6|8[06])\",\"1(?:6|8[06]0)\"],0,1],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"18\"],0,1]],\"0\",0,0,0,0,0,[[\"2717(?:[2-7]\\\\d|95)\\\\d{4}|(?:271[0-689]|782[0-6])[2-7]\\\\d{5}|(?:170[24]|2(?:(?:[02][2-79]|90)\\\\d|80[13468])|(?:3(?:23|80)|683|79[1-7])\\\\d|4(?:20[24]|72[2-8])|552[1-7])\\\\d{6}|(?:11|33|4[04]|80)[2-7]\\\\d{7}|(?:342|674|788)(?:[0189][2-7]|[2-7]\\\\d)\\\\d{5}|(?:1(?:2[0-249]|3[0-25]|4[145]|[59][14]|6[014]|7[1257]|8[01346])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[13]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[014-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|2[14]|3[134]|4[47]|5[15]|[67]1)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91))[2-7]\\\\d{6}|(?:1(?:2[35-8]|3[346-9]|4[236-9]|[59][0235-9]|6[235-9]|7[34689]|8[257-9])|2(?:1[134689]|3[24-8]|4[2-8]|5[25689]|6[2-4679]|7[3-79]|8[2-479]|9[235-9])|3(?:01|1[79]|2[1245]|4[5-8]|5[125689]|6[235-7]|7[157-9]|8[2-46-8])|4(?:1[14578]|2[5689]|3[2-467]|5[4-7]|6[35]|73|8[2689]|9[2389])|5(?:[16][146-9]|2[14-8]|3[1346]|4[14-69]|5[46]|7[2-4]|8[2-8]|9[246])|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])|7(?:1[013-9]|2[0235-9]|3[2679]|4[1-35689]|5[2-46-9]|[67][02-9]|8[013-7]|9[089])|8(?:1[1357-9]|2[235-8]|3[03-57-9]|4[0-24-9]|5\\\\d|6[2457-9]|7[1-6]|8[1256]|9[2-4]))\\\\d[2-7]\\\\d{5}\",[10]],[\"(?:61279|7(?:887[02-9]|9(?:313|79[07-9]))|8(?:079[04-9]|(?:84|91)7[02-8]))\\\\d{5}|(?:6(?:12|[2-47]1|5[17]|6[13]|80)[0189]|7(?:1(?:2[0189]|9[0-5])|2(?:[14][017-9]|8[0-59])|3(?:2[5-8]|[34][017-9]|9[016-9])|4(?:1[015-9]|[29][89]|39|8[389])|5(?:[15][017-9]|2[04-9]|9[7-9])|6(?:0[0-47]|1[0-257-9]|2[0-4]|3[19]|5[4589])|70[0289]|88[089]|97[02-8])|8(?:0(?:6[67]|7[02-8])|70[017-9]|84[01489]|91[0-289]))\\\\d{6}|(?:7(?:31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[0189]\\\\d|7[02-8])\\\\d{5}|(?:6(?:[09]\\\\d|1[04679]|2[03689]|3[05-9]|4[0489]|50|6[069]|7[07]|8[7-9])|7(?:0\\\\d|2[0235-79]|3[05-8]|40|5[0346-8]|6[6-9]|7[1-9]|8[0-79]|9[089])|8(?:0[01589]|1[0-57-9]|2[235-9]|3[03-57-9]|[45]\\\\d|6[02457-9]|7[1-69]|8[0-25-9]|9[02-9])|9\\\\d\\\\d)\\\\d{7}|(?:6(?:(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|8[124-6])\\\\d|7(?:[235689]\\\\d|4[0189]))|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-5])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]|881))[0189]\\\\d{5}\",[10]],[\"000800\\\\d{7}|1(?:600\\\\d{6}|80(?:0\\\\d{4,9}|3\\\\d{9}))\"],[\"186[12]\\\\d{9}\",[13]],0,0,[\"140\\\\d{7}\",[10]],0,0,[\"1860\\\\d{7}\",[11]]]],\"IO\":[\"246\",\"00\",\"3\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"3\"]]],0,0,0,0,0,0,[[\"37\\\\d{5}\"],[\"38\\\\d{5}\"]]],\"IQ\":[\"964\",\"00\",\"(?:1|7\\\\d\\\\d)\\\\d{7}|[2-6]\\\\d{7,8}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"1\\\\d{7}|(?:2[13-5]|3[02367]|4[023]|5[03]|6[026])\\\\d{6,7}\",[8,9]],[\"7[3-9]\\\\d{8}\",[10]]]],\"IR\":[\"98\",\"00\",\"[1-9]\\\\d{9}|(?:[1-8]\\\\d\\\\d|9)\\\\d{3,4}\",[4,5,6,7,10],[[\"(\\\\d{4,5})\",\"$1\",[\"96\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4,5})\",\"$1 $2\",[\"(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-8]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])(?:[03-57]\\\\d{7}|[16]\\\\d{3}(?:\\\\d{4})?|[289]\\\\d{3}(?:\\\\d(?:\\\\d{3})?)?)|94(?:000[09]|(?:12\\\\d|30[0-2])\\\\d|2(?:121|[2689]0\\\\d)|4(?:111|40\\\\d))\\\\d{4}\",[6,7,10]],[\"9(?:(?:0(?:[0-35]\\\\d|4[4-6])|(?:[13]\\\\d|2[0-3])\\\\d)\\\\d|9(?:[0-46]\\\\d\\\\d|5[15]0|8(?:[12]\\\\d|88)|9(?:0[0-3]|[19]\\\\d|21|69|77|8[7-9])))\\\\d{5}\",[10]],0,0,0,0,[\"96(?:0[12]|2[16-8]|3(?:08|[14]5|[23]|66)|4(?:0|80)|5[01]|6[89]|86|9[19])\",[4,5]]]],\"IS\":[\"354\",\"00|1(?:0(?:01|[12]0)|100)\",\"(?:38\\\\d|[4-9])\\\\d{6}\",[7,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"3\"]]],0,0,0,0,0,0,[[\"(?:4(?:1[0-24-69]|2[0-7]|[37][0-8]|4[0-24589]|5[0-68]|6\\\\d|8[0-36-8])|5(?:05|[156]\\\\d|2[02578]|3[0-579]|4[03-7]|7[0-2578]|8[0-35-9]|9[013-689])|872)\\\\d{4}\",[7]],[\"(?:38[589]\\\\d\\\\d|6(?:1[1-8]|2[0-6]|3[026-9]|4[014679]|5[0159]|6[0-69]|70|8[06-8]|9\\\\d)|7(?:5[057]|[6-9]\\\\d)|8(?:2[0-59]|[3-69]\\\\d|8[238]))\\\\d{4}\"],[\"80[0-8]\\\\d{4}\",[7]],[\"90(?:0\\\\d|1[5-79]|2[015-79]|3[135-79]|4[125-7]|5[25-79]|7[1-37]|8[0-35-7])\\\\d{3}\",[7]],0,0,[\"809\\\\d{4}\",[7]],0,[\"49[0-24-79]\\\\d{4}\",[7]]],\"00\"],\"IT\":[\"39\",\"00\",\"0\\\\d{5,10}|1\\\\d{8,10}|3(?:[0-8]\\\\d{7,10}|9\\\\d{7,8})|(?:43|55|70)\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?\",[6,7,8,9,10,11],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"0[26]\"]],[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"0[13-57-9][0159]|8(?:03|4[17]|9[2-5])\",\"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))\"]],[\"(\\\\d{4})(\\\\d{2,6})\",\"$1 $2\",[\"0(?:[13-579][2-46-8]|8[236-8])\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"894\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[26]|5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1(?:44|[679])|[378]|43\"]],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[13-57-9][0159]|14\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{5})\",\"$1 $2 $3\",[\"0[26]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"3\"]]],0,0,0,0,0,0,[[\"0669[0-79]\\\\d{1,6}|0(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\\\d\\\\d|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\\\d|6[0-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7}\"],[\"3[2-9]\\\\d{7,8}|(?:31|43)\\\\d{8}\",[9,10]],[\"80(?:0\\\\d{3}|3)\\\\d{3}\",[6,9]],[\"(?:0878\\\\d{3}|89(?:2\\\\d|3[04]|4(?:[0-4]|[5-9]\\\\d\\\\d)|5[0-4]))\\\\d\\\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\\\d{6}\",[6,8,9,10]],[\"1(?:78\\\\d|99)\\\\d{6}\",[9,10]],0,0,0,[\"55\\\\d{8}\",[10]],[\"84(?:[08]\\\\d{3}|[17])\\\\d{3}\",[6,9]]]],\"JE\":[\"44\",\"00\",\"1534\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",[10],0,\"0\",0,\"([0-24-8]\\\\d{5})$|0\",\"1534$1\",0,0,[[\"1534[0-24-8]\\\\d{5}\"],[\"7(?:(?:(?:50|82)9|937)\\\\d|7(?:00[378]|97\\\\d))\\\\d{5}\"],[\"80(?:07(?:35|81)|8901)\\\\d{4}\"],[\"(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\"],[\"701511\\\\d{4}\"],0,[\"(?:3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\\\d{4})\\\\d{4}\"],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\"],[\"56\\\\d{8}\"]]],\"JM\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|658|900)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"658|876\",[[\"8766060\\\\d{3}|(?:658(?:2(?:[0-8]\\\\d|9[0-46-9])|[3-9]\\\\d\\\\d)|876(?:52[35]|6(?:0[1-3579]|1[0235-9]|[23]\\\\d|40|5[06]|6[2-589]|7[0-25-9]|8[04]|9[4-9])|7(?:0[2-689]|[1-6]\\\\d|8[056]|9[45])|9(?:0[1-8]|1[02378]|[2-8]\\\\d|9[2-468])))\\\\d{4}\"],[\"(?:658295|876(?:2(?:0[1-9]|[13-9]\\\\d|2[013-9])|[348]\\\\d\\\\d|5(?:0[1-9]|[1-9]\\\\d)|6(?:4[89]|6[67])|7(?:0[07]|7\\\\d|8[1-47-9]|9[0-36-9])|9(?:[01]9|9[0579])))\\\\d{4}\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"JO\":[\"962\",\"00\",\"(?:(?:[2689]|7\\\\d)\\\\d|32|53)\\\\d{6}\",[8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2356]|87\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"70\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"87(?:000|90[01])\\\\d{3}|(?:2(?:6(?:2[0-35-9]|3[0-578]|4[24-7]|5[0-24-8]|[6-8][023]|9[0-3])|7(?:0[1-79]|10|2[014-7]|3[0-689]|4[019]|5[0-3578]))|32(?:0[1-69]|1[1-35-7]|2[024-7]|3\\\\d|4[0-3]|[5-7][023])|53(?:0[0-3]|[13][023]|2[0-59]|49|5[0-35-9]|6[15]|7[45]|8[1-6]|9[0-36-9])|6(?:2(?:[05]0|22)|3(?:00|33)|4(?:0[0-25]|1[2-7]|2[0569]|[38][07-9]|4[025689]|6[0-589]|7\\\\d|9[0-2])|5(?:[01][056]|2[034]|3[0-57-9]|4[178]|5[0-69]|6[0-35-9]|7[1-379]|8[0-68]|9[0239]))|87(?:20|7[078]|99))\\\\d{4}\",[8]],[\"7(?:[78][0-25-9]|9\\\\d)\\\\d{6}\",[9]],[\"80\\\\d{6}\",[8]],[\"9\\\\d{7}\",[8]],[\"70\\\\d{7}\",[9]],0,[\"8(?:10|8\\\\d)\\\\d{5}\",[8]],[\"74(?:66|77)\\\\d{5}\",[9]],0,[\"85\\\\d{6}\",[8]]]],\"JP\":[\"81\",\"010\",\"00[1-9]\\\\d{6,14}|[257-9]\\\\d{9}|(?:00|[1-9]\\\\d\\\\d)\\\\d{6}\",[8,9,10,11,12,13,14,15,16,17],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"(?:12|57|99)0\"],\"0$1\"],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51)|9(?:80|9[16])\",\"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\",\"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[36]|4(?:2[09]|7[01])\",\"[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[0459]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[26-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9]|9[29])|5(?:2|3(?:[045]|9[0-8])|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|3(?:[29]|60)|49|51|6(?:[0-24]|36|5[0-3589]|7[23]|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3(?:[045]|9(?:[0-58]|6[4-9]|7[0-35689]))|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|60|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[2-57-9]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|7(?:2[2-468]|3[78])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3\",[\"[14]|[289][2-9]|5[3-9]|7[2-4679]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"800\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[257-9]\"],\"0$1\"]],\"0\",0,\"(000[259]\\\\d{6})$|(?:(?:003768)0?)|0\",\"$1\",0,0,[[\"(?:1(?:1[235-8]|2[3-6]|3[3-9]|4[2-6]|[58][2-8]|6[2-7]|7[2-9]|9[1-9])|(?:2[2-9]|[36][1-9])\\\\d|4(?:[2-578]\\\\d|6[02-8]|9[2-59])|5(?:[2-589]\\\\d|6[1-9]|7[2-8])|7(?:[25-9]\\\\d|3[4-9]|4[02-9])|8(?:[2679]\\\\d|3[2-9]|4[5-9]|5[1-9]|8[03-9])|9(?:[2-58]\\\\d|[679][1-9]))\\\\d{6}\",[9]],[\"[7-9]0[1-9]\\\\d{7}\",[10]],[\"00777(?:[01]|5\\\\d)\\\\d\\\\d|(?:00(?:7778|882[1245])|(?:120|800\\\\d)\\\\d\\\\d)\\\\d{4}|00(?:37|66|78)\\\\d{6,13}\"],[\"990\\\\d{6}\",[9]],[\"60\\\\d{7}\",[9]],0,[\"570\\\\d{6}\",[9]],[\"20\\\\d{8}\",[10]],[\"50[1-9]\\\\d{7}\",[10]]]],\"KE\":[\"254\",\"000\",\"(?:[17]\\\\d\\\\d|900)\\\\d{6}|(?:2|80)0\\\\d{6,7}|[4-6]\\\\d{6,8}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"[24-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[17]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:4[245]|5[1-79]|6[01457-9])\\\\d{5,7}|(?:4[136]|5[08]|62)\\\\d{7}|(?:[24]0|66)\\\\d{6,7}\",[7,8,9]],[\"(?:1(?:0[0-8]|1[0-5]|2[014]|30)|7\\\\d\\\\d)\\\\d{6}\",[9]],[\"800[02-8]\\\\d{5,6}\",[9,10]],[\"900[02-9]\\\\d{5}\",[9]]]],\"KG\":[\"996\",\"00\",\"8\\\\d{9}|[235-9]\\\\d{8}\",[9,10],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3(?:1[346]|[24-79])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235-79]|88\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{2,3})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"312(?:5[0-79]\\\\d|9(?:[0-689]\\\\d|7[0-24-9]))\\\\d{3}|(?:3(?:1(?:2[0-46-8]|3[1-9]|47|[56]\\\\d)|2(?:22|3[0-479]|6[0-7])|4(?:22|5[6-9]|6\\\\d)|5(?:22|3[4-7]|59|6\\\\d)|6(?:22|5[35-7]|6\\\\d)|7(?:22|3[468]|4[1-9]|59|[67]\\\\d)|9(?:22|4[1-8]|6\\\\d))|6(?:09|12|2[2-4])\\\\d)\\\\d{5}\",[9]],[\"312(?:58\\\\d|973)\\\\d{3}|(?:2(?:0[0-35]|2\\\\d)|5[0-24-7]\\\\d|600|7(?:[07]\\\\d|55)|88[08]|9(?:12|9[05-9]))\\\\d{6}\",[9]],[\"800\\\\d{6,7}\"]]],\"KH\":[\"855\",\"00[14-9]\",\"1\\\\d{9}|[1-9]\\\\d{7,8}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\",0,0,0,0,0,[[\"23(?:4(?:[2-4]|[56]\\\\d)|[568]\\\\d\\\\d)\\\\d{4}|23[236-9]\\\\d{5}|(?:2[4-6]|3[2-6]|4[2-4]|[5-7][2-5])(?:(?:[237-9]|4[56]|5\\\\d)\\\\d{5}|6\\\\d{5,6})\",[8,9]],[\"(?:(?:1[28]|3[18]|9[67])\\\\d|6[016-9]|7(?:[07-9]|[16]\\\\d)|8(?:[013-79]|8\\\\d))\\\\d{6}|(?:1\\\\d|9[0-57-9])\\\\d{6}|(?:2[3-6]|3[2-6]|4[2-4]|[5-7][2-5])48\\\\d{5}\",[8,9]],[\"1800(?:1\\\\d|2[019])\\\\d{4}\",[10]],[\"1900(?:1\\\\d|2[09])\\\\d{4}\",[10]]]],\"KI\":[\"686\",\"00\",\"(?:[37]\\\\d|6[0-79])\\\\d{6}|(?:[2-48]\\\\d|50)\\\\d{3}\",[5,8],0,\"0\",0,0,0,0,0,[[\"(?:[24]\\\\d|3[1-9]|50|65(?:02[12]|12[56]|22[89]|[3-5]00)|7(?:27\\\\d\\\\d|3100|5(?:02[12]|12[56]|22[89]|[34](?:00|81)|500))|8[0-5])\\\\d{3}\"],[\"(?:6200[01]|7(?:310[1-9]|5(?:02[03-9]|12[0-47-9]|22[0-7]|[34](?:0[1-9]|8[02-9])|50[1-9])))\\\\d{3}|(?:63\\\\d\\\\d|7(?:(?:[0146-9]\\\\d|2[0-689])\\\\d|3(?:[02-9]\\\\d|1[1-9])|5(?:[0-2][013-9]|[34][1-79]|5[1-9]|[6-9]\\\\d)))\\\\d{4}\",[8]],0,0,0,0,0,0,[\"30(?:0[01]\\\\d\\\\d|12(?:11|20))\\\\d\\\\d\",[8]]]],\"KM\":[\"269\",\"00\",\"[3478]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[3478]\"]]],0,0,0,0,0,0,[[\"7[4-7]\\\\d{5}\"],[\"[34]\\\\d{6}\"],0,[\"8\\\\d{6}\"]]],\"KN\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"869$1\",0,\"869\",[[\"869(?:2(?:29|36)|302|4(?:6[015-9]|70)|56[5-7])\\\\d{4}\"],[\"869(?:48[89]|55[6-8]|66\\\\d|76[02-7])\\\\d{4}\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"KP\":[\"850\",\"00|99\",\"85\\\\d{6}|(?:19\\\\d|[2-7])\\\\d{7}\",[8,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:(?:195|2)\\\\d|3[19]|4[159]|5[37]|6[17]|7[39]|85)\\\\d{6}\"],[\"19[1-3]\\\\d{7}\",[10]]]],\"KR\":[\"82\",\"00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))\",\"00[1-9]\\\\d{8,11}|(?:[12]|5\\\\d{3})\\\\d{7}|[13-6]\\\\d{9}|(?:[1-6]\\\\d|80)\\\\d{7}|[3-6]\\\\d{4,5}|(?:00|7)0\\\\d{8}\",[5,6,8,9,10,11,12,13,14],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1-$2\",[\"(?:3[1-3]|[46][1-4]|5[1-5])1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"1\"]],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"[1346]|5[1-5]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1-$2-$3\",[\"5\"],\"0$1\"]],\"0\",0,\"0(8(?:[1-46-8]|5\\\\d\\\\d))?\",0,0,0,[[\"(?:2|3[1-3]|[46][1-4]|5[1-5])[1-9]\\\\d{6,7}|(?:3[1-3]|[46][1-4]|5[1-5])1\\\\d{2,3}\",[5,6,8,9,10]],[\"1(?:05(?:[0-8]\\\\d|9[0-6])|22[13]\\\\d)\\\\d{4,5}|1(?:0[0-46-9]|[16-9]\\\\d|2[013-9])\\\\d{6,7}\",[9,10]],[\"00(?:308\\\\d{6,7}|798\\\\d{7,9})|(?:00368|80)\\\\d{7}\",[9,11,12,13,14]],[\"60[2-9]\\\\d{6}\",[9]],[\"50\\\\d{8,9}\",[10,11]],0,[\"1(?:5(?:22|33|44|66|77|88|99)|6(?:[07]0|44|6[0168]|88)|8(?:00|33|55|77|99))\\\\d{4}\",[8]],[\"15\\\\d{7,8}\",[9,10]],[\"70\\\\d{8}\",[10]]]],\"KW\":[\"965\",\"00\",\"18\\\\d{5}|(?:[2569]\\\\d|41)\\\\d{6}\",[7,8],[[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[169]|2(?:[235]|4[1-35-9])|52\"]],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[245]\"]]],0,0,0,0,0,0,[[\"2(?:[23]\\\\d\\\\d|4(?:[1-35-9]\\\\d|44)|5(?:0[034]|[2-46]\\\\d|5[1-3]|7[1-7]))\\\\d{4}\",[8]],[\"(?:41\\\\d\\\\d|5(?:(?:[05]\\\\d|1[0-7]|6[56])\\\\d|2(?:22|5[25])|7(?:55|77)|88[58])|6(?:(?:0[034679]|5[015-9]|6\\\\d)\\\\d|1(?:00|11|6[16])|2[26]2|3[36]3|4[46]4|7(?:0[013-9]|[67]\\\\d)|8[68]8|9(?:[069]\\\\d|3[039]))|9(?:(?:[04679]\\\\d|8[057-9])\\\\d|1(?:1[01]|99)|2(?:00|2\\\\d)|3(?:00|3[03])|5(?:00|5\\\\d)))\\\\d{4}\",[8]],[\"18\\\\d{5}\",[7]]]],\"KY\":[\"1\",\"011\",\"(?:345|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"345$1\",0,\"345\",[[\"345(?:2(?:22|3[23]|44|66)|333|444|6(?:23|38|40)|7(?:30|4[35-79]|6[6-9]|77)|8(?:00|1[45]|[48]8)|9(?:14|4[035-9]))\\\\d{4}\"],[\"345(?:32[1-9]|42[0-4]|5(?:1[67]|2[5-79]|4[6-9]|50|76)|649|82[56]|9(?:1[679]|2[2-9]|3[06-9]|90))\\\\d{4}\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"(?:345976|900[2-9]\\\\d\\\\d)\\\\d{4}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"],0,0,[\"345849\\\\d{4}\"]]],\"KZ\":[\"7\",\"810\",\"(?:33622|8\\\\d{8})\\\\d{5}|[78]\\\\d{9}\",[10,14],0,\"8\",0,0,0,0,\"33|7\",[[\"(?:33622|7(?:1(?:0(?:[23]\\\\d|4[0-3]|59|63)|1(?:[23]\\\\d|4[0-79]|59)|2(?:[23]\\\\d|59)|3(?:2\\\\d|3[0-79]|4[0-35-9]|59)|4(?:[24]\\\\d|3[013-9]|5[1-9]|97)|5(?:2\\\\d|3[1-9]|4[0-7]|59)|6(?:[2-4]\\\\d|5[19]|61)|72\\\\d|8(?:[27]\\\\d|3[1-46-9]|4[0-5]|59))|2(?:1(?:[23]\\\\d|4[46-9]|5[3469])|2(?:2\\\\d|3[0679]|46|5[12679])|3(?:[2-4]\\\\d|5[139])|4(?:2\\\\d|3[1-35-9]|59)|5(?:[23]\\\\d|4[0-8]|59|61)|6(?:2\\\\d|3[1-9]|4[0-4]|59)|7(?:[2379]\\\\d|40|5[279])|8(?:[23]\\\\d|4[0-3]|59)|9(?:2\\\\d|3[124578]|59))))\\\\d{5}\",[10]],[\"7(?:0[0-25-8]|47|6[0-4]|7[15-8]|85)\\\\d{7}\",[10]],[\"8(?:00|108\\\\d{3})\\\\d{7}\"],[\"809\\\\d{7}\",[10]],[\"808\\\\d{7}\",[10]],0,0,0,[\"751\\\\d{7}\",[10]]],\"8~10\"],\"LA\":[\"856\",\"00\",\"[23]\\\\d{9}|3\\\\d{8}|(?:[235-8]\\\\d|41)\\\\d{6}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2[13]|3[14]|[4-8]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"30[013-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[23]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:2[13]|[35-7][14]|41|8[1468])\\\\d{6}\",[8]],[\"(?:20(?:[23579]\\\\d|88)|30(?:2\\\\d|4))\\\\d{6}\",[9,10]],0,0,0,0,[\"30[0135-9]\\\\d{6}\",[9]]]],\"LB\":[\"961\",\"00\",\"[27-9]\\\\d{7}|[13-9]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[27-9]\"]]],\"0\",0,0,0,0,0,[[\"7(?:62|8[0-7]|9[04-9])\\\\d{4}|(?:[14-69]\\\\d|2(?:[14-69]\\\\d|[78][1-9])|7[2-57]|8[02-9])\\\\d{5}\"],[\"793(?:[01]\\\\d|2[0-4])\\\\d{3}|(?:(?:3|81)\\\\d|7(?:[01]\\\\d|6[013-9]|8[89]|9[12]))\\\\d{5}\"],0,[\"9[01]\\\\d{6}\",[8]],0,0,0,0,0,[\"80\\\\d{6}\",[8]]]],\"LC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|758|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-8]\\\\d{6})$|1\",\"758$1\",0,\"758\",[[\"758(?:234|4(?:30|5\\\\d|6[2-9]|8[0-2])|57[0-2]|(?:63|75)8)\\\\d{4}\"],[\"758(?:28[4-7]|384|4(?:6[01]|8[4-9])|5(?:1[89]|20|84)|7(?:1[2-9]|2\\\\d|3[0-3])|812)\\\\d{4}\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"LI\":[\"423\",\"00\",\"[68]\\\\d{8}|(?:[2378]\\\\d|90)\\\\d{5}\",[7,9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2379]|8(?:0[09]|7)\",\"[2379]|8(?:0(?:02|9)|7)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"69\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]],\"0\",0,\"(1001)|0\",0,0,0,[[\"(?:2(?:01|1[27]|2[02]|3\\\\d|6[02-578]|96)|3(?:[24]0|33|7[0135-7]|8[048]|9[0269]))\\\\d{4}\",[7]],[\"(?:6(?:(?:4[5-9]|5[0-469])\\\\d|6(?:[024-6]\\\\d|[17]0|3[7-9]))\\\\d|7(?:[37-9]\\\\d|42|56))\\\\d{4}\"],[\"8002[28]\\\\d\\\\d|80(?:05\\\\d|9)\\\\d{4}\"],[\"90(?:02[258]|1(?:23|3[14])|66[136])\\\\d\\\\d\",[7]],0,0,[\"870(?:28|87)\\\\d\\\\d\",[7]]]],\"LK\":[\"94\",\"00\",\"[1-9]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[1-689]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:12[2-9]|602|8[12]\\\\d|9(?:1\\\\d|22|9[245]))\\\\d{6}|(?:11|2[13-7]|3[1-8]|4[157]|5[12457]|6[35-7])[2-57]\\\\d{6}\"],[\"7(?:[0-25-8]\\\\d|4[0-4])\\\\d{6}\"],0,0,0,0,[\"1973\\\\d{5}\"]]],\"LR\":[\"231\",\"00\",\"(?:[245]\\\\d|33|77|88)\\\\d{7}|(?:2\\\\d|[4-6])\\\\d{6}\",[7,8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"4[67]|[56]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-578]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"2\\\\d{7}\",[8]],[\"(?:(?:(?:22|33)0|555|(?:77|88)\\\\d)\\\\d|4(?:240|[67]))\\\\d{5}|[56]\\\\d{6}\",[7,9]],0,[\"332(?:02|[34]\\\\d)\\\\d{4}\",[9]]]],\"LS\":[\"266\",\"00\",\"(?:[256]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2568]\"]]],0,0,0,0,0,0,[[\"2\\\\d{7}\"],[\"[56]\\\\d{7}\"],[\"800[1256]\\\\d{4}\"]]],\"LT\":[\"370\",\"00\",\"(?:[3469]\\\\d|52|[78]0)\\\\d{6}\",[8],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"52[0-7]\"],\"(0-$1)\",1],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"0 $1\",1],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"37|4(?:[15]|6[1-8])\"],\"(0-$1)\",1],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[3-6]\"],\"(0-$1)\",1]],\"0\",0,\"[08]\",0,0,0,[[\"(?:3[1478]|4[124-6]|52)\\\\d{6}\"],[\"6\\\\d{7}\"],[\"80[02]\\\\d{5}\"],[\"9(?:0[0239]|10)\\\\d{5}\"],[\"70[05]\\\\d{5}\"],0,[\"70[67]\\\\d{5}\"],0,[\"[89]01\\\\d{5}\"],[\"808\\\\d{5}\"]]],\"LU\":[\"352\",\"00\",\"35[013-9]\\\\d{4,8}|6\\\\d{8}|35\\\\d{2,4}|(?:[2457-9]\\\\d|3[0-46-9])\\\\d{2,9}\",[4,5,6,7,8,9,10,11],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"20[2-689]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"80[01]|90[015]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"20\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4 $5\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,5})\",\"$1 $2 $3 $4\",[\"[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]\"]]],0,0,\"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\\\d)\",0,0,0,[[\"(?:35[013-9]|80[2-9]|90[89])\\\\d{1,8}|(?:2[2-9]|3[0-46-9]|[457]\\\\d|8[13-9]|9[2-579])\\\\d{2,9}\"],[\"6(?:[269][18]|5[1568]|7[189]|81)\\\\d{6}\",[9]],[\"800\\\\d{5}\",[8]],[\"90[015]\\\\d{5}\",[8]],0,0,0,0,[\"20(?:1\\\\d{5}|[2-689]\\\\d{1,7})\",[4,5,6,7,8,9,10]],[\"801\\\\d{5}\",[8]]]],\"LV\":[\"371\",\"00\",\"(?:[268]\\\\d|90)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[269]|8[01]\"]]],0,0,0,0,0,0,[[\"6\\\\d{7}\"],[\"23(?:23[0-57-9]|33[0238])\\\\d{3}|2(?:[0-24-9]\\\\d\\\\d|3(?:0[07]|[14-9]\\\\d|2[024-9]|3[0-24-9]))\\\\d{4}\"],[\"80\\\\d{6}\"],[\"90\\\\d{6}\"],0,0,0,0,0,[\"81\\\\d{6}\"]]],\"LY\":[\"218\",\"00\",\"[2-9]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"[2-9]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:2(?:0[56]|[1-6]\\\\d|7[124579]|8[124])|3(?:1\\\\d|2[2356])|4(?:[17]\\\\d|2[1-357]|5[2-4]|8[124])|5(?:[1347]\\\\d|2[1-469]|5[13-5]|8[1-4])|6(?:[1-479]\\\\d|5[2-57]|8[1-5])|7(?:[13]\\\\d|2[13-79])|8(?:[124]\\\\d|5[124]|84))\\\\d{6}\"],[\"9[1-6]\\\\d{7}\"]]],\"MA\":[\"212\",\"00\",\"[5-8]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5[45]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1-$2\",[\"5(?:2[2-46-9]|3[3-9]|9)|8(?:0[89]|92)\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"8\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1-$2\",[\"[5-7]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"5(?:2(?:[0-25-79]\\\\d|3[1-578]|4[02-46-8]|8[0235-7])|3(?:[0-47]\\\\d|5[02-9]|6[02-8]|8[014-9]|9[3-9])|(?:4[067]|5[03])\\\\d)\\\\d{5}\"],[\"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[0167]\\\\d|2[0-4]|5[01]|8[0-3]))\\\\d{6}\"],[\"80[0-7]\\\\d{6}\"],[\"89\\\\d{7}\"],0,0,0,0,[\"(?:592(?:4[0-2]|93)|80[89]\\\\d\\\\d)\\\\d{4}\"]]],\"MC\":[\"377\",\"00\",\"(?:[3489]|6\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"4\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[389]\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"6\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:870|9[2-47-9]\\\\d)\\\\d{5}\",[8]],[\"4(?:[469]\\\\d|5[1-9])\\\\d{5}|(?:3|6\\\\d)\\\\d{7}\"],[\"(?:800|90\\\\d)\\\\d{5}\",[8]]]],\"MD\":[\"373\",\"00\",\"(?:[235-7]\\\\d|[89]0)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"22|3\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[25-7]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:(?:2[1-9]|3[1-79])\\\\d|5(?:33|5[257]))\\\\d{5}\"],[\"562\\\\d{5}|(?:6\\\\d|7[16-9])\\\\d{6}\"],[\"800\\\\d{5}\"],[\"90[056]\\\\d{5}\"],0,0,[\"803\\\\d{5}\"],0,[\"3[08]\\\\d{6}\"],[\"808\\\\d{5}\"]]],\"ME\":[\"382\",\"00\",\"(?:20|[3-79]\\\\d)\\\\d{6}|80\\\\d{6,7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:20[2-8]|3(?:[0-2][2-7]|3[24-7])|4(?:0[2-467]|1[2467])|5(?:0[2467]|1[24-7]|2[2-467]))\\\\d{5}\",[8]],[\"6(?:[07-9]\\\\d|3[024]|6[0-25])\\\\d{5}\",[8]],[\"80(?:[0-2578]|9\\\\d)\\\\d{5}\"],[\"9(?:4[1568]|5[178])\\\\d{5}\",[8]],0,0,[\"77[1-9]\\\\d{5}\",[8]],0,[\"78[1-49]\\\\d{5}\",[8]]]],\"MF\":[\"590\",\"00\",\"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],0,\"0\",0,0,0,0,0,[[\"590(?:0[079]|[14]3|[27][79]|3[03-7]|5[0-268]|87)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\\\d)|6(?:1[016-9]|5[0-4]|[67]\\\\d))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:(?:39[5-7]|76[018])\\\\d|475[0-5])\\\\d{4}\"]]],\"MG\":[\"261\",\"00\",\"[23]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[23]\"],\"0$1\"]],\"0\",0,\"([24-9]\\\\d{6})$|0\",\"20$1\",0,0,[[\"2072[29]\\\\d{4}|20(?:2\\\\d|4[47]|5[3467]|6[279]|7[35]|8[268]|9[245])\\\\d{5}\"],[\"3[2-47-9]\\\\d{7}\"],0,0,0,0,0,0,[\"22\\\\d{7}\"]]],\"MH\":[\"692\",\"011\",\"329\\\\d{4}|(?:[256]\\\\d|45)\\\\d{5}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-6]\"]]],\"1\",0,0,0,0,0,[[\"(?:247|528|625)\\\\d{4}\"],[\"(?:(?:23|54)5|329|45[35-8])\\\\d{4}\"],0,0,0,0,0,0,[\"635\\\\d{4}\"]]],\"MK\":[\"389\",\"00\",\"[2-578]\\\\d{7}\",[8],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2|34[47]|4(?:[37]7|5[47]|64)\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[347]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[58]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:(?:2(?:62|77)0|3444)\\\\d|4[56]440)\\\\d{3}|(?:34|4[357])700\\\\d{3}|(?:2(?:[0-3]\\\\d|5[0-578]|6[01]|82)|3(?:1[3-68]|[23][2-68]|4[23568])|4(?:[23][2-68]|4[3-68]|5[2568]|6[25-8]|7[24-68]|8[4-68]))\\\\d{5}\"],[\"7(?:3555|(?:474|9[019]7)7)\\\\d{3}|7(?:[0-25-8]\\\\d\\\\d|3(?:[1-48]\\\\d|6[01]|7[01578])|4(?:2\\\\d|60|7[01578])|9(?:[2-4]\\\\d|5[01]|7[015]))\\\\d{4}\"],[\"800\\\\d{5}\"],[\"5\\\\d{7}\"],0,0,0,0,0,[\"8(?:0[1-9]|[1-9]\\\\d)\\\\d{5}\"]]],\"ML\":[\"223\",\"00\",\"[24-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24-9]\"]]],0,0,0,0,0,0,[[\"2(?:07[0-8]|12[67])\\\\d{4}|(?:2(?:02|1[4-689])|4(?:0[0-4]|4[1-39]))\\\\d{5}\"],[\"2(?:0(?:01|79)|17\\\\d)\\\\d{4}|(?:5[01]|[679]\\\\d|8[2-49])\\\\d{6}\"],[\"80\\\\d{6}\"]]],\"MM\":[\"95\",\"00\",\"1\\\\d{5,7}|95\\\\d{6}|(?:[4-7]|9[0-46-9])\\\\d{6,8}|(?:2|8\\\\d)\\\\d{5,8}\",[6,7,8,9,10],[[\"(\\\\d)(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"16|2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[4-7]|8[1-35]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4,6})\",\"$1 $2 $3\",[\"9(?:2[0-4]|[35-9]|4[137-9])\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"92\"],\"0$1\"],[\"(\\\\d)(\\\\d{5})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:1(?:(?:2\\\\d|3[56]|[89][0-6])\\\\d|4(?:2[29]|62|7[0-2]|83)|6)|2(?:2(?:00|8[34])|4(?:0\\\\d|[26]2|7[0-2]|83)|51\\\\d\\\\d)|4(?:2(?:2\\\\d\\\\d|48[013])|3(?:20\\\\d|4(?:70|83)|56)|420\\\\d|5470)|6(?:0(?:[23]|88\\\\d)|(?:124|[56]2\\\\d)\\\\d|2472|3(?:20\\\\d|470)|4(?:2[04]\\\\d|472)|7(?:(?:3\\\\d|8[01459])\\\\d|4[67]0)))\\\\d{4}|5(?:2(?:2\\\\d{5,6}|47[02]\\\\d{4})|(?:3472|4(?:2(?:1|86)|470)|522\\\\d|6(?:20\\\\d|483)|7(?:20\\\\d|48[01])|8(?:20\\\\d|47[02])|9(?:20\\\\d|470))\\\\d{4})|7(?:(?:0470|4(?:25\\\\d|470)|5(?:202|470|96\\\\d))\\\\d{4}|1(?:20\\\\d{4,5}|4(?:70|83)\\\\d{4}))|8(?:1(?:2\\\\d{5,6}|4(?:10|7[01]\\\\d)\\\\d{3})|2(?:2\\\\d{5,6}|(?:320|490\\\\d)\\\\d{3})|(?:3(?:2\\\\d\\\\d|470)|4[24-7]|5(?:(?:2\\\\d|51)\\\\d|4(?:[1-35-9]\\\\d|4[0-57-9]))|6[23])\\\\d{4})|(?:1[2-6]\\\\d|4(?:2[24-8]|3[2-7]|[46][2-6]|5[3-5])|5(?:[27][2-8]|3[2-68]|4[24-8]|5[23]|6[2-4]|8[24-7]|9[2-7])|6(?:[19]20|42[03-6]|(?:52|7[45])\\\\d)|7(?:[04][24-8]|[15][2-7]|22|3[2-4])|8(?:1[2-689]|2[2-8]|[35]2\\\\d))\\\\d{4}|25\\\\d{5,6}|(?:2[2-9]|6(?:1[2356]|[24][2-6]|3[24-6]|5[2-4]|6[2-8]|7[235-7]|8[245]|9[24])|8(?:3[24]|5[245]))\\\\d{4}\",[6,7,8,9]],[\"(?:17[01]|9(?:2(?:[0-4]|[56]\\\\d\\\\d)|(?:3(?:[0-36]|4\\\\d)|(?:6\\\\d|8[89]|9[4-8])\\\\d|7(?:3|40|[5-9]\\\\d))\\\\d|4(?:(?:[0245]\\\\d|[1379])\\\\d|88)|5[0-6])\\\\d)\\\\d{4}|9[69]1\\\\d{6}|9(?:[68]\\\\d|9[089])\\\\d{5}\",[7,8,9,10]],[\"80080(?:0[1-9]|2\\\\d)\\\\d{3}\",[10]],0,0,0,0,0,[\"1333\\\\d{4}|[12]468\\\\d{4}\",[8]]]],\"MN\":[\"976\",\"001\",\"[12]\\\\d{7,9}|[5-9]\\\\d{7}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[12]1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[5-9]\"]],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[12]2[1-3]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5,6})\",\"$1 $2\",[\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])\",\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"[12]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"[12]2[1-3]\\\\d{5,6}|(?:(?:[12](?:1|27)|5[368])\\\\d\\\\d|7(?:0(?:[0-5]\\\\d|7[078]|80)|128))\\\\d{4}|[12](?:3[2-8]|4[2-68]|5[1-4689])\\\\d{6,7}\"],[\"(?:83[01]|92[039])\\\\d{5}|(?:5[05]|6[069]|8[015689]|9[013-9])\\\\d{6}\",[8]],0,0,0,0,0,0,[\"712[0-79]\\\\d{4}|7(?:1[013-9]|[25-9]\\\\d)\\\\d{5}\",[8]]]],\"MO\":[\"853\",\"00\",\"0800\\\\d{3}|(?:28|[68]\\\\d)\\\\d{6}\",[7,8],[[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[268]\"]]],0,0,0,0,0,0,[[\"(?:28[2-9]|8(?:11|[2-57-9]\\\\d))\\\\d{5}\",[8]],[\"6800[0-79]\\\\d{3}|6(?:[235]\\\\d\\\\d|6(?:0[0-5]|[1-9]\\\\d)|8(?:0[1-9]|[14-8]\\\\d|2[5-9]|[39][0-4]))\\\\d{4}\",[8]],[\"0800\\\\d{3}\",[7]]]],\"MP\":[\"1\",\"011\",\"[58]\\\\d{9}|(?:67|90)0\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"670$1\",0,\"670\",[[\"670(?:2(?:3[3-7]|56|8[4-8])|32[1-38]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\\\d{4}\"],[\"\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"MQ\":[\"596\",\"00\",\"596\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"596(?:[03-7]\\\\d|1[05]|2[7-9]|8[0-39]|9[04-9])\\\\d{4}\"],[\"69(?:6(?:[0-46-9]\\\\d|5[0-6])|727)\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:397[0-3]|477[0-5]|76(?:6\\\\d|7[0-367]))\\\\d{4}\"]]],\"MR\":[\"222\",\"00\",\"(?:[2-4]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-48]\"]]],0,0,0,0,0,0,[[\"(?:25[08]|35\\\\d|45[1-7])\\\\d{5}\"],[\"[2-4][0-46-9]\\\\d{6}\"],[\"800\\\\d{5}\"]]],\"MS\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|664|900)\\\\d{7}\",[10],0,\"1\",0,\"([34]\\\\d{6})$|1\",\"664$1\",0,\"664\",[[\"6644(?:1[0-3]|91)\\\\d{4}\"],[\"664(?:3(?:49|9[1-6])|49[2-6])\\\\d{4}\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"MT\":[\"356\",\"00\",\"3550\\\\d{4}|(?:[2579]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2357-9]\"]]],0,0,0,0,0,0,[[\"20(?:3[1-4]|6[059])\\\\d{4}|2(?:0[19]|[1-357]\\\\d|60)\\\\d{5}\"],[\"(?:7(?:210|[79]\\\\d\\\\d)|9(?:[29]\\\\d\\\\d|69[67]|8(?:1[1-3]|89|97)))\\\\d{4}\"],[\"800(?:02|[3467]\\\\d)\\\\d{3}\"],[\"5(?:0(?:0(?:37|43)|(?:6\\\\d|70|9[0168])\\\\d)|[12]\\\\d0[1-5])\\\\d{3}\"],0,0,[\"501\\\\d{5}\"],[\"7117\\\\d{4}\"],[\"3550\\\\d{4}\"]]],\"MU\":[\"230\",\"0(?:0|[24-7]0|3[03])\",\"(?:[57]|8\\\\d\\\\d)\\\\d{7}|[2-468]\\\\d{6}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-46]|8[013]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[57]\"]],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"8\"]]],0,0,0,0,0,0,[[\"(?:2(?:[0346-8]\\\\d|1[0-7])|4(?:[013568]\\\\d|2[4-8]|71)|54(?:[3-5]\\\\d|71)|6\\\\d\\\\d|8(?:14|3[129]))\\\\d{4}\",[7,8]],[\"5(?:4(?:2[1-389]|7[1-9])|87[15-8])\\\\d{4}|(?:5(?:2[5-9]|4[3-689]|[57]\\\\d|8[0-689]|9[0-8])|7(?:0[0-3]|3[013]))\\\\d{5}\",[8]],[\"802\\\\d{7}|80[0-2]\\\\d{4}\",[7,10]],[\"30\\\\d{5}\",[7]],0,0,0,0,[\"3(?:20|9\\\\d)\\\\d{4}\",[7]]],\"020\"],\"MV\":[\"960\",\"0(?:0|19)\",\"(?:800|9[0-57-9]\\\\d)\\\\d{7}|[34679]\\\\d{6}\",[7,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[34679]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]],0,0,0,0,0,0,[[\"(?:3(?:0[0-3]|3[0-59])|6(?:[58][024689]|6[024-68]|7[02468]))\\\\d{4}\",[7]],[\"(?:46[46]|[79]\\\\d\\\\d)\\\\d{4}\",[7]],[\"800\\\\d{7}\",[10]],[\"900\\\\d{7}\",[10]],0,0,[\"4(?:0[01]|50)\\\\d{4}\",[7]]],\"00\"],\"MW\":[\"265\",\"00\",\"(?:[1289]\\\\d|31|77)\\\\d{7}|1\\\\d{6}\",[7,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[137-9]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:1[2-9]|2[12]\\\\d\\\\d)\\\\d{5}\"],[\"111\\\\d{6}|(?:31|77|[89][89])\\\\d{7}\",[9]]]],\"MX\":[\"52\",\"0[09]\",\"[2-9]\\\\d{9}\",[10],[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"33|5[56]|81\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-9]\"]]],0,0,0,0,0,0,[[\"657[12]\\\\d{6}|(?:2(?:0[01]|2\\\\d|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[25-7][1-9]|3[1-8]|4\\\\d|8[1-35-9]|9[2-689])|5(?:[56]\\\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[1-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1346][1-9]|[27]\\\\d|5[13-9]|8[1-69]|9[17])|8(?:1\\\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[0-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69]\\\\d|7[12]|8[1-8]))\\\\d{7}\"],[\"657[12]\\\\d{6}|(?:2(?:2\\\\d|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[25-7][1-9]|3[1-8]|4\\\\d|8[1-35-9]|9[2-689])|5(?:[56]\\\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[1-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1346][1-9]|[27]\\\\d|5[13-9]|8[1-69]|9[17])|8(?:1\\\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[0-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69]\\\\d|7[12]|8[1-8]))\\\\d{7}\"],[\"8(?:00|88)\\\\d{7}\"],[\"900\\\\d{7}\"],[\"500\\\\d{7}\"],0,0,0,0,[\"300\\\\d{7}\"]],\"00\"],\"MY\":[\"60\",\"00\",\"1\\\\d{8,9}|(?:3\\\\d|[4-9])\\\\d{7}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"[4-79]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1-$2 $3\",[\"1(?:[02469]|[378][1-9]|53)|8\",\"1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"3\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3-$4\",[\"1(?:[367]|80)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"15\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"1\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:3(?:2[0-36-9]|3[0-368]|4[0-278]|5[0-24-8]|6[0-467]|7[1246-9]|8\\\\d|9[0-57])\\\\d|4(?:2[0-689]|[3-79]\\\\d|8[1-35689])|5(?:2[0-589]|[3468]\\\\d|5[0-489]|7[1-9]|9[23])|6(?:2[2-9]|3[1357-9]|[46]\\\\d|5[0-6]|7[0-35-9]|85|9[015-8])|7(?:[2579]\\\\d|3[03-68]|4[0-8]|6[5-9]|8[0-35-9])|8(?:[24][2-8]|3[2-5]|5[2-7]|6[2-589]|7[2-578]|[89][2-9])|9(?:0[57]|13|[25-7]\\\\d|[3489][0-8]))\\\\d{5}\",[8,9]],[\"1(?:1888[689]|4400|8(?:47|8[27])[0-4])\\\\d{4}|1(?:0(?:[23568]\\\\d|4[0-6]|7[016-9]|9[0-8])|1(?:[1-5]\\\\d\\\\d|6(?:0[5-9]|[1-9]\\\\d)|7(?:[0-4]\\\\d|5[0-7]))|(?:[269]\\\\d|[37][1-9]|4[235-9])\\\\d|5(?:31|9\\\\d\\\\d)|8(?:1[23]|[236]\\\\d|4[06]|5(?:46|[7-9])|7[016-9]|8[01]|9[0-8]))\\\\d{5}\",[9,10]],[\"1[378]00\\\\d{6}\",[10]],[\"1600\\\\d{6}\",[10]],0,0,0,0,[\"15(?:4(?:6[0-4]\\\\d|8(?:0[125]|[17]\\\\d|21|3[01]|4[01589]|5[014]|6[02]))|6(?:32[0-6]|78\\\\d))\\\\d{4}\",[10]]]],\"MZ\":[\"258\",\"00\",\"(?:2|8\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2|8[2-79]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]],0,0,0,0,0,0,[[\"2(?:[1346]\\\\d|5[0-2]|[78][12]|93)\\\\d{5}\",[8]],[\"8[2-79]\\\\d{7}\",[9]],[\"800\\\\d{6}\",[9]]]],\"NA\":[\"264\",\"00\",\"[68]\\\\d{7,8}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"6\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"87\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"64426\\\\d{3}|6(?:1(?:2[2-7]|3[01378]|4[0-4])|254|32[0237]|4(?:27|41|5[25])|52[236-8]|626|7(?:2[2-4]|30))\\\\d{4,5}|6(?:1(?:(?:0\\\\d|2[0189]|3[24-69]|4[5-9])\\\\d|17|69|7[014])|2(?:17|5[0-36-8]|69|70)|3(?:17|2[14-689]|34|6[289]|7[01]|81)|4(?:17|2[0-2]|4[06]|5[0137]|69|7[01])|5(?:17|2[0459]|69|7[01])|6(?:17|25|38|42|69|7[01])|7(?:17|2[569]|3[13]|6[89]|7[01]))\\\\d{4}\"],[\"(?:60|8[1245])\\\\d{7}\",[9]],[\"80\\\\d{7}\",[9]],[\"8701\\\\d{5}\",[9]],0,0,0,0,[\"8(?:3\\\\d\\\\d|86)\\\\d{5}\"]]],\"NC\":[\"687\",\"00\",\"(?:050|[2-57-9]\\\\d\\\\d)\\\\d{3}\",[6],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1.$2.$3\",[\"[02-57-9]\"]]],0,0,0,0,0,0,[[\"(?:2[03-9]|3[0-5]|4[1-7]|88)\\\\d{4}\"],[\"(?:5[0-4]|[79]\\\\d|8[0-79])\\\\d{4}\"],[\"050\\\\d{3}\"],[\"36\\\\d{4}\"]]],\"NE\":[\"227\",\"00\",\"[027-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"08\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[089]|2[013]|7[0467]\"]]],0,0,0,0,0,0,[[\"2(?:0(?:20|3[1-8]|4[13-5]|5[14]|6[14578]|7[1-578])|1(?:4[145]|5[14]|6[14-68]|7[169]|88))\\\\d{4}\"],[\"(?:23|7[0467]|[89]\\\\d)\\\\d{6}\"],[\"08\\\\d{6}\"],[\"09\\\\d{6}\"]]],\"NF\":[\"672\",\"00\",\"[13]\\\\d{5}\",[6],[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"1[0-3]\"]],[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"[13]\"]]],0,0,\"([0-258]\\\\d{4})$\",\"3$1\",0,0,[[\"(?:1(?:06|17|28|39)|3[0-2]\\\\d)\\\\d{3}\"],[\"(?:14|3[58])\\\\d{4}\"]]],\"NG\":[\"234\",\"009\",\"2[0-24-9]\\\\d{8}|[78]\\\\d{10,13}|[7-9]\\\\d{9}|[1-9]\\\\d{7}|[124-7]\\\\d{6}\",[7,8,10,11,12,13,14],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"78\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]|9(?:0[3-9]|[1-9])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-6]|7(?:0[0-689]|[1-79])|8[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"20[129]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})(\\\\d{5,6})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"20(?:[1259]\\\\d|3[013-9]|4[1-8]|6[024-689]|7[1-79]|8[2-9])\\\\d{6}|(?:(?:[1-356]\\\\d|4[02-8]|8[2-9])\\\\d|9(?:0[3-9]|[1-9]\\\\d))\\\\d{5}|7(?:0(?:[013-689]\\\\d|2[0-24-9])\\\\d{3,4}|[1-79]\\\\d{6})|(?:[12]\\\\d|4[147]|5[14579]|6[1578]|7[1-3578])\\\\d{5}\",[7,8,10]],[\"(?:702[0-24-9]|819[01])\\\\d{6}|(?:7(?:0[13-9]|[12]\\\\d)|8(?:0[1-9]|1[0-8])|9(?:0[1-9]|1[1-6]))\\\\d{7}\",[10]],[\"800\\\\d{7,11}\",[10,11,12,13,14]],0,0,0,[\"700\\\\d{7,11}\",[10,11,12,13,14]]]],\"NI\":[\"505\",\"00\",\"(?:1800|[25-8]\\\\d{3})\\\\d{4}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[125-8]\"]]],0,0,0,0,0,0,[[\"2\\\\d{7}\"],[\"(?:5(?:5[0-7]|[78]\\\\d)|6(?:20|3[035]|4[045]|5[05]|77|8[1-9]|9[059])|(?:7[5-8]|8\\\\d)\\\\d)\\\\d{5}\"],[\"1800\\\\d{4}\"]]],\"NL\":[\"31\",\"00\",\"(?:[124-7]\\\\d\\\\d|3(?:[02-9]\\\\d|1[0-8]))\\\\d{6}|8\\\\d{6,9}|9\\\\d{6,10}|1\\\\d{4,5}\",[5,6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{4,7})\",\"$1 $2\",[\"[89]0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"66\"],\"0$1\"],[\"(\\\\d)(\\\\d{8})\",\"$1 $2\",[\"6\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-578]|91\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:1(?:[035]\\\\d|1[13-578]|6[124-8]|7[24]|8[0-467])|2(?:[0346]\\\\d|2[2-46-9]|5[125]|9[479])|3(?:[03568]\\\\d|1[3-8]|2[01]|4[1-8])|4(?:[0356]\\\\d|1[1-368]|7[58]|8[15-8]|9[23579])|5(?:[0358]\\\\d|[19][1-9]|2[1-57-9]|4[13-8]|6[126]|7[0-3578])|7\\\\d\\\\d)\\\\d{6}\",[9]],[\"(?:6[1-58]|970\\\\d)\\\\d{7}\",[9,11]],[\"800\\\\d{4,7}\",[7,8,9,10]],[\"90[069]\\\\d{4,7}\",[7,8,9,10]],0,0,[\"140(?:1[035]|2[0346]|3[03568]|4[0356]|5[0358]|8[458])|(?:140(?:1[16-8]|2[259]|3[124]|4[17-9]|5[124679]|7)|8[478]\\\\d{6})\\\\d\",[5,6,9]],[\"66\\\\d{7}\",[9]],[\"(?:85|91)\\\\d{7}\",[9]]]],\"NO\":[\"47\",\"00\",\"(?:0|[2-9]\\\\d{3})\\\\d{4}\",[5,8],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-79]\"]]],0,0,0,0,0,\"[02-689]|7[0-8]\",[[\"(?:2[1-4]|3[1-3578]|5[1-35-7]|6[1-4679]|7[0-8])\\\\d{6}\",[8]],[\"(?:4[015-8]|9\\\\d)\\\\d{6}\",[8]],[\"80[01]\\\\d{5}\",[8]],[\"82[09]\\\\d{5}\",[8]],[\"880\\\\d{5}\",[8]],0,[\"(?:0[2-9]|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d\\\\d))\\\\d{3}\"],0,[\"85[0-5]\\\\d{5}\",[8]],[\"810(?:0[0-6]|[2-8]\\\\d)\\\\d{3}\",[8]]]],\"NP\":[\"977\",\"00\",\"(?:1\\\\d|9)\\\\d{9}|[1-9]\\\\d{7}\",[8,10,11],[[\"(\\\\d)(\\\\d{7})\",\"$1-$2\",[\"1[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1-$2\",[\"1[01]|[2-8]|9(?:[1-59]|[67][2-6])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\",[\"9\"]]],\"0\",0,0,0,0,0,[[\"(?:1[0-6]\\\\d|99[02-6])\\\\d{5}|(?:2[13-79]|3[135-8]|4[146-9]|5[135-7]|6[13-9]|7[15-9]|8[1-46-9]|9[1-7])[2-6]\\\\d{5}\",[8]],[\"9(?:00|6[0-3]|7[024-6]|8[0-24-68])\\\\d{7}\",[10]],[\"1(?:66001|800\\\\d\\\\d)\\\\d{5}\",[11]]]],\"NR\":[\"674\",\"00\",\"(?:444|(?:55|8\\\\d)\\\\d|666)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-68]\"]]],0,0,0,0,0,0,[[\"444\\\\d{4}\"],[\"(?:55[3-9]|666|8\\\\d\\\\d)\\\\d{4}\"]]],\"NU\":[\"683\",\"00\",\"(?:[4-7]|888\\\\d)\\\\d{3}\",[4,7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"8\"]]],0,0,0,0,0,0,[[\"[47]\\\\d{3}\",[4]],[\"(?:[56]|888[1-9])\\\\d{3}\"]]],\"NZ\":[\"64\",\"0(?:0|161)\",\"[1289]\\\\d{9}|50\\\\d{5}(?:\\\\d{2,3})?|[27-9]\\\\d{7,8}|(?:[34]\\\\d|6[0-35-9])\\\\d{6}|8\\\\d{4,6}\",[5,6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{3,8})\",\"$1 $2\",[\"8[1-79]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"50[036-8]|8|90\",\"50(?:[0367]|88)|8|90\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"24|[346]|7[2-57-9]|9[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:10|74)|[589]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1|2[028]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\",\"$1 $2 $3\",[\"2(?:[169]|7[0-35-9])|7\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"24099\\\\d{3}|(?:3[2-79]|[49][2-9]|6[235-9]|7[2-57-9])\\\\d{6}\",[8]],[\"2(?:[0-27-9]\\\\d|6)\\\\d{6,7}|2(?:1\\\\d|75)\\\\d{5}\",[8,9,10]],[\"508\\\\d{6,7}|80\\\\d{6,8}\",[8,9,10]],[\"(?:1[13-57-9]\\\\d{5}|50(?:0[08]|30|66|77|88))\\\\d{3}|90\\\\d{6,8}\",[7,8,9,10]],[\"70\\\\d{7}\",[9]],0,[\"8(?:1[16-9]|22|3\\\\d|4[045]|5[459]|6[235-9]|7[0-3579]|90)\\\\d{2,7}\"]],\"00\"],\"OM\":[\"968\",\"00\",\"(?:1505|[279]\\\\d{3}|500)\\\\d{4}|800\\\\d{5,6}\",[7,8,9],[[\"(\\\\d{3})(\\\\d{4,6})\",\"$1 $2\",[\"[58]\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"2\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[179]\"]]],0,0,0,0,0,0,[[\"2[1-6]\\\\d{6}\",[8]],[\"(?:1505|90[1-9]\\\\d)\\\\d{4}|(?:7[126-9]|9[1-9])\\\\d{6}\",[8]],[\"8007\\\\d{4,5}|(?:500|800[05])\\\\d{4}\"],[\"900\\\\d{5}\",[8]]]],\"PA\":[\"507\",\"00\",\"(?:00800|8\\\\d{3})\\\\d{6}|[68]\\\\d{7}|[1-57-9]\\\\d{6}\",[7,8,10,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[1-57-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"[68]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],0,0,0,0,0,0,[[\"(?:1(?:0\\\\d|1[479]|2[37]|3[0137]|4[17]|5[05]|6[058]|7[0167]|8[2358]|9[1389])|2(?:[0235-79]\\\\d|1[0-7]|4[013-9]|8[02-9])|3(?:[089]\\\\d|1[0-7]|2[0-5]|33|4[0-79]|5[0-35]|6[068]|7[0-8])|4(?:00|3[0-579]|4\\\\d|7[0-57-9])|5(?:[01]\\\\d|2[0-7]|[56]0|79)|7(?:0[09]|2[0-26-8]|3[03]|4[04]|5[05-9]|6[0156]|7[0-24-9]|8[5-9]|90)|8(?:09|2[89]|3\\\\d|4[0-24-689]|5[014]|8[02])|9(?:0[5-9]|1[0135-8]|2[036-9]|3[35-79]|40|5[0457-9]|6[05-9]|7[04-9]|8[35-8]|9\\\\d))\\\\d{4}\",[7]],[\"(?:1[16]1|21[89]|6\\\\d{3}|8(?:1[01]|7[23]))\\\\d{4}\",[7,8]],[\"800\\\\d{4,5}|(?:00800|800\\\\d)\\\\d{6}\"],[\"(?:8(?:22|55|60|7[78]|86)|9(?:00|81))\\\\d{4}\",[7]]]],\"PE\":[\"51\",\"00|19(?:1[124]|77|90)00\",\"(?:[14-8]|9\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"80\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"1\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[4-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"]]],\"0\",0,0,0,0,0,[[\"(?:(?:4[34]|5[14])[0-8]\\\\d|7(?:173|3[0-8]\\\\d)|8(?:10[05689]|6(?:0[06-9]|1[6-9]|29)|7(?:0[569]|[56]0)))\\\\d{4}|(?:1[0-8]|4[12]|5[236]|6[1-7]|7[246]|8[2-4])\\\\d{6}\",[8]],[\"9\\\\d{8}\",[9]],[\"800\\\\d{5}\",[8]],[\"805\\\\d{5}\",[8]],[\"80[24]\\\\d{5}\",[8]],0,0,0,0,[\"801\\\\d{5}\",[8]]],\"00\",\" Anexo \"],\"PF\":[\"689\",\"00\",\"4\\\\d{5}(?:\\\\d{2})?|8\\\\d{7,8}\",[6,8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"44\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4|8[7-9]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]],0,0,0,0,0,0,[[\"4(?:0[4-689]|9[4-68])\\\\d{5}\",[8]],[\"8[7-9]\\\\d{6}\",[8]],[\"80[0-5]\\\\d{6}\",[9]],0,0,0,[\"44\\\\d{4}\",[6]],0,[\"499\\\\d{5}\",[8]]]],\"PG\":[\"675\",\"00|140[1-3]\",\"(?:180|[78]\\\\d{3})\\\\d{4}|(?:[2-589]\\\\d|64)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"18|[2-69]|85\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[78]\"]]],0,0,0,0,0,0,[[\"(?:(?:3[0-2]|4[257]|5[34]|9[78])\\\\d|64[1-9]|85[02-46-9])\\\\d{4}\",[7]],[\"(?:7\\\\d|8[1-38])\\\\d{6}\",[8]],[\"180\\\\d{4}\",[7]],0,0,0,0,[\"27[01]\\\\d{4}\",[7]],[\"2(?:0[0-57]|7[568])\\\\d{4}\",[7]]],\"00\"],\"PH\":[\"63\",\"00\",\"(?:[2-7]|9\\\\d)\\\\d{8}|2\\\\d{5}|(?:1800|8)\\\\d{7,9}\",[6,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"2\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2\",\"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"346|4(?:27|9[35])|883\",\"3469|4(?:279|9(?:30|56))|8834\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-7]|8[2-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{4})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"1\"]]],\"0\",0,0,0,0,0,[[\"(?:(?:2[3-8]|3[2-68]|4[2-9]|5[2-6]|6[2-58]|7[24578])\\\\d{3}|88(?:22\\\\d\\\\d|42))\\\\d{4}|(?:2|8[2-8]\\\\d\\\\d)\\\\d{5}\",[6,8,9,10]],[\"(?:8(?:1[37]|9[5-8])|9(?:0[5-9]|1[0-24-9]|[235-7]\\\\d|4[2-9]|8[135-9]|9[1-9]))\\\\d{7}\",[10]],[\"1800\\\\d{7,9}\",[11,12,13]]]],\"PK\":[\"92\",\"00\",\"122\\\\d{6}|[24-8]\\\\d{10,11}|9(?:[013-9]\\\\d{8,10}|2(?:[01]\\\\d\\\\d|2(?:[06-8]\\\\d|1[01]))\\\\d{7})|(?:[2-8]\\\\d{3}|92(?:[0-7]\\\\d|8[1-9]))\\\\d{6}|[24-9]\\\\d{8}|[89]\\\\d{7}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,7})\",\"$1 $2 $3\",[\"[89]0\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"1\"]],[\"(\\\\d{3})(\\\\d{6,7})\",\"$1 $2\",[\"2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])\",\"9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{7,8})\",\"$1 $2\",[\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"58\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[24-9]\"],\"(0$1)\"]],\"0\",0,0,0,0,0,[[\"(?:(?:21|42)[2-9]|58[126])\\\\d{7}|(?:2[25]|4[0146-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\\\\d{6,7}|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8]))[2-9]\\\\d{5,6}\",[9,10]],[\"3(?:[0-247]\\\\d|3[0-79]|55|64)\\\\d{7}\",[10]],[\"800\\\\d{5}(?:\\\\d{3})?\",[8,11]],[\"900\\\\d{5}\",[8]],[\"122\\\\d{6}\",[9]],0,[\"(?:2(?:[125]|3[2358]|4[2-4]|9[2-8])|4(?:[0-246-9]|5[3479])|5(?:[1-35-7]|4[2-467])|6(?:0[468]|[1-8])|7(?:[14]|2[236])|8(?:[16]|2[2-689]|3[23578]|4[3478]|5[2356])|9(?:1|22|3[27-9]|4[2-6]|6[3569]|9[2-7]))111\\\\d{6}\",[11,12]]]],\"PL\":[\"48\",\"00\",\"(?:6|8\\\\d\\\\d)\\\\d{7}|[1-9]\\\\d{6}(?:\\\\d{2})?|[26]\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{5})\",\"$1\",[\"19\"]],[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"11|20|64\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1\",\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"64\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[2-8]|[2-7]|8[1-79]|9[145]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"8\"]]],0,0,0,0,0,0,[[\"47\\\\d{7}|(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])(?:[02-9]\\\\d{6}|1(?:[0-8]\\\\d{5}|9\\\\d{3}(?:\\\\d{2})?))\",[7,9]],[\"21(?:1[013-5]|2\\\\d)\\\\d{5}|(?:45|5[0137]|6[069]|7[2389]|88)\\\\d{7}\",[9]],[\"800\\\\d{6,7}\",[9,10]],[\"70[01346-8]\\\\d{6}\",[9]],0,0,[\"804\\\\d{6}\",[9]],[\"64\\\\d{4,7}\",[6,7,8,9]],[\"39\\\\d{7}\",[9]],[\"801\\\\d{6}\",[9]]]],\"PM\":[\"508\",\"00\",\"[45]\\\\d{5}|(?:708|80\\\\d)\\\\d{6}\",[6,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[45]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:4[1-35-7]|5[01])\\\\d{4}\",[6]],[\"(?:4[02-4]|5[056]|708[45][0-5])\\\\d{4}\"],[\"80[0-5]\\\\d{6}\",[9]]]],\"PR\":[\"1\",\"011\",\"(?:[589]\\\\d\\\\d|787)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"787|939\",[[\"(?:787|939)[2-9]\\\\d{6}\"],[\"\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"PS\":[\"970\",\"00\",\"[2489]2\\\\d{6}|(?:1\\\\d|5)\\\\d{8}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2489]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\",0,0,0,0,0,[[\"(?:22[2-47-9]|42[45]|82[014-68]|92[3569])\\\\d{5}\",[8]],[\"5[69]\\\\d{7}\",[9]],[\"1800\\\\d{6}\",[10]],0,0,0,0,0,0,[\"1700\\\\d{6}\",[10]]]],\"PT\":[\"351\",\"00\",\"1693\\\\d{5}|(?:[26-9]\\\\d|30)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2[12]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"16|[236-9]\"]]],0,0,0,0,0,0,[[\"2(?:[12]\\\\d|3[1-689]|4[1-59]|[57][1-9]|6[1-35689]|8[1-69]|9[1256])\\\\d{6}\"],[\"6(?:[06]92(?:30|9\\\\d)|[35]92(?:[049]\\\\d|3[034]))\\\\d{3}|(?:(?:16|6[0356])93|9(?:[1-36]\\\\d\\\\d|480))\\\\d{5}\"],[\"80[02]\\\\d{6}\"],[\"(?:6(?:0[178]|4[68])\\\\d|76(?:0[1-57]|1[2-47]|2[237]))\\\\d{5}\"],[\"884[0-4689]\\\\d{5}\"],0,[\"70(?:38[01]|596|(?:7\\\\d|8[17])\\\\d)\\\\d{4}\"],[\"6(?:222\\\\d|8988)\\\\d{4}\"],[\"30\\\\d{7}\"],[\"80(?:8\\\\d|9[1579])\\\\d{5}\"]]],\"PW\":[\"680\",\"01[12]\",\"(?:[24-8]\\\\d\\\\d|345|900)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]],0,0,0,0,0,0,[[\"(?:2(?:55|77)|345|488|5(?:35|44|87)|6(?:22|54|79)|7(?:33|47)|8(?:24|55|76)|900)\\\\d{4}\"],[\"(?:(?:46|83)[0-5]|6[2-4689]0)\\\\d{4}|(?:45|77|88)\\\\d{5}\"]]],\"PY\":[\"595\",\"00\",\"59\\\\d{4,6}|9\\\\d{5,10}|(?:[2-46-8]\\\\d|5[0-8])\\\\d{4,7}\",[6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"[2-9]0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{4,5})\",\"$1 $2\",[\"2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"87\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"9(?:[5-79]|8[1-7])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"]]],\"0\",0,0,0,0,0,[[\"(?:[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36])\\\\d{5,7}|(?:2(?:2[4-68]|[4-68]\\\\d|7[15]|9[1-5])|3(?:18|3[167]|4[2357]|51|[67]\\\\d)|4(?:3[12]|5[13]|9[1-47])|5(?:[1-4]\\\\d|5[02-4])|6(?:3[1-3]|44|7[1-8])|7(?:4[0-4]|5\\\\d|6[1-578]|75|8[0-8])|858)\\\\d{5,6}\",[7,8,9]],[\"9(?:51|6[129]|7[1-6]|8[1-7]|9[1-5])\\\\d{6}\",[9]],[\"9800\\\\d{5,7}\",[9,10,11]],0,0,0,[\"[2-9]0\\\\d{4,7}\",[6,7,8,9]],0,[\"8700[0-4]\\\\d{4}\",[9]]]],\"QA\":[\"974\",\"00\",\"800\\\\d{4}|(?:2|800)\\\\d{6}|(?:0080|[3-7])\\\\d{7}\",[7,8,9,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"2[16]|8\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[3-7]\"]]],0,0,0,0,0,0,[[\"4(?:1111|2022)\\\\d{3}|4(?:[04]\\\\d\\\\d|14[0-6]|999)\\\\d{4}\",[8]],[\"[35-7]\\\\d{7}\",[8]],[\"800\\\\d{4}|(?:0080[01]|800)\\\\d{6}\",[7,9,11]],0,0,0,0,[\"2[16]\\\\d{5}\",[7]]]],\"RE\":[\"262\",\"00\",\"(?:26|[689]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2689]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"26(?:2\\\\d\\\\d|3(?:0\\\\d|1[0-6]))\\\\d{4}\"],[\"69(?:2\\\\d\\\\d|3(?:[06][0-6]|1[013]|2[0-2]|3[0-39]|4\\\\d|5[0-5]|7[0-37]|8[0-8]|9[0-479]))\\\\d{4}\"],[\"80\\\\d{7}\"],[\"89[1-37-9]\\\\d{6}\"],0,0,0,0,[\"9(?:399[0-3]|479[0-5]|76(?:2[278]|3[0-37]))\\\\d{4}\"],[\"8(?:1[019]|2[0156]|84|90)\\\\d{6}\"]]],\"RO\":[\"40\",\"00\",\"(?:[236-8]\\\\d|90)\\\\d{7}|[23]\\\\d{5}\",[6,9],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"2[3-6]\",\"2[3-6]\\\\d9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"219|31\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[23]1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[236-9]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"[23][13-6]\\\\d{7}|(?:2(?:19\\\\d|[3-6]\\\\d9)|31\\\\d\\\\d)\\\\d\\\\d\"],[\"(?:630|702)0\\\\d{5}|(?:6(?:[04]0|2\\\\d)|7(?:0[013-9]|1[0-3]|[2-7]\\\\d|8[03-8]|9[0-39]))\\\\d{6}\",[9]],[\"800\\\\d{6}\",[9]],[\"90[0136]\\\\d{6}\",[9]],0,0,[\"(?:37\\\\d|80[578])\\\\d{6}\",[9]],0,0,[\"801\\\\d{6}\",[9]]],0,\" int \"],\"RS\":[\"381\",\"00\",\"38[02-9]\\\\d{6,9}|6\\\\d{7,9}|90\\\\d{4,8}|38\\\\d{5,6}|(?:7\\\\d\\\\d|800)\\\\d{3,9}|(?:[12]\\\\d|3[0-79])\\\\d{5,10}\",[6,7,8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3,9})\",\"$1 $2\",[\"(?:2[389]|39)0|[7-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5,10})\",\"$1 $2\",[\"[1-36]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:11[1-9]\\\\d|(?:2[389]|39)(?:0[2-9]|[2-9]\\\\d))\\\\d{3,8}|(?:1[02-9]|2[0-24-7]|3[0-8])[2-9]\\\\d{4,9}\",[7,8,9,10,11,12]],[\"6(?:[0-689]|7\\\\d)\\\\d{6,7}\",[8,9,10]],[\"800\\\\d{3,9}\"],[\"(?:78\\\\d|90[0169])\\\\d{3,7}\",[6,7,8,9,10]],0,0,[\"7[06]\\\\d{4,10}\"]]],\"RU\":[\"7\",\"810\",\"8\\\\d{13}|[347-9]\\\\d{9}\",[10,14],[[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"7(?:1[0-8]|2[1-9])\",\"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))\",\"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2\"],\"8 ($1)\",1],[\"(\\\\d{5})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"7(?:1[0-68]|2[1-9])\",\"7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))\",\"7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]\"],\"8 ($1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"8 ($1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[349]|8(?:[02-7]|1[1-8])\"],\"8 ($1)\",1],[\"(\\\\d{4})(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"8\"],\"8 ($1)\"]],\"8\",0,0,0,0,\"3[04-689]|[489]\",[[\"(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15]|6[1-35-79]|7[1-37-9]))\\\\d{7}\",[10]],[\"9\\\\d{9}\",[10]],[\"8(?:0[04]|108\\\\d{3})\\\\d{7}\"],[\"80[39]\\\\d{7}\",[10]],[\"808\\\\d{7}\",[10]]],\"8~10\"],\"RW\":[\"250\",\"00\",\"(?:06|[27]\\\\d\\\\d|[89]00)\\\\d{6}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:06|2[23568]\\\\d)\\\\d{6}\"],[\"7[237-9]\\\\d{7}\",[9]],[\"800\\\\d{6}\",[9]],[\"900\\\\d{6}\",[9]]]],\"SA\":[\"966\",\"00\",\"92\\\\d{7}|(?:[15]|8\\\\d)\\\\d{8}\",[9,10],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"9\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"81\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],\"0\",0,0,0,0,0,[[\"1(?:1\\\\d|2[24-8]|3[35-8]|4[3-68]|6[2-5]|7[235-7])\\\\d{6}\",[9]],[\"579[01]\\\\d{5}|5(?:[013-689]\\\\d|7[0-8])\\\\d{6}\",[9]],[\"800\\\\d{7}\",[10]],[\"925\\\\d{6}\",[9]],0,0,[\"811\\\\d{7}\",[10]],0,0,[\"920\\\\d{6}\",[9]]]],\"SB\":[\"677\",\"0[01]\",\"[6-9]\\\\d{6}|[1-6]\\\\d{4}\",[5,7],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"6[89]|7|8[4-9]|9(?:[1-8]|9[0-8])\"]]],0,0,0,0,0,0,[[\"(?:1[4-79]|[23]\\\\d|4[0-2]|5[03]|6[0-37])\\\\d{3}\",[5]],[\"48\\\\d{3}|(?:(?:6[89]|7[1-9]|8[4-9])\\\\d|9(?:1[2-9]|2[013-9]|3[0-2]|[46]\\\\d|5[0-46-9]|7[0-689]|8[0-79]|9[0-8]))\\\\d{4}\"],[\"1[38]\\\\d{3}\",[5]],0,0,0,0,0,[\"5[12]\\\\d{3}\",[5]]]],\"SC\":[\"248\",\"010|0[0-2]\",\"800\\\\d{4}|(?:[249]\\\\d|64)\\\\d{5}\",[7],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[246]|9[57]\"]]],0,0,0,0,0,0,[[\"4[2-46]\\\\d{5}\"],[\"2[125-8]\\\\d{5}\"],[\"800[08]\\\\d{3}\"],0,0,0,0,0,[\"971\\\\d{4}|(?:64|95)\\\\d{5}\"]],\"00\"],\"SD\":[\"249\",\"00\",\"[19]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[19]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"1(?:5\\\\d|8[35-7])\\\\d{6}\"],[\"(?:1[0-2]|9[0-3569])\\\\d{7}\"]]],\"SE\":[\"46\",\"00\",\"(?:[26]\\\\d\\\\d|9)\\\\d{9}|[1-9]\\\\d{8}|[1-689]\\\\d{7}|[1-4689]\\\\d{6}|2\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"20\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"9(?:00|39|44|9)\"],\"0$1\",0,\"$1 $2\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3\",[\"[12][136]|3[356]|4[0246]|6[03]|90[1-9]\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{3})\",\"$1-$2 $3\",[\"9(?:00|39|44)\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"10|7\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1-$2 $3 $4\",[\"9\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4 $5\",[\"[26]\"],\"0$1\",0,\"$1 $2 $3 $4 $5\"]],\"0\",0,0,0,0,0,[[\"(?:(?:[12][136]|3[356]|4[0246]|6[03]|8\\\\d)\\\\d|90[1-9])\\\\d{4,6}|(?:1(?:2[0-35]|4[0-4]|5[0-25-9]|7[13-6]|[89]\\\\d)|2(?:2[0-7]|4[0136-8]|5[0138]|7[018]|8[01]|9[0-57])|3(?:0[0-4]|1\\\\d|2[0-25]|4[056]|7[0-2]|8[0-3]|9[023])|4(?:1[013-8]|3[0135]|5[14-79]|7[0-246-9]|8[0156]|9[0-689])|5(?:0[0-6]|[15][0-5]|2[0-68]|3[0-4]|4\\\\d|6[03-5]|7[013]|8[0-79]|9[01])|6(?:1[1-3]|2[0-4]|4[02-57]|5[0-37]|6[0-3]|7[0-2]|8[0247]|9[0-356])|9(?:1[0-68]|2\\\\d|3[02-5]|4[0-3]|5[0-4]|[68][01]|7[0135-8]))\\\\d{5,6}\",[7,8,9]],[\"7[02369]\\\\d{7}\",[9]],[\"20\\\\d{4,7}\",[6,7,8,9]],[\"649\\\\d{6}|99[1-59]\\\\d{4}(?:\\\\d{3})?|9(?:00|39|44)[1-8]\\\\d{3,6}\",[7,8,9,10]],[\"75[1-8]\\\\d{6}\",[9]],0,[\"10[1-8]\\\\d{6}\",[9]],[\"74[02-9]\\\\d{6}\",[9]],0,[\"77[0-7]\\\\d{6}\",[9]]]],\"SG\":[\"65\",\"0[0-3]\\\\d\",\"(?:(?:1\\\\d|8)\\\\d\\\\d|7000)\\\\d{7}|[3689]\\\\d{7}\",[8,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[369]|8(?:0[1-9]|[1-9])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{4})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]],0,0,0,0,0,0,[[\"662[0-24-9]\\\\d{4}|6(?:[0-578]\\\\d|6[013-57-9]|9[0-35-9])\\\\d{5}\",[8]],[\"8(?:09[0-6]|95[0-2])\\\\d{4}|(?:8(?:0[1-8]|[1-8]\\\\d|9[0-4])|9[0-8]\\\\d)\\\\d{5}\",[8]],[\"(?:18|8)00\\\\d{7}\",[10,11]],[\"1900\\\\d{7}\",[11]],0,0,[\"7000\\\\d{7}\",[11]],0,[\"(?:3[12]\\\\d|666)\\\\d{5}\",[8]]]],\"SH\":[\"290\",\"00\",\"(?:[256]\\\\d|8)\\\\d{3}\",[4,5],0,0,0,0,0,0,\"[256]\",[[\"2(?:[0-57-9]\\\\d|6[4-9])\\\\d\\\\d\"],[\"[56]\\\\d{4}\",[5]],0,0,0,0,0,0,[\"262\\\\d\\\\d\",[5]]]],\"SI\":[\"386\",\"00|10(?:22|66|88|99)\",\"[1-7]\\\\d{7}|8\\\\d{4,7}|90\\\\d{4,6}\",[5,6,7,8],[[\"(\\\\d{2})(\\\\d{3,6})\",\"$1 $2\",[\"8[09]|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"59|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37][01]|4[0139]|51|6\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-57]\"],\"(0$1)\"]],\"0\",0,0,0,0,0,[[\"(?:[1-357][2-8]|4[24-8])\\\\d{6}\",[8]],[\"65(?:[178]\\\\d|5[56]|6[01])\\\\d{4}|(?:[37][01]|4[0139]|51|6[489])\\\\d{6}\",[8]],[\"80\\\\d{4,6}\",[6,7,8]],[\"89[1-3]\\\\d{2,5}|90\\\\d{4,6}\"],0,0,0,0,[\"(?:59\\\\d\\\\d|8(?:1(?:[67]\\\\d|8[0-589])|2(?:0\\\\d|2[0-37-9]|8[0-2489])|3[389]\\\\d))\\\\d{4}\",[8]]],\"00\"],\"SJ\":[\"47\",\"00\",\"0\\\\d{4}|(?:[489]\\\\d|79)\\\\d{6}\",[5,8],0,0,0,0,0,0,\"79\",[[\"79\\\\d{6}\",[8]],[\"(?:4[015-8]|9\\\\d)\\\\d{6}\",[8]],[\"80[01]\\\\d{5}\",[8]],[\"82[09]\\\\d{5}\",[8]],[\"880\\\\d{5}\",[8]],0,[\"(?:0[2-9]|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d\\\\d))\\\\d{3}\"],0,[\"85[0-5]\\\\d{5}\",[8]],[\"810(?:0[0-6]|[2-8]\\\\d)\\\\d{3}\",[8]]]],\"SK\":[\"421\",\"00\",\"[2-689]\\\\d{8}|[2-59]\\\\d{6}|[2-5]\\\\d{5}\",[6,7,9],[[\"(\\\\d)(\\\\d{2})(\\\\d{3,4})\",\"$1 $2 $3\",[\"21\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-5][1-8]1\",\"[3-5][1-8]1[67]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[689]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"[3-5]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:2(?:16|[2-9]\\\\d{3})|(?:(?:[3-5][1-8]\\\\d|819)\\\\d|601[1-5])\\\\d)\\\\d{4}|(?:2|[3-5][1-8])1[67]\\\\d{3}|[3-5][1-8]16\\\\d\\\\d\"],[\"909[1-9]\\\\d{5}|9(?:0[1-8]|1[0-24-9]|4[03-57-9]|5\\\\d)\\\\d{6}\",[9]],[\"800\\\\d{6}\",[9]],[\"9(?:00|[78]\\\\d)\\\\d{6}\",[9]],0,0,[\"96\\\\d{7}\",[9]],[\"9090\\\\d{3}\",[7]],[\"6(?:02|5[0-4]|9[0-6])\\\\d{6}\",[9]],[\"8[5-9]\\\\d{7}\",[9]]]],\"SL\":[\"232\",\"00\",\"(?:[237-9]\\\\d|66)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[236-9]\"],\"(0$1)\"]],\"0\",0,0,0,0,0,[[\"22[2-4][2-9]\\\\d{4}\"],[\"(?:25|3[0-5]|66|7[2-9]|8[08]|9[09])\\\\d{6}\"]]],\"SM\":[\"378\",\"00\",\"(?:0549|[5-7]\\\\d)\\\\d{6}\",[8,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-7]\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"0\"]]],0,0,\"([89]\\\\d{5})$\",\"0549$1\",0,0,[[\"0549(?:8[0157-9]|9\\\\d)\\\\d{4}\",[10]],[\"6[16]\\\\d{6}\",[8]],0,[\"7[178]\\\\d{6}\",[8]],0,0,0,0,[\"5[158]\\\\d{6}\",[8]]]],\"SN\":[\"221\",\"00\",\"(?:[378]\\\\d|93)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[379]\"]]],0,0,0,0,0,0,[[\"3(?:0(?:1[0-2]|80)|282|3(?:8[1-9]|9[3-9])|611)\\\\d{5}\"],[\"7(?:(?:[06-8]\\\\d|21|90)\\\\d|5(?:01|[19]0|25|[38]3|[4-7]\\\\d))\\\\d{5}\"],[\"800\\\\d{6}\"],[\"88[4689]\\\\d{6}\"],0,0,0,0,[\"(?:3(?:392|9[01]\\\\d)\\\\d|93(?:3[13]0|929))\\\\d{4}\"],[\"81[02468]\\\\d{6}\"]]],\"SO\":[\"252\",\"00\",\"[346-9]\\\\d{8}|[12679]\\\\d{7}|[1-5]\\\\d{6}|[1348]\\\\d{5}\",[6,7,8,9],[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"8[125]\"]],[\"(\\\\d{6})\",\"$1\",[\"[134]\"]],[\"(\\\\d)(\\\\d{6})\",\"$1 $2\",[\"[15]|2[0-79]|3[0-46-8]|4[0-7]\"]],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"(?:2|90)4|[67]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[348]|64|79|90\"]],[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"1|28|6[0-35-9]|77|9[2-9]\"]]],\"0\",0,0,0,0,0,[[\"(?:1\\\\d|2[0-79]|3[0-46-8]|4[0-7]|5[57-9])\\\\d{5}|(?:[134]\\\\d|8[125])\\\\d{4}\",[6,7]],[\"(?:(?:15|(?:3[59]|4[89]|6\\\\d|7[79]|8[08])\\\\d|9(?:0\\\\d|[2-9]))\\\\d|2(?:4\\\\d|8))\\\\d{5}|(?:[67]\\\\d\\\\d|904)\\\\d{5}\",[7,8,9]]]],\"SR\":[\"597\",\"00\",\"(?:[2-5]|68|[78]\\\\d)\\\\d{5}\",[6,7],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"56\"]],[\"(\\\\d{3})(\\\\d{3})\",\"$1-$2\",[\"[2-5]\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[6-8]\"]]],0,0,0,0,0,0,[[\"(?:2[1-3]|3[0-7]|(?:4|68)\\\\d|5[2-58])\\\\d{4}\"],[\"(?:7[124-7]|8[124-9])\\\\d{5}\",[7]],0,0,0,0,0,0,[\"56\\\\d{4}\",[6]]]],\"SS\":[\"211\",\"00\",\"[19]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[19]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"1[89]\\\\d{7}\"],[\"(?:12|9[1257-9])\\\\d{7}\"]]],\"ST\":[\"239\",\"00\",\"(?:22|9\\\\d)\\\\d{5}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[29]\"]]],0,0,0,0,0,0,[[\"22\\\\d{5}\"],[\"900[5-9]\\\\d{3}|9(?:0[1-9]|[89]\\\\d)\\\\d{4}\"]]],\"SV\":[\"503\",\"00\",\"[267]\\\\d{7}|(?:80\\\\d|900)\\\\d{4}(?:\\\\d{4})?\",[7,8,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[89]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[267]\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]],0,0,0,0,0,0,[[\"2(?:79(?:0[0347-9]|[1-9]\\\\d)|89(?:0[024589]|[1-9]\\\\d))\\\\d{3}|2(?:[1-69]\\\\d|[78][0-8])\\\\d{5}\",[8]],[\"[67]\\\\d{7}\",[8]],[\"800\\\\d{8}|80[01]\\\\d{4}\",[7,11]],[\"900\\\\d{4}(?:\\\\d{4})?\",[7,11]]]],\"SX\":[\"1\",\"011\",\"7215\\\\d{6}|(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"(5\\\\d{6})$|1\",\"721$1\",0,\"721\",[[\"7215(?:4[2-8]|8[239]|9[056])\\\\d{4}\"],[\"7215(?:1[02]|2\\\\d|5[034679]|8[014-8])\\\\d{4}\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"SY\":[\"963\",\"00\",\"[1-39]\\\\d{8}|[1-5]\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-5]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\",1]],\"0\",0,0,0,0,0,[[\"21\\\\d{6,7}|(?:1(?:[14]\\\\d|[2356])|2[235]|3(?:[13]\\\\d|4)|4[134]|5[1-3])\\\\d{6}\"],[\"9[1-689]\\\\d{7}\",[9]]]],\"SZ\":[\"268\",\"00\",\"0800\\\\d{4}|(?:[237]\\\\d|900)\\\\d{6}\",[8,9],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[0237]\"]],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"9\"]]],0,0,0,0,0,0,[[\"[23][2-5]\\\\d{6}\",[8]],[\"7[6-9]\\\\d{6}\",[8]],[\"0800\\\\d{4}\",[8]],[\"900\\\\d{6}\",[9]],0,0,0,0,[\"70\\\\d{6}\",[8]]]],\"TA\":[\"290\",\"00\",\"8\\\\d{3}\",[4],0,0,0,0,0,0,\"8\",[[\"8\\\\d{3}\"]]],\"TC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|649|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-479]\\\\d{6})$|1\",\"649$1\",0,\"649\",[[\"649(?:266|712|9(?:4\\\\d|50))\\\\d{4}\"],[\"649(?:2(?:3[129]|4[1-79])|3\\\\d\\\\d|4[34][1-3])\\\\d{4}\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"],0,0,0,[\"649(?:71[01]|966)\\\\d{4}\"]]],\"TD\":[\"235\",\"00|16\",\"(?:22|[69]\\\\d|77)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2679]\"]]],0,0,0,0,0,0,[[\"22(?:[37-9]0|5[0-5]|6[89])\\\\d{4}\"],[\"(?:6[0-689]|77|9\\\\d)\\\\d{6}\"]],\"00\"],\"TG\":[\"228\",\"00\",\"[279]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[279]\"]]],0,0,0,0,0,0,[[\"2(?:2[2-7]|3[23]|4[45]|55|6[67]|77)\\\\d{5}\"],[\"(?:7[019]|9[0-36-9])\\\\d{6}\"]]],\"TH\":[\"66\",\"00[1-9]\",\"(?:001800|[2-57]|[689]\\\\d)\\\\d{7}|1\\\\d{7,9}\",[8,9,10,13],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[13-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\",0,0,0,0,0,[[\"(?:1[0689]|2\\\\d|3[2-9]|4[2-5]|5[2-6]|7[3-7])\\\\d{6}\",[8]],[\"67(?:1[0-8]|2[4-7])\\\\d{5}|(?:14|6[1-6]|[89]\\\\d)\\\\d{7}\",[9]],[\"(?:001800\\\\d|1800)\\\\d{6}\",[10,13]],[\"1900\\\\d{6}\",[10]],0,0,0,0,[\"6[08]\\\\d{7}\",[9]]]],\"TJ\":[\"992\",\"810\",\"[0-57-9]\\\\d{8}\",[9],[[\"(\\\\d{6})(\\\\d)(\\\\d{2})\",\"$1 $2 $3\",[\"331\",\"3317\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"44[02-479]|[34]7\"]],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"3[1-5]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[0-57-9]\"]]],0,0,0,0,0,0,[[\"(?:3(?:1[3-5]|2[245]|3[12]|4[24-7]|5[25]|72)|4(?:46|74|87))\\\\d{6}\"],[\"(?:4(?:1[18]|4[02-479])|81[1-9])\\\\d{6}|(?:0[0-57-9]|1[017]|2[02]|[34]0|5[05]|7[01578]|8[078]|9\\\\d)\\\\d{7}\"]],\"8~10\"],\"TK\":[\"690\",\"00\",\"[2-47]\\\\d{3,6}\",[4,5,6,7],0,0,0,0,0,0,0,[[\"(?:2[2-4]|[34]\\\\d)\\\\d{2,5}\"],[\"7[2-4]\\\\d{2,5}\"]]],\"TL\":[\"670\",\"00\",\"7\\\\d{7}|(?:[2-47]\\\\d|[89]0)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-489]|70\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"7\"]]],0,0,0,0,0,0,[[\"(?:2[1-5]|3[1-9]|4[1-4])\\\\d{5}\",[7]],[\"7[2-8]\\\\d{6}\",[8]],[\"80\\\\d{5}\",[7]],[\"90\\\\d{5}\",[7]],[\"70\\\\d{5}\",[7]]]],\"TM\":[\"993\",\"810\",\"(?:[1-6]\\\\d|71)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"12\"],\"(8 $1)\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[1-5]\"],\"(8 $1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[67]\"],\"8 $1\"]],\"8\",0,0,0,0,0,[[\"(?:1(?:2\\\\d|3[1-9])|2(?:22|4[0-35-8])|3(?:22|4[03-9])|4(?:22|3[128]|4\\\\d|6[15])|5(?:22|5[7-9]|6[014-689]))\\\\d{5}\"],[\"(?:6\\\\d|71)\\\\d{6}\"]],\"8~10\"],\"TN\":[\"216\",\"00\",\"[2-57-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-57-9]\"]]],0,0,0,0,0,0,[[\"81200\\\\d{3}|(?:3[0-2]|7\\\\d)\\\\d{6}\"],[\"3(?:001|[12]40)\\\\d{4}|(?:(?:[259]\\\\d|4[0-8])\\\\d|3(?:1[1-35]|6[0-4]|91))\\\\d{5}\"],[\"8010\\\\d{4}\"],[\"88\\\\d{6}\"],0,0,0,0,0,[\"8[12]10\\\\d{4}\"]]],\"TO\":[\"676\",\"00\",\"(?:0800|(?:[5-8]\\\\d\\\\d|999)\\\\d)\\\\d{3}|[2-8]\\\\d{4}\",[5,7],[[\"(\\\\d{2})(\\\\d{3})\",\"$1-$2\",[\"[2-4]|50|6[09]|7[0-24-69]|8[05]\"]],[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[5-9]\"]]],0,0,0,0,0,0,[[\"(?:2\\\\d|3[0-8]|4[0-4]|50|6[09]|7[0-24-69]|8[05])\\\\d{3}\",[5]],[\"(?:5(?:4[0-5]|5[4-6])|6(?:[09]\\\\d|3[02]|8[15-9])|(?:7\\\\d|8[46-9])\\\\d|999)\\\\d{4}\",[7]],[\"0800\\\\d{3}\",[7]],0,0,0,0,0,[\"55[0-37-9]\\\\d{4}\",[7]]]],\"TR\":[\"90\",\"00\",\"4\\\\d{6}|8\\\\d{11,12}|(?:[2-58]\\\\d\\\\d|900)\\\\d{7}\",[7,10,12,13],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"512|8[01589]|90\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5(?:[0-59]|61)\",\"5(?:[0-59]|61[06])\",\"5(?:[0-59]|61[06]1)\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24][1-8]|3[1-9]\"],\"(0$1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{6,7})\",\"$1 $2 $3\",[\"80\"],\"0$1\",1]],\"0\",0,0,0,0,0,[[\"(?:2(?:[13][26]|[28][2468]|[45][268]|[67][246])|3(?:[13][28]|[24-6][2468]|[78][02468]|92)|4(?:[16][246]|[23578][2468]|4[26]))\\\\d{7}\",[10]],[\"561(?:011|61\\\\d)\\\\d{4}|5(?:0[15-7]|1[06]|24|[34]\\\\d|5[1-59]|9[46])\\\\d{7}\",[10]],[\"8(?:00\\\\d{7}(?:\\\\d{2,3})?|11\\\\d{7})\",[10,12,13]],[\"(?:8[89]8|900)\\\\d{7}\",[10]],[\"592(?:21[12]|461)\\\\d{4}\",[10]],0,[\"444\\\\d{4}\",[7]],[\"512\\\\d{7}\",[10]],[\"850\\\\d{7}\",[10]]]],\"TT\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-46-8]\\\\d{6})$|1\",\"868$1\",0,\"868\",[[\"868(?:2(?:01|1[5-9]|[23]\\\\d|4[0-2])|6(?:0[7-9]|1[02-8]|2[1-9]|[3-69]\\\\d|7[0-79])|82[124])\\\\d{4}\"],[\"868(?:(?:2[5-9]|3\\\\d)\\\\d|4(?:3[0-6]|[6-9]\\\\d)|6(?:20|78|8\\\\d)|7(?:0[1-9]|1[02-9]|[2-9]\\\\d))\\\\d{4}\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"TV\":[\"688\",\"00\",\"(?:2|7\\\\d\\\\d|90)\\\\d{4}\",[5,6,7],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2\"]],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"90\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7\"]]],0,0,0,0,0,0,[[\"2[02-9]\\\\d{3}\",[5]],[\"(?:7[01]\\\\d|90)\\\\d{4}\",[6,7]]]],\"TW\":[\"886\",\"0(?:0[25-79]|19)\",\"[2-689]\\\\d{8}|7\\\\d{9,10}|[2-8]\\\\d{7}|2\\\\d{6}\",[7,8,9,10,11],[[\"(\\\\d{2})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"202\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[258]0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]\",\"[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[49]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:2[2-8]\\\\d|370|55[01]|7[1-9])\\\\d{6}|4(?:(?:0(?:0[1-9]|[2-48]\\\\d)|1[023]\\\\d)\\\\d{4,5}|(?:[239]\\\\d\\\\d|4(?:0[56]|12|49))\\\\d{5})|6(?:[01]\\\\d{7}|4(?:0[56]|12|24|4[09])\\\\d{4,5})|8(?:(?:2(?:3\\\\d|4[0-269]|[578]0|66)|36[24-9]|90\\\\d\\\\d)\\\\d{4}|4(?:0[56]|12|24|4[09])\\\\d{4,5})|(?:2(?:2(?:0\\\\d\\\\d|4(?:0[68]|[249]0|3[0-467]|5[0-25-9]|6[0235689]))|(?:3(?:[09]\\\\d|1[0-4])|(?:4\\\\d|5[0-49]|6[0-29]|7[0-5])\\\\d)\\\\d)|(?:(?:3[2-9]|5[2-8]|6[0-35-79]|8[7-9])\\\\d\\\\d|4(?:2(?:[089]\\\\d|7[1-9])|(?:3[0-4]|[78]\\\\d|9[01])\\\\d))\\\\d)\\\\d{3}\",[8,9]],[\"(?:40001[0-2]|9[0-8]\\\\d{4})\\\\d{3}\",[9]],[\"80[0-79]\\\\d{6}|800\\\\d{5}\",[8,9]],[\"20(?:[013-9]\\\\d\\\\d|2)\\\\d{4}\",[7,9]],[\"99\\\\d{7}\",[9]],0,[\"50[0-46-9]\\\\d{6}\",[9]],0,[\"7010(?:[0-2679]\\\\d|3[0-7]|8[0-5])\\\\d{5}|70\\\\d{8}\",[10,11]]],0,\"#\"],\"TZ\":[\"255\",\"00[056]\",\"(?:[25-8]\\\\d|41|90)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[24]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[67]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"2[2-8]\\\\d{7}\"],[\"(?:6[125-9]|7[13-9])\\\\d{7}\"],[\"80[08]\\\\d{6}\"],[\"90\\\\d{7}\"],0,0,0,0,[\"41\\\\d{7}\"],[\"8(?:40|6[01])\\\\d{6}\"]]],\"UA\":[\"380\",\"00\",\"[89]\\\\d{9}|[3-9]\\\\d{8}\",[9,10],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]\",\"6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])\",\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-7]|89|9[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:3[1-8]|4[13-8]|5[1-7]|6[12459])\\\\d{7}\",[9]],[\"(?:39|50|6[36-8]|7[1-357]|9[1-9])\\\\d{7}\",[9]],[\"800[1-8]\\\\d{5,6}\"],[\"900[239]\\\\d{5,6}\"],0,0,0,0,[\"89[1-579]\\\\d{6}\",[9]]],\"0~0\"],\"UG\":[\"256\",\"00[057]\",\"800\\\\d{6}|(?:[29]0|[347]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"202\",\"2024\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[27-9]|4(?:6[45]|[7-9])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"[34]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"20(?:(?:240|30[67])\\\\d|6(?:00[0-2]|30[0-4]))\\\\d{3}|(?:20(?:[017]\\\\d|2[5-9]|3[1-4]|5[0-4]|6[15-9])|[34]\\\\d{3})\\\\d{5}\"],[\"72(?:[48]0|6[01])\\\\d{5}|7(?:[015-8]\\\\d|20|36|4[0-5]|9[89])\\\\d{6}\"],[\"800[1-3]\\\\d{5}\"],[\"90[1-3]\\\\d{6}\"]]],\"US\":[\"1\",\"011\",\"[2-9]\\\\d{9}|3\\\\d{6}\",[10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"310\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",[\"[2-9]\"],0,1,\"$1-$2-$3\"]],\"1\",0,0,0,0,0,[[\"(?:5056(?:[0-35-9]\\\\d|4[468])|7302[0-4]\\\\d)\\\\d{4}|(?:472[24]|505[2-57-9]|7306|983[2-47-9])\\\\d{6}|(?:2(?:0[1-35-9]|1[02-9]|2[03-57-9]|3[1459]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[013569]|3[0-24679]|4[167]|5[0-2]|6[01349]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[179]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[0156]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-8]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\"],[\"\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"UY\":[\"598\",\"0(?:0|1[3-9]\\\\d)\",\"0004\\\\d{2,9}|[1249]\\\\d{7}|(?:[49]\\\\d|80)\\\\d{5}\",[6,7,8,9,10,11,12,13],[[\"(\\\\d{3})(\\\\d{3,4})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[49]0|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[124]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3 $4\",[\"0\"]]],\"0\",0,0,0,0,0,[[\"(?:1(?:770|9(?:20|87))|(?:2\\\\d|4[2-7])\\\\d\\\\d)\\\\d{4}\",[8]],[\"9[1-9]\\\\d{6}\",[8]],[\"0004\\\\d{2,9}|(?:405|80[05])\\\\d{4}\"],[\"90[0-8]\\\\d{4}\",[7]]],\"00\",\" int. \"],\"UZ\":[\"998\",\"00\",\"(?:20|33|[5-79]\\\\d|88)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[235-9]\"]]],0,0,0,0,0,0,[[\"(?:55\\\\d\\\\d|6(?:1(?:22|3[124]|4[1-4]|5[1-3578]|64)|2(?:22|3[0-57-9]|41)|5(?:22|3[3-7]|5[024-8])|6\\\\d\\\\d|7(?:[23]\\\\d|7[69])|9(?:22|4[1-8]|6[135]))|7(?:0(?:5[4-9]|6[0146]|7[124-6]|9[135-8])|(?:1[12]|[68]\\\\d)\\\\d|2(?:22|3[13-57-9]|4[1-3579]|5[14])|3(?:2\\\\d|3[1578]|4[1-35-7]|5[1-57]|61)|4(?:2\\\\d|3[1-579]|7[1-79])|5(?:22|5[1-9]|6[1457])|9(?:22|5[1-9])))\\\\d{5}\"],[\"(?:(?:[25]0|33|88|9[0-57-9])\\\\d{3}|6(?:1(?:2(?:2[01]|98)|35[0-4]|50\\\\d|61[23]|7(?:[01][017]|4\\\\d|55|9[5-9]))|2(?:(?:11|7\\\\d)\\\\d|2(?:[12]1|9[01379])|5(?:[126]\\\\d|3[0-4]))|5(?:19[01]|2(?:27|9[26])|(?:30|59|7\\\\d)\\\\d)|6(?:2(?:1[5-9]|2[0367]|38|41|52|60)|(?:3[79]|9[0-3])\\\\d|4(?:56|83)|7(?:[07]\\\\d|1[017]|3[07]|4[047]|5[057]|67|8[0178]|9[79]))|7(?:2(?:24|3[237]|4[5-9]|7[15-8])|5(?:7[12]|8[0589])|7(?:0\\\\d|[39][07])|9(?:0\\\\d|7[079]))|9(?:2(?:1[1267]|3[01]|5\\\\d|7[0-4])|(?:5[67]|7\\\\d)\\\\d|6(?:2[0-26]|8\\\\d)))|7(?:[07]\\\\d{3}|1(?:13[01]|6(?:0[47]|1[67]|66)|71[3-69]|98\\\\d)|2(?:2(?:2[79]|95)|3(?:2[5-9]|6[0-6])|57\\\\d|7(?:0\\\\d|1[17]|2[27]|3[37]|44|5[057]|66|88))|3(?:2(?:1[0-6]|21|3[469]|7[159])|(?:33|9[4-6])\\\\d|5(?:0[0-4]|5[579]|9\\\\d)|7(?:[0-3579]\\\\d|4[0467]|6[67]|8[078]))|4(?:2(?:29|5[0257]|6[0-7]|7[1-57])|5(?:1[0-4]|8\\\\d|9[5-9])|7(?:0\\\\d|1[024589]|2[0-27]|3[0137]|[46][07]|5[01]|7[5-9]|9[079])|9(?:7[015-9]|[89]\\\\d))|5(?:112|2(?:0\\\\d|2[29]|[49]4)|3[1568]\\\\d|52[6-9]|7(?:0[01578]|1[017]|[23]7|4[047]|[5-7]\\\\d|8[78]|9[079]))|9(?:22[128]|3(?:2[0-4]|7\\\\d)|57[02569]|7(?:2[05-9]|3[37]|4\\\\d|60|7[2579]|87|9[07]))))\\\\d{4}\"]]],\"VA\":[\"39\",\"00\",\"0\\\\d{5,10}|3[0-8]\\\\d{7,10}|55\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?|(?:1\\\\d|39)\\\\d{7,8}\",[6,7,8,9,10,11],0,0,0,0,0,0,\"06698\",[[\"06698\\\\d{1,6}\"],[\"3[1-9]\\\\d{8}|3[2-9]\\\\d{7}\",[9,10]],[\"80(?:0\\\\d{3}|3)\\\\d{3}\",[6,9]],[\"(?:0878\\\\d{3}|89(?:2\\\\d|3[04]|4(?:[0-4]|[5-9]\\\\d\\\\d)|5[0-4]))\\\\d\\\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\\\d{6}\",[6,8,9,10]],[\"1(?:78\\\\d|99)\\\\d{6}\",[9,10]],0,0,0,[\"55\\\\d{8}\",[10]],[\"84(?:[08]\\\\d{3}|[17])\\\\d{3}\",[6,9]]]],\"VC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|784|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"784$1\",0,\"784\",[[\"784(?:266|3(?:6[6-9]|7\\\\d|8[0-6])|4(?:38|5[0-36-8]|8[0-8])|5(?:55|7[0-2]|93)|638|784)\\\\d{4}\"],[\"784(?:4(?:3[0-5]|5[45]|89|9[0-8])|5(?:2[6-9]|3[0-4])|720)\\\\d{4}\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"],0,0,0,[\"78451[0-2]\\\\d{4}\"]]],\"VE\":[\"58\",\"00\",\"[68]00\\\\d{7}|(?:[24]\\\\d|[59]0)\\\\d{8}\",[10],[[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\",[\"[24-689]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:2(?:12|3[457-9]|[467]\\\\d|[58][1-9]|9[1-6])|[4-6]00)\\\\d{7}\"],[\"4(?:1[24-8]|2[46])\\\\d{7}\"],[\"800\\\\d{7}\"],[\"90[01]\\\\d{7}\"],0,0,[\"501\\\\d{7}\"]]],\"VG\":[\"1\",\"011\",\"(?:284|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-578]\\\\d{6})$|1\",\"284$1\",0,\"284\",[[\"284(?:229|4(?:22|9[45])|774|8(?:52|6[459]))\\\\d{4}\"],[\"284(?:245|3(?:0[0-3]|4[0-7]|68|9[34])|4(?:4[0-6]|68|9[69])|5(?:4[0-7]|68|9[69]))\\\\d{4}\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"VI\":[\"1\",\"011\",\"[58]\\\\d{9}|(?:34|90)0\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"340$1\",0,\"340\",[[\"340(?:2(?:0\\\\d|2[06-8]|4[49]|77)|3(?:32|44)|4(?:2[23]|44|7[34]|89)|5(?:1[34]|55)|6(?:2[56]|4[23]|77|9[023])|7(?:1[2-57-9]|2[57]|7\\\\d)|884|998)\\\\d{4}\"],[\"\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"VN\":[\"84\",\"00\",\"[12]\\\\d{9}|[135-9]\\\\d{8}|[16]\\\\d{7}|[16-8]\\\\d{6}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"80\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"1\"],0,1],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"6\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[357-9]\"],\"0$1\",1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[48]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\",1]],\"0\",0,0,0,0,0,[[\"2(?:0[3-9]|1[0-689]|2[0-25-9]|[38][2-9]|4[2-8]|5[124-9]|6[0-39]|7[0-7]|9[0-4679])\\\\d{7}\",[10]],[\"(?:5(?:2[238]|59)|89[6-9]|99[013-9])\\\\d{6}|(?:3\\\\d|5[1689]|7[06-9]|8[1-8]|9[0-8])\\\\d{7}\",[9]],[\"1800\\\\d{4,6}|12(?:0[13]|28)\\\\d{4}\",[8,9,10]],[\"1900\\\\d{4,6}\",[8,9,10]],0,0,[\"(?:[17]99|80\\\\d)\\\\d{4}|69\\\\d{5,6}\",[7,8]],0,[\"672\\\\d{6}\",[9]]]],\"VU\":[\"678\",\"00\",\"[57-9]\\\\d{6}|(?:[238]\\\\d|48)\\\\d{3}\",[5,7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[57-9]\"]]],0,0,0,0,0,0,[[\"(?:38[0-8]|48[4-9])\\\\d\\\\d|(?:2[02-9]|3[4-7]|88)\\\\d{3}\",[5]],[\"(?:[58]\\\\d|7[013-7])\\\\d{5}\",[7]],[\"81[18]\\\\d\\\\d\",[5]],0,0,0,[\"(?:3[03]|900\\\\d)\\\\d{3}\"],0,[\"9(?:0[1-9]|1[01])\\\\d{4}\",[7]]]],\"WF\":[\"681\",\"00\",\"(?:40|72)\\\\d{4}|8\\\\d{5}(?:\\\\d{3})?\",[6,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[478]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]],0,0,0,0,0,0,[[\"72\\\\d{4}\",[6]],[\"(?:72|8[23])\\\\d{4}\",[6]],[\"80[0-5]\\\\d{6}\",[9]]]],\"WS\":[\"685\",\"0\",\"(?:[2-6]|8\\\\d{5})\\\\d{4}|[78]\\\\d{6}|[68]\\\\d{5}\",[5,6,7,10],[[\"(\\\\d{5})\",\"$1\",[\"[2-5]|6[1-9]\"]],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"[68]\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7\"]]],0,0,0,0,0,0,[[\"6[1-9]\\\\d{3}|(?:[2-5]|60)\\\\d{4}\",[5,6]],[\"(?:7[1-35-7]|8(?:[3-7]|9\\\\d{3}))\\\\d{5}\",[7,10]],[\"800\\\\d{3}\",[6]]]],\"XK\":[\"383\",\"00\",\"2\\\\d{7,8}|3\\\\d{7,11}|(?:4\\\\d\\\\d|[89]00)\\\\d{5}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-4]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2|39\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7,10})\",\"$1 $2\",[\"3\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"38\\\\d{6,10}|(?:2[89]|39)(?:0\\\\d{5,6}|[1-9]\\\\d{5})\"],[\"4[3-9]\\\\d{6}\",[8]],[\"800\\\\d{5}\",[8]],[\"900\\\\d{5}\",[8]]]],\"YE\":[\"967\",\"00\",\"(?:1|7\\\\d)\\\\d{7}|[1-7]\\\\d{6}\",[7,8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-6]|7(?:[24-6]|8[0-7])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"78[0-7]\\\\d{4}|17\\\\d{6}|(?:[12][2-68]|3[2358]|4[2-58]|5[2-6]|6[3-58]|7[24-6])\\\\d{5}\",[7,8]],[\"7[01378]\\\\d{7}\",[9]]]],\"YT\":[\"262\",\"00\",\"(?:80|9\\\\d)\\\\d{7}|(?:26|63)9\\\\d{6}\",[9],0,\"0\",0,0,0,0,0,[[\"269(?:0[0-467]|15|5[0-4]|6\\\\d|[78]0)\\\\d{4}\"],[\"639(?:0[0-79]|1[019]|[267]\\\\d|3[09]|40|5[05-9]|9[04-79])\\\\d{4}\"],[\"80\\\\d{7}\"],0,0,0,0,0,[\"9(?:(?:39|47)8[01]|769\\\\d)\\\\d{4}\"]]],\"ZA\":[\"27\",\"00\",\"[1-79]\\\\d{8}|8\\\\d{4,9}\",[5,6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"8[1-4]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8[1-4]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"860\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:2(?:0330|4302)|52087)0\\\\d{3}|(?:1[0-8]|2[1-378]|3[1-69]|4\\\\d|5[1346-8])\\\\d{7}\",[9]],[\"(?:1(?:3492[0-25]|4495[0235]|549(?:20|5[01]))|4[34]492[01])\\\\d{3}|8[1-4]\\\\d{3,7}|(?:2[27]|47|54)4950\\\\d{3}|(?:1(?:049[2-4]|9[12]\\\\d\\\\d)|(?:6\\\\d|7[0-46-9])\\\\d{3}|8(?:5\\\\d{3}|7(?:08[67]|158|28[5-9]|310)))\\\\d{4}|(?:1[6-8]|28|3[2-69]|4[025689]|5[36-8])4920\\\\d{3}|(?:12|[2-5]1)492\\\\d{4}\",[5,6,7,8,9]],[\"80\\\\d{7}\",[9]],[\"(?:86[2-9]|9[0-2]\\\\d)\\\\d{6}\",[9]],0,0,[\"861\\\\d{6,7}\",[9,10]],0,[\"87(?:08[0-589]|15[0-79]|28[0-4]|31[1-9])\\\\d{4}|87(?:[02][0-79]|1[0-46-9]|3[02-9]|[4-9]\\\\d)\\\\d{5}\",[9]],[\"860\\\\d{6}\",[9]]]],\"ZM\":[\"260\",\"00\",\"800\\\\d{6}|(?:21|63|[79]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[28]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"[79]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"21[1-8]\\\\d{6}\"],[\"(?:7[5-79]|9[5-8])\\\\d{7}\"],[\"800\\\\d{6}\"],0,0,0,0,0,[\"63\\\\d{7}\"]]],\"ZW\":[\"263\",\"00\",\"2(?:[0-57-9]\\\\d{6,8}|6[0-24-9]\\\\d{6,7})|[38]\\\\d{9}|[35-8]\\\\d{8}|[3-6]\\\\d{7}|[1-689]\\\\d{6}|[1-3569]\\\\d{5}|[1356]\\\\d{4}\",[5,6,7,8,9,10],[[\"(\\\\d{3})(\\\\d{3,5})\",\"$1 $2\",[\"2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"[49]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"80\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2\",\"2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)\",\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"29[013-9]|39|54\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,5})\",\"$1 $2\",[\"(?:25|54)8\",\"258|5483\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:1(?:(?:3\\\\d|9)\\\\d|[4-8])|2(?:(?:(?:0(?:2[014]|5)|(?:2[0157]|31|84|9)\\\\d\\\\d|[56](?:[14]\\\\d\\\\d|20)|7(?:[089]|2[03]|[35]\\\\d\\\\d))\\\\d|4(?:2\\\\d\\\\d|8))\\\\d|1(?:2|[39]\\\\d{4}))|3(?:(?:123|(?:29\\\\d|92)\\\\d)\\\\d\\\\d|7(?:[19]|[56]\\\\d))|5(?:0|1[2-478]|26|[37]2|4(?:2\\\\d{3}|83)|5(?:25\\\\d\\\\d|[78])|[689]\\\\d)|6(?:(?:[16-8]21|28|52[013])\\\\d\\\\d|[39])|8(?:[1349]28|523)\\\\d\\\\d)\\\\d{3}|(?:4\\\\d\\\\d|9[2-9])\\\\d{4,5}|(?:(?:2(?:(?:(?:0|8[146])\\\\d|7[1-7])\\\\d|2(?:[278]\\\\d|92)|58(?:2\\\\d|3))|3(?:[26]|9\\\\d{3})|5(?:4\\\\d|5)\\\\d\\\\d)\\\\d|6(?:(?:(?:[0-246]|[78]\\\\d)\\\\d|37)\\\\d|5[2-8]))\\\\d\\\\d|(?:2(?:[569]\\\\d|8[2-57-9])|3(?:[013-59]\\\\d|8[37])|6[89]8)\\\\d{3}\"],[\"7(?:[1278]\\\\d|3[1-9])\\\\d{6}\",[9]],[\"80(?:[01]\\\\d|20|8[0-8])\\\\d{3}\",[7]],0,0,0,0,0,[\"86(?:1[12]|22|30|44|55|77|8[368])\\\\d{6}\",[10]]]]},\"nonGeographic\":{\"800\":[\"800\",0,\"(?:00|[1-9]\\\\d)\\\\d{6}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"\\\\d\"]]],0,0,0,0,0,0,[0,0,[\"(?:00|[1-9]\\\\d)\\\\d{6}\"]]],\"808\":[\"808\",0,\"[1-9]\\\\d{7}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[1-9]\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,0,[\"[1-9]\\\\d{7}\"]]],\"870\":[\"870\",0,\"7\\\\d{11}|[35-7]\\\\d{8}\",[9,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[35-7]\"]]],0,0,0,0,0,0,[0,[\"(?:[356]|774[45])\\\\d{8}|7[6-8]\\\\d{7}\"]]],\"878\":[\"878\",0,\"10\\\\d{10}\",[12],[[\"(\\\\d{2})(\\\\d{5})(\\\\d{5})\",\"$1 $2 $3\",[\"1\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,[\"10\\\\d{10}\"]]],\"881\":[\"881\",0,\"6\\\\d{9}|[0-36-9]\\\\d{8}\",[9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\",[\"[0-37-9]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{5,6})\",\"$1 $2 $3\",[\"6\"]]],0,0,0,0,0,0,[0,[\"6\\\\d{9}|[0-36-9]\\\\d{8}\"]]],\"882\":[\"882\",0,\"[13]\\\\d{6}(?:\\\\d{2,5})?|[19]\\\\d{7}|(?:[25]\\\\d\\\\d|4)\\\\d{7}(?:\\\\d{2})?\",[7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"16|342\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"49\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"1[36]|9\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"3[23]\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"16\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"10|23|3(?:[15]|4[57])|4|51\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"34\"]],[\"(\\\\d{2})(\\\\d{4,5})(\\\\d{5})\",\"$1 $2 $3\",[\"[1-35]\"]]],0,0,0,0,0,0,[0,[\"342\\\\d{4}|(?:337|49)\\\\d{6}|(?:3(?:2|47|7\\\\d{3})|50\\\\d{3})\\\\d{7}\",[7,8,9,10,12]],0,0,0,0,0,0,[\"1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\\\d{4}|6\\\\d{5,10})|(?:345\\\\d|9[89])\\\\d{6}|(?:10|2(?:3|85\\\\d)|3(?:[15]|[69]\\\\d\\\\d)|4[15-8]|51)\\\\d{8}\"]]],\"883\":[\"883\",0,\"(?:[1-4]\\\\d|51)\\\\d{6,10}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,8})\",\"$1 $2 $3\",[\"[14]|2[24-689]|3[02-689]|51[24-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"510\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"21\"]],[\"(\\\\d{4})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"51[13]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[235]\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,[\"(?:2(?:00\\\\d\\\\d|10)|(?:370[1-9]|51\\\\d0)\\\\d)\\\\d{7}|51(?:00\\\\d{5}|[24-9]0\\\\d{4,7})|(?:1[0-79]|2[24-689]|3[02-689]|4[0-4])0\\\\d{5,9}\"]]],\"888\":[\"888\",0,\"\\\\d{11}\",[11],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\"]],0,0,0,0,0,0,[0,0,0,0,0,0,[\"\\\\d{11}\"]]],\"979\":[\"979\",0,\"[1359]\\\\d{8}\",[9],[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1359]\"]]],0,0,0,0,0,0,[0,0,0,[\"[1359]\\\\d{8}\"]]]}}", "// Importing from a \".js\" file is a workaround for Node.js \"ES Modules\"\r\n// importing system which is even uncapable of importing \"*.json\" files.\r\nimport metadata from '../../metadata.max.json.js'\r\n\r\nexport default function withMetadataArgument(func, _arguments) {\r\n\tvar args = Array.prototype.slice.call(_arguments)\r\n\targs.push(metadata)\r\n\treturn func.apply(this, args)\r\n}", "function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// https://stackoverflow.com/a/46971044/970769\n// \"Breaking changes in Typescript 2.1\"\n// \"Extending built-ins like Error, Array, and Map may no longer work.\"\n// \"As a recommendation, you can manually adjust the prototype immediately after any super(...) calls.\"\n// https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\nvar ParseError = /*#__PURE__*/function (_Error) {\n  _inherits(ParseError, _Error);\n\n  var _super = _createSuper(ParseError);\n\n  function ParseError(code) {\n    var _this;\n\n    _classCallCheck(this, ParseError);\n\n    _this = _super.call(this, code); // Set the prototype explicitly.\n    // Any subclass of FooError will have to manually set the prototype as well.\n\n    Object.setPrototypeOf(_assertThisInitialized(_this), ParseError.prototype);\n    _this.name = _this.constructor.name;\n    return _this;\n  }\n\n  return _createClass(ParseError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexport { ParseError as default };\n//# sourceMappingURL=ParseError.js.map", "// The minimum length of the national significant number.\nexport var MIN_LENGTH_FOR_NSN = 2; // The ITU says the maximum length should be 15,\n// but one can find longer numbers in Germany.\n\nexport var MAX_LENGTH_FOR_NSN = 17; // The maximum length of the country calling code.\n\nexport var MAX_LENGTH_COUNTRY_CODE = 3; // Digits accepted in phone numbers\n// (ascii, fullwidth, arabic-indic, and eastern arabic digits).\n\nexport var VALID_DIGITS = \"0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9\"; // `DASHES` will be right after the opening square bracket of the \"character class\"\n\nvar DASHES = \"-\\u2010-\\u2015\\u2212\\u30FC\\uFF0D\";\nvar SLASHES = \"\\uFF0F/\";\nvar DOTS = \"\\uFF0E.\";\nexport var WHITESPACE = \" \\xA0\\xAD\\u200B\\u2060\\u3000\";\nvar BRACKETS = \"()\\uFF08\\uFF09\\uFF3B\\uFF3D\\\\[\\\\]\"; // export const OPENING_BRACKETS = '(\\uFF08\\uFF3B\\\\\\['\n\nvar TILDES = \"~\\u2053\\u223C\\uFF5E\"; // Regular expression of acceptable punctuation found in phone numbers. This\n// excludes punctuation found as a leading character only. This consists of dash\n// characters, white space characters, full stops, slashes, square brackets,\n// parentheses and tildes. Full-width variants are also present.\n\nexport var VALID_PUNCTUATION = \"\".concat(DASHES).concat(SLASHES).concat(DOTS).concat(WHITESPACE).concat(BRACKETS).concat(TILDES);\nexport var PLUS_CHARS = \"+\\uFF0B\"; // const LEADING_PLUS_CHARS_PATTERN = new RegExp('^[' + PLUS_CHARS + ']+')\n//# sourceMappingURL=constants.js.map", "// Copy-pasted from:\n// https://github.com/substack/semver-compare/blob/master/index.js\n//\n// Inlining this function because some users reported issues with\n// importing from `semver-compare` in a browser with ES6 \"native\" modules.\n//\n// Fixes `semver-compare` not being able to compare versions with alpha/beta/etc \"tags\".\n// https://github.com/catamphetamine/libphonenumber-js/issues/381\nexport default function (a, b) {\n  a = a.split('-');\n  b = b.split('-');\n  var pa = a[0].split('.');\n  var pb = b[0].split('.');\n\n  for (var i = 0; i < 3; i++) {\n    var na = Number(pa[i]);\n    var nb = Number(pb[i]);\n    if (na > nb) return 1;\n    if (nb > na) return -1;\n    if (!isNaN(na) && isNaN(nb)) return 1;\n    if (isNaN(na) && !isNaN(nb)) return -1;\n  }\n\n  if (a[1] && b[1]) {\n    return a[1] > b[1] ? 1 : a[1] < b[1] ? -1 : 0;\n  }\n\n  return !a[1] && b[1] ? 1 : a[1] && !b[1] ? -1 : 0;\n}\n//# sourceMappingURL=semver-compare.js.map", "var objectConstructor = {}.constructor;\nexport default function isObject(object) {\n  return object !== undefined && object !== null && object.constructor === objectConstructor;\n}\n//# sourceMappingURL=isObject.js.map", "function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport compare from './tools/semver-compare.js';\nimport isObject from './helpers/isObject.js'; // Added \"possibleLengths\" and renamed\n// \"country_phone_code_to_countries\" to \"country_calling_codes\".\n\nvar V2 = '1.0.18'; // Added \"idd_prefix\" and \"default_idd_prefix\".\n\nvar V3 = '1.2.0'; // Moved `001` country code to \"nonGeographic\" section of metadata.\n\nvar V4 = '1.7.35';\nvar DEFAULT_EXT_PREFIX = ' ext. ';\nvar CALLING_CODE_REG_EXP = /^\\d+$/;\n/**\r\n * See: https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md\r\n */\n\nvar Metadata = /*#__PURE__*/function () {\n  function Metadata(metadata) {\n    _classCallCheck(this, Metadata);\n\n    validateMetadata(metadata);\n    this.metadata = metadata;\n    setVersion.call(this, metadata);\n  }\n\n  _createClass(Metadata, [{\n    key: \"getCountries\",\n    value: function getCountries() {\n      return Object.keys(this.metadata.countries).filter(function (_) {\n        return _ !== '001';\n      });\n    }\n  }, {\n    key: \"getCountryMetadata\",\n    value: function getCountryMetadata(countryCode) {\n      return this.metadata.countries[countryCode];\n    }\n  }, {\n    key: \"nonGeographic\",\n    value: function nonGeographic() {\n      if (this.v1 || this.v2 || this.v3) return; // `nonGeographical` was a typo.\n      // It's present in metadata generated from `1.7.35` to `1.7.37`.\n      // The test case could be found by searching for \"nonGeographical\".\n\n      return this.metadata.nonGeographic || this.metadata.nonGeographical;\n    }\n  }, {\n    key: \"hasCountry\",\n    value: function hasCountry(country) {\n      return this.getCountryMetadata(country) !== undefined;\n    }\n  }, {\n    key: \"hasCallingCode\",\n    value: function hasCallingCode(callingCode) {\n      if (this.getCountryCodesForCallingCode(callingCode)) {\n        return true;\n      }\n\n      if (this.nonGeographic()) {\n        if (this.nonGeographic()[callingCode]) {\n          return true;\n        }\n      } else {\n        // A hacky workaround for old custom metadata (generated before V4).\n        var countryCodes = this.countryCallingCodes()[callingCode];\n\n        if (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\n          return true;\n        }\n      }\n    }\n  }, {\n    key: \"isNonGeographicCallingCode\",\n    value: function isNonGeographicCallingCode(callingCode) {\n      if (this.nonGeographic()) {\n        return this.nonGeographic()[callingCode] ? true : false;\n      } else {\n        return this.getCountryCodesForCallingCode(callingCode) ? false : true;\n      }\n    } // Deprecated.\n\n  }, {\n    key: \"country\",\n    value: function country(countryCode) {\n      return this.selectNumberingPlan(countryCode);\n    }\n  }, {\n    key: \"selectNumberingPlan\",\n    value: function selectNumberingPlan(countryCode, callingCode) {\n      // Supports just passing `callingCode` as the first argument.\n      if (countryCode && CALLING_CODE_REG_EXP.test(countryCode)) {\n        callingCode = countryCode;\n        countryCode = null;\n      }\n\n      if (countryCode && countryCode !== '001') {\n        if (!this.hasCountry(countryCode)) {\n          throw new Error(\"Unknown country: \".concat(countryCode));\n        }\n\n        this.numberingPlan = new NumberingPlan(this.getCountryMetadata(countryCode), this);\n      } else if (callingCode) {\n        if (!this.hasCallingCode(callingCode)) {\n          throw new Error(\"Unknown calling code: \".concat(callingCode));\n        }\n\n        this.numberingPlan = new NumberingPlan(this.getNumberingPlanMetadata(callingCode), this);\n      } else {\n        this.numberingPlan = undefined;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getCountryCodesForCallingCode\",\n    value: function getCountryCodesForCallingCode(callingCode) {\n      var countryCodes = this.countryCallingCodes()[callingCode];\n\n      if (countryCodes) {\n        // Metadata before V4 included \"non-geographic entity\" calling codes\n        // inside `country_calling_codes` (for example, `\"881\":[\"001\"]`).\n        // Now the semantics of `country_calling_codes` has changed:\n        // it's specifically for \"countries\" now.\n        // Older versions of custom metadata will simply skip parsing\n        // \"non-geographic entity\" phone numbers with new versions\n        // of this library: it's not considered a bug,\n        // because such numbers are extremely rare,\n        // and developers extremely rarely use custom metadata.\n        if (countryCodes.length === 1 && countryCodes[0].length === 3) {\n          return;\n        }\n\n        return countryCodes;\n      }\n    }\n  }, {\n    key: \"getCountryCodeForCallingCode\",\n    value: function getCountryCodeForCallingCode(callingCode) {\n      var countryCodes = this.getCountryCodesForCallingCode(callingCode);\n\n      if (countryCodes) {\n        return countryCodes[0];\n      }\n    }\n  }, {\n    key: \"getNumberingPlanMetadata\",\n    value: function getNumberingPlanMetadata(callingCode) {\n      var countryCode = this.getCountryCodeForCallingCode(callingCode);\n\n      if (countryCode) {\n        return this.getCountryMetadata(countryCode);\n      }\n\n      if (this.nonGeographic()) {\n        var metadata = this.nonGeographic()[callingCode];\n\n        if (metadata) {\n          return metadata;\n        }\n      } else {\n        // A hacky workaround for old custom metadata (generated before V4).\n        // In that metadata, there was no concept of \"non-geographic\" metadata\n        // so metadata for `001` country code was stored along with other countries.\n        // The test case can be found by searching for:\n        // \"should work around `nonGeographic` metadata not existing\".\n        var countryCodes = this.countryCallingCodes()[callingCode];\n\n        if (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\n          return this.metadata.countries['001'];\n        }\n      }\n    } // Deprecated.\n\n  }, {\n    key: \"countryCallingCode\",\n    value: function countryCallingCode() {\n      return this.numberingPlan.callingCode();\n    } // Deprecated.\n\n  }, {\n    key: \"IDDPrefix\",\n    value: function IDDPrefix() {\n      return this.numberingPlan.IDDPrefix();\n    } // Deprecated.\n\n  }, {\n    key: \"defaultIDDPrefix\",\n    value: function defaultIDDPrefix() {\n      return this.numberingPlan.defaultIDDPrefix();\n    } // Deprecated.\n\n  }, {\n    key: \"nationalNumberPattern\",\n    value: function nationalNumberPattern() {\n      return this.numberingPlan.nationalNumberPattern();\n    } // Deprecated.\n\n  }, {\n    key: \"possibleLengths\",\n    value: function possibleLengths() {\n      return this.numberingPlan.possibleLengths();\n    } // Deprecated.\n\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      return this.numberingPlan.formats();\n    } // Deprecated.\n\n  }, {\n    key: \"nationalPrefixForParsing\",\n    value: function nationalPrefixForParsing() {\n      return this.numberingPlan.nationalPrefixForParsing();\n    } // Deprecated.\n\n  }, {\n    key: \"nationalPrefixTransformRule\",\n    value: function nationalPrefixTransformRule() {\n      return this.numberingPlan.nationalPrefixTransformRule();\n    } // Deprecated.\n\n  }, {\n    key: \"leadingDigits\",\n    value: function leadingDigits() {\n      return this.numberingPlan.leadingDigits();\n    } // Deprecated.\n\n  }, {\n    key: \"hasTypes\",\n    value: function hasTypes() {\n      return this.numberingPlan.hasTypes();\n    } // Deprecated.\n\n  }, {\n    key: \"type\",\n    value: function type(_type) {\n      return this.numberingPlan.type(_type);\n    } // Deprecated.\n\n  }, {\n    key: \"ext\",\n    value: function ext() {\n      return this.numberingPlan.ext();\n    }\n  }, {\n    key: \"countryCallingCodes\",\n    value: function countryCallingCodes() {\n      if (this.v1) return this.metadata.country_phone_code_to_countries;\n      return this.metadata.country_calling_codes;\n    } // Deprecated.\n\n  }, {\n    key: \"chooseCountryByCountryCallingCode\",\n    value: function chooseCountryByCountryCallingCode(callingCode) {\n      return this.selectNumberingPlan(callingCode);\n    }\n  }, {\n    key: \"hasSelectedNumberingPlan\",\n    value: function hasSelectedNumberingPlan() {\n      return this.numberingPlan !== undefined;\n    }\n  }]);\n\n  return Metadata;\n}();\n\nexport { Metadata as default };\n\nvar NumberingPlan = /*#__PURE__*/function () {\n  function NumberingPlan(metadata, globalMetadataObject) {\n    _classCallCheck(this, NumberingPlan);\n\n    this.globalMetadataObject = globalMetadataObject;\n    this.metadata = metadata;\n    setVersion.call(this, globalMetadataObject.metadata);\n  }\n\n  _createClass(NumberingPlan, [{\n    key: \"callingCode\",\n    value: function callingCode() {\n      return this.metadata[0];\n    } // Formatting information for regions which share\n    // a country calling code is contained by only one region\n    // for performance reasons. For example, for NANPA region\n    // (\"North American Numbering Plan Administration\",\n    //  which includes USA, Canada, Cayman Islands, Bahamas, etc)\n    // it will be contained in the metadata for `US`.\n\n  }, {\n    key: \"getDefaultCountryMetadataForRegion\",\n    value: function getDefaultCountryMetadataForRegion() {\n      return this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode());\n    } // Is always present.\n\n  }, {\n    key: \"IDDPrefix\",\n    value: function IDDPrefix() {\n      if (this.v1 || this.v2) return;\n      return this.metadata[1];\n    } // Is only present when a country supports multiple IDD prefixes.\n\n  }, {\n    key: \"defaultIDDPrefix\",\n    value: function defaultIDDPrefix() {\n      if (this.v1 || this.v2) return;\n      return this.metadata[12];\n    }\n  }, {\n    key: \"nationalNumberPattern\",\n    value: function nationalNumberPattern() {\n      if (this.v1 || this.v2) return this.metadata[1];\n      return this.metadata[2];\n    } // \"possible length\" data is always present in Google's metadata.\n\n  }, {\n    key: \"possibleLengths\",\n    value: function possibleLengths() {\n      if (this.v1) return;\n      return this.metadata[this.v2 ? 2 : 3];\n    }\n  }, {\n    key: \"_getFormats\",\n    value: function _getFormats(metadata) {\n      return metadata[this.v1 ? 2 : this.v2 ? 3 : 4];\n    } // For countries of the same region (e.g. NANPA)\n    // formats are all stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      var _this = this;\n\n      var formats = this._getFormats(this.metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || [];\n      return formats.map(function (_) {\n        return new Format(_, _this);\n      });\n    }\n  }, {\n    key: \"nationalPrefix\",\n    value: function nationalPrefix() {\n      return this.metadata[this.v1 ? 3 : this.v2 ? 4 : 5];\n    }\n  }, {\n    key: \"_getNationalPrefixFormattingRule\",\n    value: function _getNationalPrefixFormattingRule(metadata) {\n      return metadata[this.v1 ? 4 : this.v2 ? 5 : 6];\n    } // For countries of the same region (e.g. NANPA)\n    // national prefix formatting rule is stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n\n  }, {\n    key: \"nationalPrefixFormattingRule\",\n    value: function nationalPrefixFormattingRule() {\n      return this._getNationalPrefixFormattingRule(this.metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion());\n    }\n  }, {\n    key: \"_nationalPrefixForParsing\",\n    value: function _nationalPrefixForParsing() {\n      return this.metadata[this.v1 ? 5 : this.v2 ? 6 : 7];\n    }\n  }, {\n    key: \"nationalPrefixForParsing\",\n    value: function nationalPrefixForParsing() {\n      // If `national_prefix_for_parsing` is not set explicitly,\n      // then infer it from `national_prefix` (if any)\n      return this._nationalPrefixForParsing() || this.nationalPrefix();\n    }\n  }, {\n    key: \"nationalPrefixTransformRule\",\n    value: function nationalPrefixTransformRule() {\n      return this.metadata[this.v1 ? 6 : this.v2 ? 7 : 8];\n    }\n  }, {\n    key: \"_getNationalPrefixIsOptionalWhenFormatting\",\n    value: function _getNationalPrefixIsOptionalWhenFormatting() {\n      return !!this.metadata[this.v1 ? 7 : this.v2 ? 8 : 9];\n    } // For countries of the same region (e.g. NANPA)\n    // \"national prefix is optional when formatting\" flag is\n    // stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n\n  }, {\n    key: \"nationalPrefixIsOptionalWhenFormattingInNationalFormat\",\n    value: function nationalPrefixIsOptionalWhenFormattingInNationalFormat() {\n      return this._getNationalPrefixIsOptionalWhenFormatting(this.metadata) || this._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion());\n    }\n  }, {\n    key: \"leadingDigits\",\n    value: function leadingDigits() {\n      return this.metadata[this.v1 ? 8 : this.v2 ? 9 : 10];\n    }\n  }, {\n    key: \"types\",\n    value: function types() {\n      return this.metadata[this.v1 ? 9 : this.v2 ? 10 : 11];\n    }\n  }, {\n    key: \"hasTypes\",\n    value: function hasTypes() {\n      // Versions 1.2.0 - 1.2.4: can be `[]`.\n\n      /* istanbul ignore next */\n      if (this.types() && this.types().length === 0) {\n        return false;\n      } // Versions <= 1.2.4: can be `undefined`.\n      // Version >= 1.2.5: can be `0`.\n\n\n      return !!this.types();\n    }\n  }, {\n    key: \"type\",\n    value: function type(_type2) {\n      if (this.hasTypes() && getType(this.types(), _type2)) {\n        return new Type(getType(this.types(), _type2), this);\n      }\n    }\n  }, {\n    key: \"ext\",\n    value: function ext() {\n      if (this.v1 || this.v2) return DEFAULT_EXT_PREFIX;\n      return this.metadata[13] || DEFAULT_EXT_PREFIX;\n    }\n  }]);\n\n  return NumberingPlan;\n}();\n\nvar Format = /*#__PURE__*/function () {\n  function Format(format, metadata) {\n    _classCallCheck(this, Format);\n\n    this._format = format;\n    this.metadata = metadata;\n  }\n\n  _createClass(Format, [{\n    key: \"pattern\",\n    value: function pattern() {\n      return this._format[0];\n    }\n  }, {\n    key: \"format\",\n    value: function format() {\n      return this._format[1];\n    }\n  }, {\n    key: \"leadingDigitsPatterns\",\n    value: function leadingDigitsPatterns() {\n      return this._format[2] || [];\n    }\n  }, {\n    key: \"nationalPrefixFormattingRule\",\n    value: function nationalPrefixFormattingRule() {\n      return this._format[3] || this.metadata.nationalPrefixFormattingRule();\n    }\n  }, {\n    key: \"nationalPrefixIsOptionalWhenFormattingInNationalFormat\",\n    value: function nationalPrefixIsOptionalWhenFormattingInNationalFormat() {\n      return !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat();\n    }\n  }, {\n    key: \"nationalPrefixIsMandatoryWhenFormattingInNationalFormat\",\n    value: function nationalPrefixIsMandatoryWhenFormattingInNationalFormat() {\n      // National prefix is omitted if there's no national prefix formatting rule\n      // set for this country, or when the national prefix formatting rule\n      // contains no national prefix itself, or when this rule is set but\n      // national prefix is optional for this phone number format\n      // (and it is not enforced explicitly)\n      return this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormattingInNationalFormat();\n    } // Checks whether national prefix formatting rule contains national prefix.\n\n  }, {\n    key: \"usesNationalPrefix\",\n    value: function usesNationalPrefix() {\n      return this.nationalPrefixFormattingRule() && // Check that national prefix formatting rule is not a \"dummy\" one.\n      !FIRST_GROUP_ONLY_PREFIX_PATTERN.test(this.nationalPrefixFormattingRule()) // In compressed metadata, `this.nationalPrefixFormattingRule()` is `0`\n      // when `national_prefix_formatting_rule` is not present.\n      // So, `true` or `false` are returned explicitly here, so that\n      // `0` number isn't returned.\n      ? true : false;\n    }\n  }, {\n    key: \"internationalFormat\",\n    value: function internationalFormat() {\n      return this._format[5] || this.format();\n    }\n  }]);\n\n  return Format;\n}();\n/**\r\n * A pattern that is used to determine if the national prefix formatting rule\r\n * has the first group only, i.e., does not start with the national prefix.\r\n * Note that the pattern explicitly allows for unbalanced parentheses.\r\n */\n\n\nvar FIRST_GROUP_ONLY_PREFIX_PATTERN = /^\\(?\\$1\\)?$/;\n\nvar Type = /*#__PURE__*/function () {\n  function Type(type, metadata) {\n    _classCallCheck(this, Type);\n\n    this.type = type;\n    this.metadata = metadata;\n  }\n\n  _createClass(Type, [{\n    key: \"pattern\",\n    value: function pattern() {\n      if (this.metadata.v1) return this.type;\n      return this.type[0];\n    }\n  }, {\n    key: \"possibleLengths\",\n    value: function possibleLengths() {\n      if (this.metadata.v1) return;\n      return this.type[1] || this.metadata.possibleLengths();\n    }\n  }]);\n\n  return Type;\n}();\n\nfunction getType(types, type) {\n  switch (type) {\n    case 'FIXED_LINE':\n      return types[0];\n\n    case 'MOBILE':\n      return types[1];\n\n    case 'TOLL_FREE':\n      return types[2];\n\n    case 'PREMIUM_RATE':\n      return types[3];\n\n    case 'PERSONAL_NUMBER':\n      return types[4];\n\n    case 'VOICEMAIL':\n      return types[5];\n\n    case 'UAN':\n      return types[6];\n\n    case 'PAGER':\n      return types[7];\n\n    case 'VOIP':\n      return types[8];\n\n    case 'SHARED_COST':\n      return types[9];\n  }\n}\n\nexport function validateMetadata(metadata) {\n  if (!metadata) {\n    throw new Error('[libphonenumber-js] `metadata` argument not passed. Check your arguments.');\n  } // `country_phone_code_to_countries` was renamed to\n  // `country_calling_codes` in `1.0.18`.\n\n\n  if (!isObject(metadata) || !isObject(metadata.countries)) {\n    throw new Error(\"[libphonenumber-js] `metadata` argument was passed but it's not a valid metadata. Must be an object having `.countries` child object property. Got \".concat(isObject(metadata) ? 'an object of shape: { ' + Object.keys(metadata).join(', ') + ' }' : 'a ' + typeOf(metadata) + ': ' + metadata, \".\"));\n  }\n} // Babel transforms `typeof` into some \"branches\"\n// so istanbul will show this as \"branch not covered\".\n\n/* istanbul ignore next */\n\nvar typeOf = function typeOf(_) {\n  return _typeof(_);\n};\n/**\r\n * Returns extension prefix for a country.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string?}\r\n * @example\r\n * // Returns \" ext. \"\r\n * getExtPrefix(\"US\")\r\n */\n\n\nexport function getExtPrefix(country, metadata) {\n  metadata = new Metadata(metadata);\n\n  if (metadata.hasCountry(country)) {\n    return metadata.country(country).ext();\n  }\n\n  return DEFAULT_EXT_PREFIX;\n}\n/**\r\n * Returns \"country calling code\" for a country.\r\n * Throws an error if the country doesn't exist or isn't supported by this library.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string}\r\n * @example\r\n * // Returns \"44\"\r\n * getCountryCallingCode(\"GB\")\r\n */\n\nexport function getCountryCallingCode(country, metadata) {\n  metadata = new Metadata(metadata);\n\n  if (metadata.hasCountry(country)) {\n    return metadata.country(country).countryCallingCode();\n  }\n\n  throw new Error(\"Unknown country: \".concat(country));\n}\nexport function isSupportedCountry(country, metadata) {\n  // metadata = new Metadata(metadata)\n  // return metadata.hasCountry(country)\n  return metadata.countries.hasOwnProperty(country);\n}\n\nfunction setVersion(metadata) {\n  var version = metadata.version;\n\n  if (typeof version === 'number') {\n    this.v1 = version === 1;\n    this.v2 = version === 2;\n    this.v3 = version === 3;\n    this.v4 = version === 4;\n  } else {\n    if (!version) {\n      this.v1 = true;\n    } else if (compare(version, V3) === -1) {\n      this.v2 = true;\n    } else if (compare(version, V4) === -1) {\n      this.v3 = true;\n    } else {\n      this.v4 = true;\n    }\n  }\n} // const ISO_COUNTRY_CODE = /^[A-Z]{2}$/\n// function isCountryCode(countryCode) {\n// \treturn ISO_COUNTRY_CODE.test(countryCodeOrCountryCallingCode)\n// }\n//# sourceMappingURL=metadata.js.map", "import { VALID_DIGITS } from '../../constants.js'; // The RFC 3966 format for extensions.\n\nvar RFC3966_EXTN_PREFIX = ';ext=';\n/**\r\n * Helper method for constructing regular expressions for parsing. Creates\r\n * an expression that captures up to max_length digits.\r\n * @return {string} RegEx pattern to capture extension digits.\r\n */\n\nvar getExtensionDigitsPattern = function getExtensionDigitsPattern(maxLength) {\n  return \"([\".concat(VALID_DIGITS, \"]{1,\").concat(maxLength, \"})\");\n};\n/**\r\n * Helper initialiser method to create the regular-expression pattern to match\r\n * extensions.\r\n * Copy-pasted from Google's `libphonenumber`:\r\n * https://github.com/google/libphonenumber/blob/55b2646ec9393f4d3d6661b9c82ef9e258e8b829/javascript/i18n/phonenumbers/phonenumberutil.js#L759-L766\r\n * @return {string} RegEx pattern to capture extensions.\r\n */\n\n\nexport default function createExtensionPattern(purpose) {\n  // We cap the maximum length of an extension based on the ambiguity of the way\n  // the extension is prefixed. As per ITU, the officially allowed length for\n  // extensions is actually 40, but we don't support this since we haven't seen real\n  // examples and this introduces many false interpretations as the extension labels\n  // are not standardized.\n\n  /** @type {string} */\n  var extLimitAfterExplicitLabel = '20';\n  /** @type {string} */\n\n  var extLimitAfterLikelyLabel = '15';\n  /** @type {string} */\n\n  var extLimitAfterAmbiguousChar = '9';\n  /** @type {string} */\n\n  var extLimitWhenNotSure = '6';\n  /** @type {string} */\n\n  var possibleSeparatorsBetweenNumberAndExtLabel = \"[ \\xA0\\\\t,]*\"; // Optional full stop (.) or colon, followed by zero or more spaces/tabs/commas.\n\n  /** @type {string} */\n\n  var possibleCharsAfterExtLabel = \"[:\\\\.\\uFF0E]?[ \\xA0\\\\t,-]*\";\n  /** @type {string} */\n\n  var optionalExtnSuffix = \"#?\"; // Here the extension is called out in more explicit way, i.e mentioning it obvious\n  // patterns like \"ext.\".\n\n  /** @type {string} */\n\n  var explicitExtLabels = \"(?:e?xt(?:ensi(?:o\\u0301?|\\xF3))?n?|\\uFF45?\\uFF58\\uFF54\\uFF4E?|\\u0434\\u043E\\u0431|anexo)\"; // One-character symbols that can be used to indicate an extension, and less\n  // commonly used or more ambiguous extension labels.\n\n  /** @type {string} */\n\n  var ambiguousExtLabels = \"(?:[x\\uFF58#\\uFF03~\\uFF5E]|int|\\uFF49\\uFF4E\\uFF54)\"; // When extension is not separated clearly.\n\n  /** @type {string} */\n\n  var ambiguousSeparator = \"[- ]+\"; // This is the same as possibleSeparatorsBetweenNumberAndExtLabel, but not matching\n  // comma as extension label may have it.\n\n  /** @type {string} */\n\n  var possibleSeparatorsNumberExtLabelNoComma = \"[ \\xA0\\\\t]*\"; // \",,\" is commonly used for auto dialling the extension when connected. First\n  // comma is matched through possibleSeparatorsBetweenNumberAndExtLabel, so we do\n  // not repeat it here. Semi-colon works in Iphone and Android also to pop up a\n  // button with the extension number following.\n\n  /** @type {string} */\n\n  var autoDiallingAndExtLabelsFound = \"(?:,{2}|;)\";\n  /** @type {string} */\n\n  var rfcExtn = RFC3966_EXTN_PREFIX + getExtensionDigitsPattern(extLimitAfterExplicitLabel);\n  /** @type {string} */\n\n  var explicitExtn = possibleSeparatorsBetweenNumberAndExtLabel + explicitExtLabels + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterExplicitLabel) + optionalExtnSuffix;\n  /** @type {string} */\n\n  var ambiguousExtn = possibleSeparatorsBetweenNumberAndExtLabel + ambiguousExtLabels + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterAmbiguousChar) + optionalExtnSuffix;\n  /** @type {string} */\n\n  var americanStyleExtnWithSuffix = ambiguousSeparator + getExtensionDigitsPattern(extLimitWhenNotSure) + \"#\";\n  /** @type {string} */\n\n  var autoDiallingExtn = possibleSeparatorsNumberExtLabelNoComma + autoDiallingAndExtLabelsFound + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterLikelyLabel) + optionalExtnSuffix;\n  /** @type {string} */\n\n  var onlyCommasExtn = possibleSeparatorsNumberExtLabelNoComma + \"(?:,)+\" + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterAmbiguousChar) + optionalExtnSuffix; // The first regular expression covers RFC 3966 format, where the extension is added\n  // using \";ext=\". The second more generic where extension is mentioned with explicit\n  // labels like \"ext:\". In both the above cases we allow more numbers in extension than\n  // any other extension labels. The third one captures when single character extension\n  // labels or less commonly used labels are used. In such cases we capture fewer\n  // extension digits in order to reduce the chance of falsely interpreting two\n  // numbers beside each other as a number + extension. The fourth one covers the\n  // special case of American numbers where the extension is written with a hash\n  // at the end, such as \"- 503#\". The fifth one is exclusively for extension\n  // autodialling formats which are used when dialling and in this case we accept longer\n  // extensions. The last one is more liberal on the number of commas that acts as\n  // extension labels, so we have a strict cap on the number of digits in such extensions.\n\n  return rfcExtn + \"|\" + explicitExtn + \"|\" + ambiguousExtn + \"|\" + americanStyleExtnWithSuffix + \"|\" + autoDiallingExtn + \"|\" + onlyCommasExtn;\n}\n//# sourceMappingURL=createExtensionPattern.js.map", "import { MIN_LENGTH_FOR_NSN, VALID_DIGITS, VALID_PUNCTUATION, PLUS_CHARS } from '../constants.js';\nimport createExtensionPattern from './extension/createExtensionPattern.js'; //  Regular expression of viable phone numbers. This is location independent.\n//  Checks we have at least three leading digits, and only valid punctuation,\n//  alpha characters and digits in the phone number. Does not include extension\n//  data. The symbol 'x' is allowed here as valid punctuation since it is often\n//  used as a placeholder for carrier codes, for example in Brazilian phone\n//  numbers. We also allow multiple '+' characters at the start.\n//\n//  Corresponds to the following:\n//  [digits]{minLengthNsn}|\n//  plus_sign*\n//  (([punctuation]|[star])*[digits]){3,}([punctuation]|[star]|[digits]|[alpha])*\n//\n//  The first reg-ex is to allow short numbers (two digits long) to be parsed if\n//  they are entered as \"15\" etc, but only if there is no punctuation in them.\n//  The second expression restricts the number of digits to three or more, but\n//  then allows them to be in international form, and to have alpha-characters\n//  and punctuation. We split up the two reg-exes here and combine them when\n//  creating the reg-ex VALID_PHONE_NUMBER_PATTERN itself so we can prefix it\n//  with ^ and append $ to each branch.\n//\n//  \"Note VALID_PUNCTUATION starts with a -,\n//   so must be the first in the range\" (c) Google devs.\n//  (wtf did they mean by saying that; probably nothing)\n//\n\nvar MIN_LENGTH_PHONE_NUMBER_PATTERN = '[' + VALID_DIGITS + ']{' + MIN_LENGTH_FOR_NSN + '}'; //\n// And this is the second reg-exp:\n// (see MIN_LENGTH_PHONE_NUMBER_PATTERN for a full description of this reg-exp)\n//\n\nexport var VALID_PHONE_NUMBER = '[' + PLUS_CHARS + ']{0,1}' + '(?:' + '[' + VALID_PUNCTUATION + ']*' + '[' + VALID_DIGITS + ']' + '){3,}' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']*'; // This regular expression isn't present in Google's `libphonenumber`\n// and is only used to determine whether the phone number being input\n// is too short for it to even consider it a \"valid\" number.\n// This is just a way to differentiate between a really invalid phone\n// number like \"abcde\" and a valid phone number that a user has just\n// started inputting, like \"+1\" or \"1\": both these cases would be\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\n// library can provide a more detailed error message — whether it's\n// really \"not a number\", or is it just a start of a valid phone number.\n\nvar VALID_PHONE_NUMBER_START_REG_EXP = new RegExp('^' + '[' + PLUS_CHARS + ']{0,1}' + '(?:' + '[' + VALID_PUNCTUATION + ']*' + '[' + VALID_DIGITS + ']' + '){1,2}' + '$', 'i');\nexport var VALID_PHONE_NUMBER_WITH_EXTENSION = VALID_PHONE_NUMBER + // Phone number extensions\n'(?:' + createExtensionPattern() + ')?'; // The combined regular expression for valid phone numbers:\n//\n\nvar VALID_PHONE_NUMBER_PATTERN = new RegExp( // Either a short two-digit-only phone number\n'^' + MIN_LENGTH_PHONE_NUMBER_PATTERN + '$' + '|' + // Or a longer fully parsed phone number (min 3 characters)\n'^' + VALID_PHONE_NUMBER_WITH_EXTENSION + '$', 'i'); // Checks to see if the string of characters could possibly be a phone number at\n// all. At the moment, checks to see that the string begins with at least 2\n// digits, ignoring any punctuation commonly found in phone numbers. This method\n// does not require the number to be normalized in advance - but does assume\n// that leading non-number symbols have been removed, such as by the method\n// `extract_possible_number`.\n//\n\nexport default function isViablePhoneNumber(number) {\n  return number.length >= MIN_LENGTH_FOR_NSN && VALID_PHONE_NUMBER_PATTERN.test(number);\n} // This is just a way to differentiate between a really invalid phone\n// number like \"abcde\" and a valid phone number that a user has just\n// started inputting, like \"+1\" or \"1\": both these cases would be\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\n// library can provide a more detailed error message — whether it's\n// really \"not a number\", or is it just a start of a valid phone number.\n\nexport function isViablePhoneNumberStart(number) {\n  return VALID_PHONE_NUMBER_START_REG_EXP.test(number);\n}\n//# sourceMappingURL=isViablePhoneNumber.js.map", "import createExtensionPattern from './createExtensionPattern.js'; // Regexp of all known extension prefixes used by different regions followed by\n// 1 or more valid digits, for use when parsing.\n\nvar EXTN_PATTERN = new RegExp('(?:' + createExtensionPattern() + ')$', 'i'); // Strips any extension (as in, the part of the number dialled after the call is\n// connected, usually indicated with extn, ext, x or similar) from the end of\n// the number, and returns it.\n\nexport default function extractExtension(number) {\n  var start = number.search(EXTN_PATTERN);\n\n  if (start < 0) {\n    return {};\n  } // If we find a potential extension, and the number preceding this is a viable\n  // number, we assume it is an extension.\n\n\n  var numberWithoutExtension = number.slice(0, start);\n  var matches = number.match(EXTN_PATTERN);\n  var i = 1;\n\n  while (i < matches.length) {\n    if (matches[i]) {\n      return {\n        number: numberWithoutExtension,\n        ext: matches[i]\n      };\n    }\n\n    i++;\n  }\n}\n//# sourceMappingURL=extractExtension.js.map", "function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n// These mappings map a character (key) to a specific digit that should\n// replace it for normalization purposes. Non-European digits that\n// may be used in phone numbers are mapped to a European equivalent.\n//\n// E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\n//\nexport var DIGITS = {\n  '0': '0',\n  '1': '1',\n  '2': '2',\n  '3': '3',\n  '4': '4',\n  '5': '5',\n  '6': '6',\n  '7': '7',\n  '8': '8',\n  '9': '9',\n  \"\\uFF10\": '0',\n  // Fullwidth digit 0\n  \"\\uFF11\": '1',\n  // Fullwidth digit 1\n  \"\\uFF12\": '2',\n  // Fullwidth digit 2\n  \"\\uFF13\": '3',\n  // Fullwidth digit 3\n  \"\\uFF14\": '4',\n  // Fullwidth digit 4\n  \"\\uFF15\": '5',\n  // Fullwidth digit 5\n  \"\\uFF16\": '6',\n  // Fullwidth digit 6\n  \"\\uFF17\": '7',\n  // Fullwidth digit 7\n  \"\\uFF18\": '8',\n  // Fullwidth digit 8\n  \"\\uFF19\": '9',\n  // Fullwidth digit 9\n  \"\\u0660\": '0',\n  // Arabic-indic digit 0\n  \"\\u0661\": '1',\n  // Arabic-indic digit 1\n  \"\\u0662\": '2',\n  // Arabic-indic digit 2\n  \"\\u0663\": '3',\n  // Arabic-indic digit 3\n  \"\\u0664\": '4',\n  // Arabic-indic digit 4\n  \"\\u0665\": '5',\n  // Arabic-indic digit 5\n  \"\\u0666\": '6',\n  // Arabic-indic digit 6\n  \"\\u0667\": '7',\n  // Arabic-indic digit 7\n  \"\\u0668\": '8',\n  // Arabic-indic digit 8\n  \"\\u0669\": '9',\n  // Arabic-indic digit 9\n  \"\\u06F0\": '0',\n  // Eastern-Arabic digit 0\n  \"\\u06F1\": '1',\n  // Eastern-Arabic digit 1\n  \"\\u06F2\": '2',\n  // Eastern-Arabic digit 2\n  \"\\u06F3\": '3',\n  // Eastern-Arabic digit 3\n  \"\\u06F4\": '4',\n  // Eastern-Arabic digit 4\n  \"\\u06F5\": '5',\n  // Eastern-Arabic digit 5\n  \"\\u06F6\": '6',\n  // Eastern-Arabic digit 6\n  \"\\u06F7\": '7',\n  // Eastern-Arabic digit 7\n  \"\\u06F8\": '8',\n  // Eastern-Arabic digit 8\n  \"\\u06F9\": '9' // Eastern-Arabic digit 9\n\n};\nexport function parseDigit(character) {\n  return DIGITS[character];\n}\n/**\r\n * Parses phone number digits from a string.\r\n * Drops all punctuation leaving only digits.\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * parseDigits('8 (800) 555')\r\n * // Outputs '8800555'.\r\n * ```\r\n */\n\nexport default function parseDigits(string) {\n  var result = ''; // Using `.split('')` here instead of normal `for ... of`\n  // because the importing application doesn't neccessarily include an ES6 polyfill.\n  // The `.split('')` approach discards \"exotic\" UTF-8 characters\n  // (the ones consisting of four bytes) but digits\n  // (including non-European ones) don't fall into that range\n  // so such \"exotic\" characters would be discarded anyway.\n\n  for (var _iterator = _createForOfIteratorHelperLoose(string.split('')), _step; !(_step = _iterator()).done;) {\n    var character = _step.value;\n    var digit = parseDigit(character);\n\n    if (digit) {\n      result += digit;\n    }\n  }\n\n  return result;\n}\n//# sourceMappingURL=parseDigits.js.map", "function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { parseDigit } from './helpers/parseDigits.js';\n/**\r\n * Parses phone number characters from a string.\r\n * Drops all punctuation leaving only digits and the leading `+` sign (if any).\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * // Outputs '8800555'.\r\n * parseIncompletePhoneNumber('8 (800) 555')\r\n * // Outputs '+7800555'.\r\n * parseIncompletePhoneNumber('+7 800 555')\r\n * ```\r\n */\n\nexport default function parseIncompletePhoneNumber(string) {\n  var result = ''; // Using `.split('')` here instead of normal `for ... of`\n  // because the importing application doesn't neccessarily include an ES6 polyfill.\n  // The `.split('')` approach discards \"exotic\" UTF-8 characters\n  // (the ones consisting of four bytes) but digits\n  // (including non-European ones) don't fall into that range\n  // so such \"exotic\" characters would be discarded anyway.\n\n  for (var _iterator = _createForOfIteratorHelperLoose(string.split('')), _step; !(_step = _iterator()).done;) {\n    var character = _step.value;\n    result += parsePhoneNumberCharacter(character, result) || '';\n  }\n\n  return result;\n}\n/**\r\n * Parses next character while parsing phone number digits (including a `+`)\r\n * from text: discards everything except `+` and digits, and `+` is only allowed\r\n * at the start of a phone number.\r\n * For example, is used in `react-phone-number-input` where it uses\r\n * [`input-format`](https://gitlab.com/catamphetamine/input-format).\r\n * @param  {string} character - Yet another character from raw input string.\r\n * @param  {string?} prevParsedCharacters - Previous parsed characters.\r\n * @param  {function?} emitEvent - An optional \"emit event\" function.\r\n * @return {string?} The parsed character.\r\n */\n\nexport function parsePhoneNumberCharacter(character, prevParsedCharacters, emitEvent) {\n  // Only allow a leading `+`.\n  if (character === '+') {\n    // If this `+` is not the first parsed character\n    // then discard it.\n    if (prevParsedCharacters) {\n      // `emitEvent` argument was added to this `export`ed function on Dec 26th, 2023.\n      // Any 3rd-party code that used to `import` and call this function before that\n      // won't be passing any `emitEvent` argument.\n      //\n      // The addition of the `emitEvent` argument was to fix the slightly-weird behavior\n      // of parsing an input string when the user inputs something like `\"2+7\"\n      // https://github.com/catamphetamine/react-phone-number-input/issues/437\n      //\n      // If the parser encounters an unexpected `+` in a string being parsed\n      // then it simply discards that out-of-place `+` and any following characters.\n      //\n      if (typeof emitEvent === 'function') {\n        emitEvent('end');\n      }\n\n      return;\n    }\n\n    return '+';\n  } // Allow digits.\n\n\n  return parseDigit(character);\n}\n//# sourceMappingURL=parseIncompletePhoneNumber.js.map", "function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\r\n * Merges two arrays.\r\n * @param  {*} a\r\n * @param  {*} b\r\n * @return {*}\r\n */\nexport default function mergeArrays(a, b) {\n  var merged = a.slice();\n\n  for (var _iterator = _createForOfIteratorHelperLoose(b), _step; !(_step = _iterator()).done;) {\n    var element = _step.value;\n\n    if (a.indexOf(element) < 0) {\n      merged.push(element);\n    }\n  }\n\n  return merged.sort(function (a, b) {\n    return a - b;\n  }); // ES6 version, requires Set polyfill.\n  // let merged = new Set(a)\n  // for (const element of b) {\n  // \tmerged.add(i)\n  // }\n  // return Array.from(merged).sort((a, b) => a - b)\n}\n//# sourceMappingURL=mergeArrays.js.map", "import mergeArrays from './mergeArrays.js';\nexport default function checkNumberLength(nationalNumber, metadata) {\n  return checkNumberLengthForType(nationalNumber, undefined, metadata);\n} // Checks whether a number is possible for the country based on its length.\n// Should only be called for the \"new\" metadata which has \"possible lengths\".\n\nexport function checkNumberLengthForType(nationalNumber, type, metadata) {\n  var type_info = metadata.type(type); // There should always be \"<possiblePengths/>\" set for every type element.\n  // This is declared in the XML schema.\n  // For size efficiency, where a sub-description (e.g. fixed-line)\n  // has the same \"<possiblePengths/>\" as the \"general description\", this is missing,\n  // so we fall back to the \"general description\". Where no numbers of the type\n  // exist at all, there is one possible length (-1) which is guaranteed\n  // not to match the length of any real phone number.\n\n  var possible_lengths = type_info && type_info.possibleLengths() || metadata.possibleLengths(); // let local_lengths    = type_info && type.possibleLengthsLocal() || metadata.possibleLengthsLocal()\n  // Metadata before version `1.0.18` didn't contain `possible_lengths`.\n\n  if (!possible_lengths) {\n    return 'IS_POSSIBLE';\n  }\n\n  if (type === 'FIXED_LINE_OR_MOBILE') {\n    // No such country in metadata.\n\n    /* istanbul ignore next */\n    if (!metadata.type('FIXED_LINE')) {\n      // The rare case has been encountered where no fixedLine data is available\n      // (true for some non-geographic entities), so we just check mobile.\n      return checkNumberLengthForType(nationalNumber, 'MOBILE', metadata);\n    }\n\n    var mobile_type = metadata.type('MOBILE');\n\n    if (mobile_type) {\n      // Merge the mobile data in if there was any. \"Concat\" creates a new\n      // array, it doesn't edit possible_lengths in place, so we don't need a copy.\n      // Note that when adding the possible lengths from mobile, we have\n      // to again check they aren't empty since if they are this indicates\n      // they are the same as the general desc and should be obtained from there.\n      possible_lengths = mergeArrays(possible_lengths, mobile_type.possibleLengths()); // The current list is sorted; we need to merge in the new list and\n      // re-sort (duplicates are okay). Sorting isn't so expensive because\n      // the lists are very small.\n      // if (local_lengths) {\n      // \tlocal_lengths = mergeArrays(local_lengths, mobile_type.possibleLengthsLocal())\n      // } else {\n      // \tlocal_lengths = mobile_type.possibleLengthsLocal()\n      // }\n    }\n  } // If the type doesn't exist then return 'INVALID_LENGTH'.\n  else if (type && !type_info) {\n    return 'INVALID_LENGTH';\n  }\n\n  var actual_length = nationalNumber.length; // In `libphonenumber-js` all \"local-only\" formats are dropped for simplicity.\n  // // This is safe because there is never an overlap beween the possible lengths\n  // // and the local-only lengths; this is checked at build time.\n  // if (local_lengths && local_lengths.indexOf(nationalNumber.length) >= 0)\n  // {\n  // \treturn 'IS_POSSIBLE_LOCAL_ONLY'\n  // }\n\n  var minimum_length = possible_lengths[0];\n\n  if (minimum_length === actual_length) {\n    return 'IS_POSSIBLE';\n  }\n\n  if (minimum_length > actual_length) {\n    return 'TOO_SHORT';\n  }\n\n  if (possible_lengths[possible_lengths.length - 1] < actual_length) {\n    return 'TOO_LONG';\n  } // We skip the first element since we've already checked it.\n\n\n  return possible_lengths.indexOf(actual_length, 1) >= 0 ? 'IS_POSSIBLE' : 'INVALID_LENGTH';\n}\n//# sourceMappingURL=checkNumberLength.js.map", "import Metadata from './metadata.js';\nimport checkNumberLength from './helpers/checkNumberLength.js';\n/**\r\n * Checks if a phone number is \"possible\" (basically just checks its length).\r\n *\r\n * isPossible(phoneNumberInstance, { ..., v2: true }, metadata)\r\n *\r\n * isPossible({ phone: '8005553535', country: 'RU' }, { ... }, metadata)\r\n * isPossible({ phone: '8005553535', country: 'RU' }, undefined, metadata)\r\n *\r\n * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\n\nexport default function isPossiblePhoneNumber(input, options, metadata) {\n  /* istanbul ignore if */\n  if (options === undefined) {\n    options = {};\n  }\n\n  metadata = new Metadata(metadata);\n\n  if (options.v2) {\n    if (!input.countryCallingCode) {\n      throw new Error('Invalid phone number object passed');\n    }\n\n    metadata.selectNumberingPlan(input.countryCallingCode);\n  } else {\n    if (!input.phone) {\n      return false;\n    }\n\n    if (input.country) {\n      if (!metadata.hasCountry(input.country)) {\n        throw new Error(\"Unknown country: \".concat(input.country));\n      }\n\n      metadata.country(input.country);\n    } else {\n      if (!input.countryCallingCode) {\n        throw new Error('Invalid phone number object passed');\n      }\n\n      metadata.selectNumberingPlan(input.countryCallingCode);\n    }\n  } // Old metadata (< 1.0.18) had no \"possible length\" data.\n\n\n  if (metadata.possibleLengths()) {\n    return isPossibleNumber(input.phone || input.nationalNumber, metadata);\n  } else {\n    // There was a bug between `1.7.35` and `1.7.37` where \"possible_lengths\"\n    // were missing for \"non-geographical\" numbering plans.\n    // Just assume the number is possible in such cases:\n    // it's unlikely that anyone generated their custom metadata\n    // in that short period of time (one day).\n    // This code can be removed in some future major version update.\n    if (input.countryCallingCode && metadata.isNonGeographicCallingCode(input.countryCallingCode)) {\n      // \"Non-geographic entities\" did't have `possibleLengths`\n      // due to a bug in metadata generation process.\n      return true;\n    } else {\n      throw new Error('Missing \"possibleLengths\" in metadata. Perhaps the metadata has been generated before v1.0.18.');\n    }\n  }\n}\nexport function isPossibleNumber(nationalNumber, metadata) {\n  //, isInternational) {\n  switch (checkNumberLength(nationalNumber, metadata)) {\n    case 'IS_POSSIBLE':\n      return true;\n    // This library ignores \"local-only\" phone numbers (for simplicity).\n    // See the readme for more info on what are \"local-only\" phone numbers.\n    // case 'IS_POSSIBLE_LOCAL_ONLY':\n    // \treturn !isInternational\n\n    default:\n      return false;\n  }\n}\n//# sourceMappingURL=isPossible.js.map", "/**\r\n * Checks whether the entire input sequence can be matched\r\n * against the regular expression.\r\n * @return {boolean}\r\n */\nexport default function matchesEntirely(text, regular_expression) {\n  // If assigning the `''` default value is moved to the arguments above,\n  // code coverage would decrease for some weird reason.\n  text = text || '';\n  return new RegExp('^(?:' + regular_expression + ')$').test(text);\n}\n//# sourceMappingURL=matchesEntirely.js.map", "function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport Metadata from '../metadata.js';\nimport matchesEntirely from './matchesEntirely.js';\nvar NON_FIXED_LINE_PHONE_TYPES = ['MOBILE', 'PREMIUM_RATE', 'TOLL_FREE', 'SHARED_COST', 'VOIP', 'PERSONAL_NUMBER', 'PAGER', 'UAN', 'VOICEMAIL']; // Finds out national phone number type (fixed line, mobile, etc)\n\nexport default function getNumberType(input, options, metadata) {\n  // If assigning the `{}` default value is moved to the arguments above,\n  // code coverage would decrease for some weird reason.\n  options = options || {}; // When `parse()` returns an empty object — `{}` —\n  // that means that the phone number is malformed,\n  // so it can't possibly be valid.\n\n  if (!input.country && !input.countryCallingCode) {\n    return;\n  }\n\n  metadata = new Metadata(metadata);\n  metadata.selectNumberingPlan(input.country, input.countryCallingCode);\n  var nationalNumber = options.v2 ? input.nationalNumber : input.phone; // The following is copy-pasted from the original function:\n  // https://github.com/googlei18n/libphonenumber/blob/3ea547d4fbaa2d0b67588904dfa5d3f2557c27ff/javascript/i18n/phonenumbers/phonenumberutil.js#L2835\n  // Is this national number even valid for this country\n\n  if (!matchesEntirely(nationalNumber, metadata.nationalNumberPattern())) {\n    return;\n  } // Is it fixed line number\n\n\n  if (isNumberTypeEqualTo(nationalNumber, 'FIXED_LINE', metadata)) {\n    // Because duplicate regular expressions are removed\n    // to reduce metadata size, if \"mobile\" pattern is \"\"\n    // then it means it was removed due to being a duplicate of the fixed-line pattern.\n    //\n    if (metadata.type('MOBILE') && metadata.type('MOBILE').pattern() === '') {\n      return 'FIXED_LINE_OR_MOBILE';\n    } // `MOBILE` type pattern isn't included if it matched `FIXED_LINE` one.\n    // For example, for \"US\" country.\n    // Old metadata (< `1.0.18`) had a specific \"types\" data structure\n    // that happened to be `undefined` for `MOBILE` in that case.\n    // Newer metadata (>= `1.0.18`) has another data structure that is\n    // not `undefined` for `MOBILE` in that case (it's just an empty array).\n    // So this `if` is just for backwards compatibility with old metadata.\n\n\n    if (!metadata.type('MOBILE')) {\n      return 'FIXED_LINE_OR_MOBILE';\n    } // Check if the number happens to qualify as both fixed line and mobile.\n    // (no such country in the minimal metadata set)\n\n    /* istanbul ignore if */\n\n\n    if (isNumberTypeEqualTo(nationalNumber, 'MOBILE', metadata)) {\n      return 'FIXED_LINE_OR_MOBILE';\n    }\n\n    return 'FIXED_LINE';\n  }\n\n  for (var _iterator = _createForOfIteratorHelperLoose(NON_FIXED_LINE_PHONE_TYPES), _step; !(_step = _iterator()).done;) {\n    var type = _step.value;\n\n    if (isNumberTypeEqualTo(nationalNumber, type, metadata)) {\n      return type;\n    }\n  }\n}\nexport function isNumberTypeEqualTo(nationalNumber, type, metadata) {\n  type = metadata.type(type);\n\n  if (!type || !type.pattern()) {\n    return false;\n  } // Check if any possible number lengths are present;\n  // if so, we use them to avoid checking\n  // the validation pattern if they don't match.\n  // If they are absent, this means they match\n  // the general description, which we have\n  // already checked before a specific number type.\n\n\n  if (type.possibleLengths() && type.possibleLengths().indexOf(nationalNumber.length) < 0) {\n    return false;\n  }\n\n  return matchesEntirely(nationalNumber, type.pattern());\n}\n//# sourceMappingURL=getNumberType.js.map", "import Metadata from './metadata.js';\nimport matchesEntirely from './helpers/matchesEntirely.js';\nimport getNumberType from './helpers/getNumberType.js';\n/**\r\n * Checks if a given phone number is valid.\r\n *\r\n * isValid(phoneNumberInstance, { ..., v2: true }, metadata)\r\n *\r\n * isPossible({ phone: '8005553535', country: 'RU' }, { ... }, metadata)\r\n * isPossible({ phone: '8005553535', country: 'RU' }, undefined, metadata)\r\n *\r\n * If the `number` is a string, it will be parsed to an object,\r\n * but only if it contains only valid phone number characters (including punctuation).\r\n * If the `number` is an object, it is used as is.\r\n *\r\n * The optional `defaultCountry` argument is the default country.\r\n * I.e. it does not restrict to just that country,\r\n * e.g. in those cases where several countries share\r\n * the same phone numbering rules (NANPA, Britain, etc).\r\n * For example, even though the number `07624 369230`\r\n * belongs to the Isle of Man (\"IM\" country code)\r\n * calling `isValidNumber('07624369230', 'GB', metadata)`\r\n * still returns `true` because the country is not restricted to `GB`,\r\n * it's just that `GB` is the default one for the phone numbering rules.\r\n * For restricting the country see `isValidNumberForRegion()`\r\n * though restricting a country might not be a good idea.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\r\n *\r\n * Examples:\r\n *\r\n * ```js\r\n * isValidNumber('+78005553535', metadata)\r\n * isValidNumber('8005553535', 'RU', metadata)\r\n * isValidNumber('88005553535', 'RU', metadata)\r\n * isValidNumber({ phone: '8005553535', country: 'RU' }, metadata)\r\n * ```\r\n */\n\nexport default function isValidNumber(input, options, metadata) {\n  // If assigning the `{}` default value is moved to the arguments above,\n  // code coverage would decrease for some weird reason.\n  options = options || {};\n  metadata = new Metadata(metadata);\n  metadata.selectNumberingPlan(input.country, input.countryCallingCode); // By default, countries only have type regexps when it's required for\n  // distinguishing different countries having the same `countryCallingCode`.\n\n  if (metadata.hasTypes()) {\n    return getNumberType(input, options, metadata.metadata) !== undefined;\n  } // If there are no type regexps for this country in metadata then use\n  // `nationalNumberPattern` as a \"better than nothing\" replacement.\n\n\n  var nationalNumber = options.v2 ? input.nationalNumber : input.phone;\n  return matchesEntirely(nationalNumber, metadata.nationalNumberPattern());\n}\n//# sourceMappingURL=isValid.js.map", "import Metadata from '../metadata.js';\n/**\r\n * Returns a list of countries that the phone number could potentially belong to.\r\n * @param  {string} callingCode — Calling code.\r\n * @param  {string} nationalNumber — National (significant) number.\r\n * @param  {object} metadata — Metadata.\r\n * @return {string[]} A list of possible countries.\r\n */\n\nexport default function getPossibleCountriesForNumber(callingCode, nationalNumber, metadata) {\n  var _metadata = new Metadata(metadata);\n\n  var possibleCountries = _metadata.getCountryCodesForCallingCode(callingCode);\n\n  if (!possibleCountries) {\n    return [];\n  }\n\n  return possibleCountries.filter(function (country) {\n    return couldNationalNumberBelongToCountry(nationalNumber, country, metadata);\n  });\n}\n\nfunction couldNationalNumberBelongToCountry(nationalNumber, country, metadata) {\n  var _metadata = new Metadata(metadata);\n\n  _metadata.selectNumberingPlan(country);\n\n  if (_metadata.numberingPlan.possibleLengths().indexOf(nationalNumber.length) >= 0) {\n    return true;\n  }\n\n  return false;\n}\n//# sourceMappingURL=getPossibleCountriesForNumber.js.map", "import { VALID_PUNCTUATION } from '../constants.js'; // Removes brackets and replaces dashes with spaces.\n//\n// E.g. \"(999) 111-22-33\" -> \"999 111 22 33\"\n//\n// For some reason Google's metadata contains `<intlFormat/>`s with brackets and dashes.\n// Meanwhile, there's no single opinion about using punctuation in international phone numbers.\n//\n// For example, Google's `<intlFormat/>` for USA is `+1 213-373-4253`.\n// And here's a quote from WikiPedia's \"North American Numbering Plan\" page:\n// https://en.wikipedia.org/wiki/North_American_Numbering_Plan\n//\n// \"The country calling code for all countries participating in the NANP is 1.\n// In international format, an NANP number should be listed as +1 301 555 01 00,\n// where 301 is an area code (Maryland).\"\n//\n// I personally prefer the international format without any punctuation.\n// For example, brackets are remnants of the old age, meaning that the\n// phone number part in brackets (so called \"area code\") can be omitted\n// if dialing within the same \"area\".\n// And hyphens were clearly introduced for splitting local numbers into memorizable groups.\n// For example, remembering \"5553535\" is difficult but \"555-35-35\" is much simpler.\n// Imagine a man taking a bus from home to work and seeing an ad with a phone number.\n// He has a couple of seconds to memorize that number until it passes by.\n// If it were spaces instead of hyphens the man wouldn't necessarily get it,\n// but with hyphens instead of spaces the grouping is more explicit.\n// I personally think that hyphens introduce visual clutter,\n// so I prefer replacing them with spaces in international numbers.\n// In the modern age all output is done on displays where spaces are clearly distinguishable\n// so hyphens can be safely replaced with spaces without losing any legibility.\n//\n\nexport default function applyInternationalSeparatorStyle(formattedNumber) {\n  return formattedNumber.replace(new RegExp(\"[\".concat(VALID_PUNCTUATION, \"]+\"), 'g'), ' ').trim();\n}\n//# sourceMappingURL=applyInternationalSeparatorStyle.js.map", "import applyInternationalSeparatorStyle from './applyInternationalSeparatorStyle.js'; // This was originally set to $1 but there are some countries for which the\n// first group is not used in the national pattern (e.g. Argentina) so the $1\n// group does not match correctly. Therefore, we use `\\d`, so that the first\n// group actually used in the pattern will be matched.\n\nexport var FIRST_GROUP_PATTERN = /(\\$\\d)/;\nexport default function formatNationalNumberUsingFormat(number, format, _ref) {\n  var useInternationalFormat = _ref.useInternationalFormat,\n      withNationalPrefix = _ref.withNationalPrefix,\n      carrierCode = _ref.carrierCode,\n      metadata = _ref.metadata;\n  var formattedNumber = number.replace(new RegExp(format.pattern()), useInternationalFormat ? format.internationalFormat() : // This library doesn't use `domestic_carrier_code_formatting_rule`,\n  // because that one is only used when formatting phone numbers\n  // for dialing from a mobile phone, and this is not a dialing library.\n  // carrierCode && format.domesticCarrierCodeFormattingRule()\n  // \t// First, replace the $CC in the formatting rule with the desired carrier code.\n  // \t// Then, replace the $FG in the formatting rule with the first group\n  // \t// and the carrier code combined in the appropriate way.\n  // \t? format.format().replace(FIRST_GROUP_PATTERN, format.domesticCarrierCodeFormattingRule().replace('$CC', carrierCode))\n  // \t: (\n  // \t\twithNationalPrefix && format.nationalPrefixFormattingRule()\n  // \t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\n  // \t\t\t: format.format()\n  // \t)\n  withNationalPrefix && format.nationalPrefixFormattingRule() ? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule()) : format.format());\n\n  if (useInternationalFormat) {\n    return applyInternationalSeparatorStyle(formattedNumber);\n  }\n\n  return formattedNumber;\n}\n//# sourceMappingURL=formatNationalNumberUsingFormat.js.map", "import Metadata from '../metadata.js';\n/**\r\n * Pattern that makes it easy to distinguish whether a region has a single\r\n * international dialing prefix or not. If a region has a single international\r\n * prefix (e.g. 011 in USA), it will be represented as a string that contains\r\n * a sequence of ASCII digits, and possibly a tilde, which signals waiting for\r\n * the tone. If there are multiple available international prefixes in a\r\n * region, they will be represented as a regex string that always contains one\r\n * or more characters that are not ASCII digits or a tilde.\r\n */\n\nvar SINGLE_IDD_PREFIX_REG_EXP = /^[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?$/; // For regions that have multiple IDD prefixes\n// a preferred IDD prefix is returned.\n\nexport default function getIddPrefix(country, callingCode, metadata) {\n  var countryMetadata = new Metadata(metadata);\n  countryMetadata.selectNumberingPlan(country, callingCode);\n\n  if (countryMetadata.defaultIDDPrefix()) {\n    return countryMetadata.defaultIDDPrefix();\n  }\n\n  if (SINGLE_IDD_PREFIX_REG_EXP.test(countryMetadata.IDDPrefix())) {\n    return countryMetadata.IDDPrefix();\n  }\n}\n//# sourceMappingURL=getIddPrefix.js.map", "function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport isViablePhoneNumber from './isViablePhoneNumber.js'; // https://www.ietf.org/rfc/rfc3966.txt\n\n/**\r\n * @param  {string} text - Phone URI (RFC 3966).\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\n\nexport function parseRFC3966(text) {\n  var number;\n  var ext; // Replace \"tel:\" with \"tel=\" for parsing convenience.\n\n  text = text.replace(/^tel:/, 'tel=');\n\n  for (var _iterator = _createForOfIteratorHelperLoose(text.split(';')), _step; !(_step = _iterator()).done;) {\n    var part = _step.value;\n\n    var _part$split = part.split('='),\n        _part$split2 = _slicedToArray(_part$split, 2),\n        name = _part$split2[0],\n        value = _part$split2[1];\n\n    switch (name) {\n      case 'tel':\n        number = value;\n        break;\n\n      case 'ext':\n        ext = value;\n        break;\n\n      case 'phone-context':\n        // Only \"country contexts\" are supported.\n        // \"Domain contexts\" are ignored.\n        if (value[0] === '+') {\n          number = value + number;\n        }\n\n        break;\n    }\n  } // If the phone number is not viable, then abort.\n\n\n  if (!isViablePhoneNumber(number)) {\n    return {};\n  }\n\n  var result = {\n    number: number\n  };\n\n  if (ext) {\n    result.ext = ext;\n  }\n\n  return result;\n}\n/**\r\n * @param  {object} - `{ ?number, ?extension }`.\r\n * @return {string} Phone URI (RFC 3966).\r\n */\n\nexport function formatRFC3966(_ref) {\n  var number = _ref.number,\n      ext = _ref.ext;\n\n  if (!number) {\n    return '';\n  }\n\n  if (number[0] !== '+') {\n    throw new Error(\"\\\"formatRFC3966()\\\" expects \\\"number\\\" to be in E.164 format.\");\n  }\n\n  return \"tel:\".concat(number).concat(ext ? ';ext=' + ext : '');\n}\n//# sourceMappingURL=RFC3966.js.map", "function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of December 31th, 2018.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\nimport matchesEntirely from './helpers/matchesEntirely.js';\nimport formatNationalNumberUsingFormat from './helpers/formatNationalNumberUsingFormat.js';\nimport Metadata, { getCountryCallingCode } from './metadata.js';\nimport getIddPrefix from './helpers/getIddPrefix.js';\nimport { formatRFC3966 } from './helpers/RFC3966.js';\nvar DEFAULT_OPTIONS = {\n  formatExtension: function formatExtension(formattedNumber, extension, metadata) {\n    return \"\".concat(formattedNumber).concat(metadata.ext()).concat(extension);\n  }\n};\n/**\r\n * Formats a phone number.\r\n *\r\n * format(phoneNumberInstance, 'INTERNATIONAL', { ..., v2: true }, metadata)\r\n * format(phoneNumberInstance, 'NATIONAL', { ..., v2: true }, metadata)\r\n *\r\n * format({ phone: '8005553535', country: 'RU' }, 'INTERNATIONAL', { ... }, metadata)\r\n * format({ phone: '8005553535', country: 'RU' }, 'NATIONAL', undefined, metadata)\r\n *\r\n * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.\r\n * @param  {string} format\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\n\nexport default function formatNumber(input, format, options, metadata) {\n  // Apply default options.\n  if (options) {\n    options = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n  } else {\n    options = DEFAULT_OPTIONS;\n  }\n\n  metadata = new Metadata(metadata);\n\n  if (input.country && input.country !== '001') {\n    // Validate `input.country`.\n    if (!metadata.hasCountry(input.country)) {\n      throw new Error(\"Unknown country: \".concat(input.country));\n    }\n\n    metadata.country(input.country);\n  } else if (input.countryCallingCode) {\n    metadata.selectNumberingPlan(input.countryCallingCode);\n  } else return input.phone || '';\n\n  var countryCallingCode = metadata.countryCallingCode();\n  var nationalNumber = options.v2 ? input.nationalNumber : input.phone; // This variable should have been declared inside `case`s\n  // but Babel has a bug and it says \"duplicate variable declaration\".\n\n  var number;\n\n  switch (format) {\n    case 'NATIONAL':\n      // Legacy argument support.\n      // (`{ country: ..., phone: '' }`)\n      if (!nationalNumber) {\n        return '';\n      }\n\n      number = formatNationalNumber(nationalNumber, input.carrierCode, 'NATIONAL', metadata, options);\n      return addExtension(number, input.ext, metadata, options.formatExtension);\n\n    case 'INTERNATIONAL':\n      // Legacy argument support.\n      // (`{ country: ..., phone: '' }`)\n      if (!nationalNumber) {\n        return \"+\".concat(countryCallingCode);\n      }\n\n      number = formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata, options);\n      number = \"+\".concat(countryCallingCode, \" \").concat(number);\n      return addExtension(number, input.ext, metadata, options.formatExtension);\n\n    case 'E.164':\n      // `E.164` doesn't define \"phone number extensions\".\n      return \"+\".concat(countryCallingCode).concat(nationalNumber);\n\n    case 'RFC3966':\n      return formatRFC3966({\n        number: \"+\".concat(countryCallingCode).concat(nationalNumber),\n        ext: input.ext\n      });\n    // For reference, here's Google's IDD formatter:\n    // https://github.com/google/libphonenumber/blob/32719cf74e68796788d1ca45abc85dcdc63ba5b9/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L1546\n    // Not saying that this IDD formatter replicates it 1:1, but it seems to work.\n    // Who would even need to format phone numbers in IDD format anyway?\n\n    case 'IDD':\n      if (!options.fromCountry) {\n        return; // throw new Error('`fromCountry` option not passed for IDD-prefixed formatting.')\n      }\n\n      var formattedNumber = formatIDD(nationalNumber, input.carrierCode, countryCallingCode, options.fromCountry, metadata);\n      return addExtension(formattedNumber, input.ext, metadata, options.formatExtension);\n\n    default:\n      throw new Error(\"Unknown \\\"format\\\" argument passed to \\\"formatNumber()\\\": \\\"\".concat(format, \"\\\"\"));\n  }\n}\n\nfunction formatNationalNumber(number, carrierCode, formatAs, metadata, options) {\n  var format = chooseFormatForNumber(metadata.formats(), number);\n\n  if (!format) {\n    return number;\n  }\n\n  return formatNationalNumberUsingFormat(number, format, {\n    useInternationalFormat: formatAs === 'INTERNATIONAL',\n    withNationalPrefix: format.nationalPrefixIsOptionalWhenFormattingInNationalFormat() && options && options.nationalPrefix === false ? false : true,\n    carrierCode: carrierCode,\n    metadata: metadata\n  });\n}\n\nexport function chooseFormatForNumber(availableFormats, nationalNnumber) {\n  for (var _iterator = _createForOfIteratorHelperLoose(availableFormats), _step; !(_step = _iterator()).done;) {\n    var format = _step.value;\n\n    // Validate leading digits.\n    // The test case for \"else path\" could be found by searching for\n    // \"format.leadingDigitsPatterns().length === 0\".\n    if (format.leadingDigitsPatterns().length > 0) {\n      // The last leading_digits_pattern is used here, as it is the most detailed\n      var lastLeadingDigitsPattern = format.leadingDigitsPatterns()[format.leadingDigitsPatterns().length - 1]; // If leading digits don't match then move on to the next phone number format\n\n      if (nationalNnumber.search(lastLeadingDigitsPattern) !== 0) {\n        continue;\n      }\n    } // Check that the national number matches the phone number format regular expression\n\n\n    if (matchesEntirely(nationalNnumber, format.pattern())) {\n      return format;\n    }\n  }\n}\n\nfunction addExtension(formattedNumber, ext, metadata, formatExtension) {\n  return ext ? formatExtension(formattedNumber, ext, metadata) : formattedNumber;\n}\n\nfunction formatIDD(nationalNumber, carrierCode, countryCallingCode, fromCountry, metadata) {\n  var fromCountryCallingCode = getCountryCallingCode(fromCountry, metadata.metadata); // When calling within the same country calling code.\n\n  if (fromCountryCallingCode === countryCallingCode) {\n    var formattedNumber = formatNationalNumber(nationalNumber, carrierCode, 'NATIONAL', metadata); // For NANPA regions, return the national format for these regions\n    // but prefix it with the country calling code.\n\n    if (countryCallingCode === '1') {\n      return countryCallingCode + ' ' + formattedNumber;\n    } // If regions share a country calling code, the country calling code need\n    // not be dialled. This also applies when dialling within a region, so this\n    // if clause covers both these cases. Technically this is the case for\n    // dialling from La Reunion to other overseas departments of France (French\n    // Guiana, Martinique, Guadeloupe), but not vice versa - so we don't cover\n    // this edge case for now and for those cases return the version including\n    // country calling code. Details here:\n    // http://www.petitfute.com/voyage/225-info-pratiques-reunion\n    //\n\n\n    return formattedNumber;\n  }\n\n  var iddPrefix = getIddPrefix(fromCountry, undefined, metadata.metadata);\n\n  if (iddPrefix) {\n    return \"\".concat(iddPrefix, \" \").concat(countryCallingCode, \" \").concat(formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata));\n  }\n}\n//# sourceMappingURL=format.js.map", "function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport Metadata from './metadata.js';\nimport isPossibleNumber from './isPossible.js';\nimport isValidNumber from './isValid.js'; // import checkNumberLength from './helpers/checkNumberLength.js'\n\nimport getNumberType from './helpers/getNumberType.js';\nimport getPossibleCountriesForNumber from './helpers/getPossibleCountriesForNumber.js';\nimport formatNumber from './format.js';\nvar USE_NON_GEOGRAPHIC_COUNTRY_CODE = false;\n\nvar PhoneNumber = /*#__PURE__*/function () {\n  /**\r\n   * @param  {string} countryOrCountryCallingCode\r\n   * @param  {string} nationalNumber\r\n   * @param  {object} metadata — Metadata JSON\r\n   * @return {PhoneNumber}\r\n   */\n  function PhoneNumber(countryOrCountryCallingCode, nationalNumber, metadata) {\n    _classCallCheck(this, PhoneNumber);\n\n    if (!countryOrCountryCallingCode) {\n      throw new TypeError('`country` or `countryCallingCode` not passed');\n    }\n\n    if (!nationalNumber) {\n      throw new TypeError('`nationalNumber` not passed');\n    }\n\n    if (!metadata) {\n      throw new TypeError('`metadata` not passed');\n    }\n\n    var _getCountryAndCountry = getCountryAndCountryCallingCode(countryOrCountryCallingCode, metadata),\n        country = _getCountryAndCountry.country,\n        countryCallingCode = _getCountryAndCountry.countryCallingCode;\n\n    this.country = country;\n    this.countryCallingCode = countryCallingCode;\n    this.nationalNumber = nationalNumber;\n    this.number = '+' + this.countryCallingCode + this.nationalNumber; // Exclude `metadata` property output from `PhoneNumber.toString()`\n    // so that it doesn't clutter the console output of Node.js.\n    // Previously, when Node.js did `console.log(new PhoneNumber(...))`,\n    // it would output the whole internal structure of the `metadata` object.\n\n    this.getMetadata = function () {\n      return metadata;\n    };\n  }\n\n  _createClass(PhoneNumber, [{\n    key: \"setExt\",\n    value: function setExt(ext) {\n      this.ext = ext;\n    }\n  }, {\n    key: \"getPossibleCountries\",\n    value: function getPossibleCountries() {\n      if (this.country) {\n        return [this.country];\n      }\n\n      return getPossibleCountriesForNumber(this.countryCallingCode, this.nationalNumber, this.getMetadata());\n    }\n  }, {\n    key: \"isPossible\",\n    value: function isPossible() {\n      return isPossibleNumber(this, {\n        v2: true\n      }, this.getMetadata());\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return isValidNumber(this, {\n        v2: true\n      }, this.getMetadata());\n    }\n  }, {\n    key: \"isNonGeographic\",\n    value: function isNonGeographic() {\n      var metadata = new Metadata(this.getMetadata());\n      return metadata.isNonGeographicCallingCode(this.countryCallingCode);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(phoneNumber) {\n      return this.number === phoneNumber.number && this.ext === phoneNumber.ext;\n    } // This function was originally meant to be an equivalent for `validatePhoneNumberLength()`,\n    // but later it was found out that it doesn't include the possible `TOO_SHORT` result\n    // returned from `parsePhoneNumberWithError()` in the original `validatePhoneNumberLength()`,\n    // so eventually I simply commented out this method from the `PhoneNumber` class\n    // and just left the `validatePhoneNumberLength()` function, even though that one would require\n    // and additional step to also validate the actual country / calling code of the phone number.\n    // validateLength() {\n    // \tconst metadata = new Metadata(this.getMetadata())\n    // \tmetadata.selectNumberingPlan(this.countryCallingCode)\n    // \tconst result = checkNumberLength(this.nationalNumber, metadata)\n    // \tif (result !== 'IS_POSSIBLE') {\n    // \t\treturn result\n    // \t}\n    // }\n\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return getNumberType(this, {\n        v2: true\n      }, this.getMetadata());\n    }\n  }, {\n    key: \"format\",\n    value: function format(_format, options) {\n      return formatNumber(this, _format, options ? _objectSpread(_objectSpread({}, options), {}, {\n        v2: true\n      }) : {\n        v2: true\n      }, this.getMetadata());\n    }\n  }, {\n    key: \"formatNational\",\n    value: function formatNational(options) {\n      return this.format('NATIONAL', options);\n    }\n  }, {\n    key: \"formatInternational\",\n    value: function formatInternational(options) {\n      return this.format('INTERNATIONAL', options);\n    }\n  }, {\n    key: \"getURI\",\n    value: function getURI(options) {\n      return this.format('RFC3966', options);\n    }\n  }]);\n\n  return PhoneNumber;\n}();\n\nexport { PhoneNumber as default };\n\nvar isCountryCode = function isCountryCode(value) {\n  return /^[A-Z]{2}$/.test(value);\n};\n\nfunction getCountryAndCountryCallingCode(countryOrCountryCallingCode, metadataJson) {\n  var country;\n  var countryCallingCode;\n  var metadata = new Metadata(metadataJson); // If country code is passed then derive `countryCallingCode` from it.\n  // Also store the country code as `.country`.\n\n  if (isCountryCode(countryOrCountryCallingCode)) {\n    country = countryOrCountryCallingCode;\n    metadata.selectNumberingPlan(country);\n    countryCallingCode = metadata.countryCallingCode();\n  } else {\n    countryCallingCode = countryOrCountryCallingCode;\n    /* istanbul ignore if */\n\n    if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\n      if (metadata.isNonGeographicCallingCode(countryCallingCode)) {\n        country = '001';\n      }\n    }\n  }\n\n  return {\n    country: country,\n    countryCallingCode: countryCallingCode\n  };\n}\n//# sourceMappingURL=PhoneNumber.js.map", "import Metadata from '../metadata.js';\nimport { VALID_DIGITS } from '../constants.js';\nvar CAPTURING_DIGIT_PATTERN = new RegExp('([' + VALID_DIGITS + '])');\nexport default function stripIddPrefix(number, country, callingCode, metadata) {\n  if (!country) {\n    return;\n  } // Check if the number is IDD-prefixed.\n\n\n  var countryMetadata = new Metadata(metadata);\n  countryMetadata.selectNumberingPlan(country, callingCode);\n  var IDDPrefixPattern = new RegExp(countryMetadata.IDDPrefix());\n\n  if (number.search(IDDPrefixPattern) !== 0) {\n    return;\n  } // Strip IDD prefix.\n\n\n  number = number.slice(number.match(IDDPrefixPattern)[0].length); // If there're any digits after an IDD prefix,\n  // then those digits are a country calling code.\n  // Since no country code starts with a `0`,\n  // the code below validates that the next digit (if present) is not `0`.\n\n  var matchedGroups = number.match(CAPTURING_DIGIT_PATTERN);\n\n  if (matchedGroups && matchedGroups[1] != null && matchedGroups[1].length > 0) {\n    if (matchedGroups[1] === '0') {\n      return;\n    }\n  }\n\n  return number;\n}\n//# sourceMappingURL=stripIddPrefix.js.map", "/**\r\n * Strips any national prefix (such as 0, 1) present in a\r\n * (possibly incomplete) number provided.\r\n * \"Carrier codes\" are only used  in Colombia and Brazil,\r\n * and only when dialing within those countries from a mobile phone to a fixed line number.\r\n * Sometimes it won't actually strip national prefix\r\n * and will instead prepend some digits to the `number`:\r\n * for example, when number `2345678` is passed with `VI` country selected,\r\n * it will return `{ number: \"3402345678\" }`, because `340` area code is prepended.\r\n * @param {string} number — National number digits.\r\n * @param {object} metadata — Metadata with country selected.\r\n * @return {object} `{ nationalNumber: string, nationalPrefix: string? carrierCode: string? }`. Even if a national prefix was extracted, it's not necessarily present in the returned object, so don't rely on its presence in the returned object in order to find out whether a national prefix has been extracted or not.\r\n */\nexport default function extractNationalNumberFromPossiblyIncompleteNumber(number, metadata) {\n  if (number && metadata.numberingPlan.nationalPrefixForParsing()) {\n    // See METADATA.md for the description of\n    // `national_prefix_for_parsing` and `national_prefix_transform_rule`.\n    // Attempt to parse the first digits as a national prefix.\n    var prefixPattern = new RegExp('^(?:' + metadata.numberingPlan.nationalPrefixForParsing() + ')');\n    var prefixMatch = prefixPattern.exec(number);\n\n    if (prefixMatch) {\n      var nationalNumber;\n      var carrierCode; // https://gitlab.com/catamphetamine/libphonenumber-js/-/blob/master/METADATA.md#national_prefix_for_parsing--national_prefix_transform_rule\n      // If a `national_prefix_for_parsing` has any \"capturing groups\"\n      // then it means that the national (significant) number is equal to\n      // those \"capturing groups\" transformed via `national_prefix_transform_rule`,\n      // and nothing could be said about the actual national prefix:\n      // what is it and was it even there.\n      // If a `national_prefix_for_parsing` doesn't have any \"capturing groups\",\n      // then everything it matches is a national prefix.\n      // To determine whether `national_prefix_for_parsing` matched any\n      // \"capturing groups\", the value of the result of calling `.exec()`\n      // is looked at, and if it has non-undefined values where there're\n      // \"capturing groups\" in the regular expression, then it means\n      // that \"capturing groups\" have been matched.\n      // It's not possible to tell whether there'll be any \"capturing gropus\"\n      // before the matching process, because a `national_prefix_for_parsing`\n      // could exhibit both behaviors.\n\n      var capturedGroupsCount = prefixMatch.length - 1;\n      var hasCapturedGroups = capturedGroupsCount > 0 && prefixMatch[capturedGroupsCount];\n\n      if (metadata.nationalPrefixTransformRule() && hasCapturedGroups) {\n        nationalNumber = number.replace(prefixPattern, metadata.nationalPrefixTransformRule()); // If there's more than one captured group,\n        // then carrier code is the second one.\n\n        if (capturedGroupsCount > 1) {\n          carrierCode = prefixMatch[1];\n        }\n      } // If there're no \"capturing groups\",\n      // or if there're \"capturing groups\" but no\n      // `national_prefix_transform_rule`,\n      // then just strip the national prefix from the number,\n      // and possibly a carrier code.\n      // Seems like there could be more.\n      else {\n        // `prefixBeforeNationalNumber` is the whole substring matched by\n        // the `national_prefix_for_parsing` regular expression.\n        // There seem to be no guarantees that it's just a national prefix.\n        // For example, if there's a carrier code, it's gonna be a\n        // part of `prefixBeforeNationalNumber` too.\n        var prefixBeforeNationalNumber = prefixMatch[0];\n        nationalNumber = number.slice(prefixBeforeNationalNumber.length); // If there's at least one captured group,\n        // then carrier code is the first one.\n\n        if (hasCapturedGroups) {\n          carrierCode = prefixMatch[1];\n        }\n      } // Tries to guess whether a national prefix was present in the input.\n      // This is not something copy-pasted from Google's library:\n      // they don't seem to have an equivalent for that.\n      // So this isn't an \"officially approved\" way of doing something like that.\n      // But since there seems no other existing method, this library uses it.\n\n\n      var nationalPrefix;\n\n      if (hasCapturedGroups) {\n        var possiblePositionOfTheFirstCapturedGroup = number.indexOf(prefixMatch[1]);\n        var possibleNationalPrefix = number.slice(0, possiblePositionOfTheFirstCapturedGroup); // Example: an Argentinian (AR) phone number `0111523456789`.\n        // `prefixMatch[0]` is `01115`, and `$1` is `11`,\n        // and the rest of the phone number is `23456789`.\n        // The national number is transformed via `9$1` to `91123456789`.\n        // National prefix `0` is detected being present at the start.\n        // if (possibleNationalPrefix.indexOf(metadata.numberingPlan.nationalPrefix()) === 0) {\n\n        if (possibleNationalPrefix === metadata.numberingPlan.nationalPrefix()) {\n          nationalPrefix = metadata.numberingPlan.nationalPrefix();\n        }\n      } else {\n        nationalPrefix = prefixMatch[0];\n      }\n\n      return {\n        nationalNumber: nationalNumber,\n        nationalPrefix: nationalPrefix,\n        carrierCode: carrierCode\n      };\n    }\n  }\n\n  return {\n    nationalNumber: number\n  };\n}\n//# sourceMappingURL=extractNationalNumberFromPossiblyIncompleteNumber.js.map", "import extractNationalNumberFromPossiblyIncompleteNumber from './extractNationalNumberFromPossiblyIncompleteNumber.js';\nimport matchesEntirely from './matchesEntirely.js';\nimport checkNumberLength from './checkNumberLength.js';\n/**\r\n * Strips national prefix and carrier code from a complete phone number.\r\n * The difference from the non-\"FromCompleteNumber\" function is that\r\n * it won't extract national prefix if the resultant number is too short\r\n * to be a complete number for the selected phone numbering plan.\r\n * @param  {string} number — Complete phone number digits.\r\n * @param  {Metadata} metadata — Metadata with a phone numbering plan selected.\r\n * @return {object} `{ nationalNumber: string, carrierCode: string? }`.\r\n */\n\nexport default function extractNationalNumber(number, metadata) {\n  // Parsing national prefixes and carrier codes\n  // is only required for local phone numbers\n  // but some people don't understand that\n  // and sometimes write international phone numbers\n  // with national prefixes (or maybe even carrier codes).\n  // http://ucken.blogspot.ru/2016/03/trunk-prefixes-in-skype4b.html\n  // Google's original library forgives such mistakes\n  // and so does this library, because it has been requested:\n  // https://github.com/catamphetamine/libphonenumber-js/issues/127\n  var _extractNationalNumbe = extractNationalNumberFromPossiblyIncompleteNumber(number, metadata),\n      carrierCode = _extractNationalNumbe.carrierCode,\n      nationalNumber = _extractNationalNumbe.nationalNumber;\n\n  if (nationalNumber !== number) {\n    if (!shouldHaveExtractedNationalPrefix(number, nationalNumber, metadata)) {\n      // Don't strip the national prefix.\n      return {\n        nationalNumber: number\n      };\n    } // Check the national (significant) number length after extracting national prefix and carrier code.\n    // Legacy generated metadata (before `1.0.18`) didn't support the \"possible lengths\" feature.\n\n\n    if (metadata.possibleLengths()) {\n      // The number remaining after stripping the national prefix and carrier code\n      // should be long enough to have a possible length for the country.\n      // Otherwise, don't strip the national prefix and carrier code,\n      // since the original number could be a valid number.\n      // This check has been copy-pasted \"as is\" from Google's original library:\n      // https://github.com/google/libphonenumber/blob/876268eb1ad6cdc1b7b5bef17fc5e43052702d57/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L3236-L3250\n      // It doesn't check for the \"possibility\" of the original `number`.\n      // I guess it's fine not checking that one. It works as is anyway.\n      if (!isPossibleIncompleteNationalNumber(nationalNumber, metadata)) {\n        // Don't strip the national prefix.\n        return {\n          nationalNumber: number\n        };\n      }\n    }\n  }\n\n  return {\n    nationalNumber: nationalNumber,\n    carrierCode: carrierCode\n  };\n} // In some countries, the same digit could be a national prefix\n// or a leading digit of a valid phone number.\n// For example, in Russia, national prefix is `8`,\n// and also `800 555 35 35` is a valid number\n// in which `8` is not a national prefix, but the first digit\n// of a national (significant) number.\n// Same's with Belarus:\n// `82004910060` is a valid national (significant) number,\n// but `2004910060` is not.\n// To support such cases (to prevent the code from always stripping\n// national prefix), a condition is imposed: a national prefix\n// is not extracted when the original number is \"viable\" and the\n// resultant number is not, a \"viable\" national number being the one\n// that matches `national_number_pattern`.\n\nfunction shouldHaveExtractedNationalPrefix(nationalNumberBefore, nationalNumberAfter, metadata) {\n  // The equivalent in Google's code is:\n  // https://github.com/google/libphonenumber/blob/e326fa1fc4283bb05eb35cb3c15c18f98a31af33/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L2969-L3004\n  if (matchesEntirely(nationalNumberBefore, metadata.nationalNumberPattern()) && !matchesEntirely(nationalNumberAfter, metadata.nationalNumberPattern())) {\n    return false;\n  } // This \"is possible\" national number (length) check has been commented out\n  // because it's superceded by the (effectively) same check done in the\n  // `extractNationalNumber()` function after it calls `shouldHaveExtractedNationalPrefix()`.\n  // In other words, why run the same check twice if it could only be run once.\n  // // Check the national (significant) number length after extracting national prefix and carrier code.\n  // // Fixes a minor \"weird behavior\" bug: https://gitlab.com/catamphetamine/libphonenumber-js/-/issues/57\n  // // (Legacy generated metadata (before `1.0.18`) didn't support the \"possible lengths\" feature).\n  // if (metadata.possibleLengths()) {\n  // \tif (isPossibleIncompleteNationalNumber(nationalNumberBefore, metadata) &&\n  // \t\t!isPossibleIncompleteNationalNumber(nationalNumberAfter, metadata)) {\n  // \t\treturn false\n  // \t}\n  // }\n\n\n  return true;\n}\n\nfunction isPossibleIncompleteNationalNumber(nationalNumber, metadata) {\n  switch (checkNumberLength(nationalNumber, metadata)) {\n    case 'TOO_SHORT':\n    case 'INVALID_LENGTH':\n      // This library ignores \"local-only\" phone numbers (for simplicity).\n      // See the readme for more info on what are \"local-only\" phone numbers.\n      // case 'IS_POSSIBLE_LOCAL_ONLY':\n      return false;\n\n    default:\n      return true;\n  }\n}\n//# sourceMappingURL=extractNationalNumber.js.map", "import Metadata from '../metadata.js';\nimport matchesEntirely from './matchesEntirely.js';\nimport extractNationalNumber from './extractNationalNumber.js';\nimport checkNumberLength from './checkNumberLength.js';\nimport getCountryCallingCode from '../getCountryCallingCode.js';\n/**\r\n * Sometimes some people incorrectly input international phone numbers\r\n * without the leading `+`. This function corrects such input.\r\n * @param  {string} number — Phone number digits.\r\n * @param  {string?} country\r\n * @param  {string?} callingCode\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCode: string?, number: string }`.\r\n */\n\nexport default function extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(number, country, callingCode, metadata) {\n  var countryCallingCode = country ? getCountryCallingCode(country, metadata) : callingCode;\n\n  if (number.indexOf(countryCallingCode) === 0) {\n    metadata = new Metadata(metadata);\n    metadata.selectNumberingPlan(country, callingCode);\n    var possibleShorterNumber = number.slice(countryCallingCode.length);\n\n    var _extractNationalNumbe = extractNationalNumber(possibleShorterNumber, metadata),\n        possibleShorterNationalNumber = _extractNationalNumbe.nationalNumber;\n\n    var _extractNationalNumbe2 = extractNationalNumber(number, metadata),\n        nationalNumber = _extractNationalNumbe2.nationalNumber; // If the number was not valid before but is valid now,\n    // or if it was too long before, we consider the number\n    // with the country calling code stripped to be a better result\n    // and keep that instead.\n    // For example, in Germany (+49), `49` is a valid area code,\n    // so if a number starts with `49`, it could be both a valid\n    // national German number or an international number without\n    // a leading `+`.\n\n\n    if (!matchesEntirely(nationalNumber, metadata.nationalNumberPattern()) && matchesEntirely(possibleShorterNationalNumber, metadata.nationalNumberPattern()) || checkNumberLength(nationalNumber, metadata) === 'TOO_LONG') {\n      return {\n        countryCallingCode: countryCallingCode,\n        number: possibleShorterNumber\n      };\n    }\n  }\n\n  return {\n    number: number\n  };\n}\n//# sourceMappingURL=extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js.map", "import stripIddPrefix from './stripIddPrefix.js';\nimport extractCountryCallingCodeFromInternationalNumberWithoutPlusSign from './extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js';\nimport Metadata from '../metadata.js';\nimport { MAX_LENGTH_COUNTRY_CODE } from '../constants.js';\n/**\r\n * Converts a phone number digits (possibly with a `+`)\r\n * into a calling code and the rest phone number digits.\r\n * The \"rest phone number digits\" could include\r\n * a national prefix, carrier code, and national\r\n * (significant) number.\r\n * @param  {string} number — Phone number digits (possibly with a `+`).\r\n * @param  {string} [country] — Default country.\r\n * @param  {string} [callingCode] — Default calling code (some phone numbering plans are non-geographic).\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCodeSource: string?, countryCallingCode: string?, number: string }`\r\n * @example\r\n * // Returns `{ countryCallingCode: \"1\", number: \"2133734253\" }`.\r\n * extractCountryCallingCode('2133734253', 'US', null, metadata)\r\n * extractCountryCallingCode('2133734253', null, '1', metadata)\r\n * extractCountryCallingCode('+12133734253', null, null, metadata)\r\n * extractCountryCallingCode('+12133734253', 'RU', null, metadata)\r\n */\n\nexport default function extractCountryCallingCode(number, country, callingCode, metadata) {\n  if (!number) {\n    return {};\n  }\n\n  var isNumberWithIddPrefix; // If this is not an international phone number,\n  // then either extract an \"IDD\" prefix, or extract a\n  // country calling code from a number by autocorrecting it\n  // by prepending a leading `+` in cases when it starts\n  // with the country calling code.\n  // https://wikitravel.org/en/International_dialling_prefix\n  // https://github.com/catamphetamine/libphonenumber-js/issues/376\n\n  if (number[0] !== '+') {\n    // Convert an \"out-of-country\" dialing phone number\n    // to a proper international phone number.\n    var numberWithoutIDD = stripIddPrefix(number, country, callingCode, metadata); // If an IDD prefix was stripped then\n    // convert the number to international one\n    // for subsequent parsing.\n\n    if (numberWithoutIDD && numberWithoutIDD !== number) {\n      isNumberWithIddPrefix = true;\n      number = '+' + numberWithoutIDD;\n    } else {\n      // Check to see if the number starts with the country calling code\n      // for the default country. If so, we remove the country calling code,\n      // and do some checks on the validity of the number before and after.\n      // https://github.com/catamphetamine/libphonenumber-js/issues/376\n      if (country || callingCode) {\n        var _extractCountryCallin = extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(number, country, callingCode, metadata),\n            countryCallingCode = _extractCountryCallin.countryCallingCode,\n            shorterNumber = _extractCountryCallin.number;\n\n        if (countryCallingCode) {\n          return {\n            countryCallingCodeSource: 'FROM_NUMBER_WITHOUT_PLUS_SIGN',\n            countryCallingCode: countryCallingCode,\n            number: shorterNumber\n          };\n        }\n      }\n\n      return {\n        // No need to set it to `UNSPECIFIED`. It can be just `undefined`.\n        // countryCallingCodeSource: 'UNSPECIFIED',\n        number: number\n      };\n    }\n  } // Fast abortion: country codes do not begin with a '0'\n\n\n  if (number[1] === '0') {\n    return {};\n  }\n\n  metadata = new Metadata(metadata); // The thing with country phone codes\n  // is that they are orthogonal to each other\n  // i.e. there's no such country phone code A\n  // for which country phone code B exists\n  // where B starts with A.\n  // Therefore, while scanning digits,\n  // if a valid country code is found,\n  // that means that it is the country code.\n  //\n\n  var i = 2;\n\n  while (i - 1 <= MAX_LENGTH_COUNTRY_CODE && i <= number.length) {\n    var _countryCallingCode = number.slice(1, i);\n\n    if (metadata.hasCallingCode(_countryCallingCode)) {\n      metadata.selectNumberingPlan(_countryCallingCode);\n      return {\n        countryCallingCodeSource: isNumberWithIddPrefix ? 'FROM_NUMBER_WITH_IDD' : 'FROM_NUMBER_WITH_PLUS_SIGN',\n        countryCallingCode: _countryCallingCode,\n        number: number.slice(i)\n      };\n    }\n\n    i++;\n  }\n\n  return {};\n} // The possible values for the returned `countryCallingCodeSource` are:\n//\n// Copy-pasted from:\n// https://github.com/google/libphonenumber/blob/master/resources/phonenumber.proto\n//\n// // The source from which the country_code is derived. This is not set in the\n// // general parsing method, but in the method that parses and keeps raw_input.\n// // New fields could be added upon request.\n// enum CountryCodeSource {\n//  // Default value returned if this is not set, because the phone number was\n//  // created using parse, not parseAndKeepRawInput. hasCountryCodeSource will\n//  // return false if this is the case.\n//  UNSPECIFIED = 0;\n//\n//  // The country_code is derived based on a phone number with a leading \"+\",\n//  // e.g. the French number \"+33 1 42 68 53 00\".\n//  FROM_NUMBER_WITH_PLUS_SIGN = 1;\n//\n//  // The country_code is derived based on a phone number with a leading IDD,\n//  // e.g. the French number \"011 33 1 42 68 53 00\", as it is dialled from US.\n//  FROM_NUMBER_WITH_IDD = 5;\n//\n//  // The country_code is derived based on a phone number without a leading\n//  // \"+\", e.g. the French number \"33 1 42 68 53 00\" when defaultCountry is\n//  // supplied as France.\n//  FROM_NUMBER_WITHOUT_PLUS_SIGN = 10;\n//\n//  // The country_code is derived NOT based on the phone number itself, but\n//  // from the defaultCountry parameter provided in the parsing function by the\n//  // clients. This happens mostly for numbers written in the national format\n//  // (without country code). For example, this would be set when parsing the\n//  // French number \"01 42 68 53 00\", when defaultCountry is supplied as\n//  // France.\n//  FROM_DEFAULT_COUNTRY = 20;\n// }\n//# sourceMappingURL=extractCountryCallingCode.js.map", "function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport Metadata from '../metadata.js';\nimport getNumberType from './getNumberType.js';\nexport default function getCountryByNationalNumber(nationalPhoneNumber, _ref) {\n  var countries = _ref.countries,\n      defaultCountry = _ref.defaultCountry,\n      metadata = _ref.metadata;\n  // Re-create `metadata` because it will be selecting a `country`.\n  metadata = new Metadata(metadata);\n  var matchingCountries = [];\n\n  for (var _iterator = _createForOfIteratorHelperLoose(countries), _step; !(_step = _iterator()).done;) {\n    var country = _step.value;\n    metadata.country(country); // \"Leading digits\" patterns are only defined for about 20% of all countries.\n    // By definition, matching \"leading digits\" is a sufficient but not a necessary\n    // condition for a phone number to belong to a country.\n    // The point of \"leading digits\" check is that it's the fastest one to get a match.\n    // https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md#leading_digits\n    // I'd suppose that \"leading digits\" patterns are mutually exclusive for different countries\n    // because of the intended use of that feature.\n\n    if (metadata.leadingDigits()) {\n      if (nationalPhoneNumber && nationalPhoneNumber.search(metadata.leadingDigits()) === 0) {\n        return country;\n      }\n    } // Else perform full validation with all of those\n    // fixed-line/mobile/etc regular expressions.\n    else if (getNumberType({\n      phone: nationalPhoneNumber,\n      country: country\n    }, undefined, metadata.metadata)) {\n      // If the `defaultCountry` is among the `matchingCountries` then return it.\n      if (defaultCountry) {\n        if (country === defaultCountry) {\n          return country;\n        }\n\n        matchingCountries.push(country);\n      } else {\n        return country;\n      }\n    }\n  } // Return the first (\"main\") one of the `matchingCountries`.\n\n\n  if (matchingCountries.length > 0) {\n    return matchingCountries[0];\n  }\n}\n//# sourceMappingURL=getCountryByNationalNumber.js.map", "import getCountryByNationalNumber from './getCountryByNationalNumber.js';\nvar USE_NON_GEOGRAPHIC_COUNTRY_CODE = false;\nexport default function getCountryByCallingCode(callingCode, _ref) {\n  var nationalPhoneNumber = _ref.nationalNumber,\n      defaultCountry = _ref.defaultCountry,\n      metadata = _ref.metadata;\n\n  /* istanbul ignore if */\n  if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\n    if (metadata.isNonGeographicCallingCode(callingCode)) {\n      return '001';\n    }\n  }\n\n  var possibleCountries = metadata.getCountryCodesForCallingCode(callingCode);\n\n  if (!possibleCountries) {\n    return;\n  } // If there's just one country corresponding to the country code,\n  // then just return it, without further phone number digits validation.\n\n\n  if (possibleCountries.length === 1) {\n    return possibleCountries[0];\n  }\n\n  return getCountryByNationalNumber(nationalPhoneNumber, {\n    countries: possibleCountries,\n    defaultCountry: defaultCountry,\n    metadata: metadata.metadata\n  });\n}\n//# sourceMappingURL=getCountryByCallingCode.js.map", "// When phone numbers are written in `RFC3966` format — `\"tel:+12133734253\"` —\n// they can have their \"calling code\" part written separately in a `phone-context` parameter.\n// Example: `\"tel:12133734253;phone-context=+1\"`.\n// This function parses the full phone number from the local number and the `phone-context`\n// when the `phone-context` contains a `+` sign.\nimport { VALID_DIGITS // PLUS_CHARS\n} from '../constants.js';\nexport var PLUS_SIGN = '+';\nvar RFC3966_VISUAL_SEPARATOR_ = '[\\\\-\\\\.\\\\(\\\\)]?';\nvar RFC3966_PHONE_DIGIT_ = '(' + '[' + VALID_DIGITS + ']' + '|' + RFC3966_VISUAL_SEPARATOR_ + ')';\nvar RFC3966_GLOBAL_NUMBER_DIGITS_ = '^' + '\\\\' + PLUS_SIGN + RFC3966_PHONE_DIGIT_ + '*' + '[' + VALID_DIGITS + ']' + RFC3966_PHONE_DIGIT_ + '*' + '$';\n/**\r\n * Regular expression of valid global-number-digits for the phone-context\r\n * parameter, following the syntax defined in RFC3966.\r\n */\n\nvar RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_ = new RegExp(RFC3966_GLOBAL_NUMBER_DIGITS_, 'g'); // In this port of Google's library, we don't accept alpha characters in phone numbers.\n// const ALPHANUM_ = VALID_ALPHA_ + VALID_DIGITS\n\nvar ALPHANUM_ = VALID_DIGITS;\nvar RFC3966_DOMAINLABEL_ = '[' + ALPHANUM_ + ']+((\\\\-)*[' + ALPHANUM_ + '])*';\nvar VALID_ALPHA_ = 'a-zA-Z';\nvar RFC3966_TOPLABEL_ = '[' + VALID_ALPHA_ + ']+((\\\\-)*[' + ALPHANUM_ + '])*';\nvar RFC3966_DOMAINNAME_ = '^(' + RFC3966_DOMAINLABEL_ + '\\\\.)*' + RFC3966_TOPLABEL_ + '\\\\.?$';\n/**\r\n * Regular expression of valid domainname for the phone-context parameter,\r\n * following the syntax defined in RFC3966.\r\n */\n\nvar RFC3966_DOMAINNAME_PATTERN_ = new RegExp(RFC3966_DOMAINNAME_, 'g');\nexport var RFC3966_PREFIX_ = 'tel:';\nexport var RFC3966_PHONE_CONTEXT_ = ';phone-context=';\nexport var RFC3966_ISDN_SUBADDRESS_ = ';isub=';\n/**\r\n * Extracts the value of the phone-context parameter of `numberToExtractFrom`,\r\n * following the syntax defined in RFC3966.\r\n *\r\n * @param {string} numberToExtractFrom\r\n * @return {string|null} the extracted string (possibly empty), or `null` if no phone-context parameter is found.\r\n */\n\nexport default function extractPhoneContext(numberToExtractFrom) {\n  var indexOfPhoneContext = numberToExtractFrom.indexOf(RFC3966_PHONE_CONTEXT_); // If no phone-context parameter is present\n\n  if (indexOfPhoneContext < 0) {\n    return null;\n  }\n\n  var phoneContextStart = indexOfPhoneContext + RFC3966_PHONE_CONTEXT_.length; // If phone-context parameter is empty\n\n  if (phoneContextStart >= numberToExtractFrom.length) {\n    return '';\n  }\n\n  var phoneContextEnd = numberToExtractFrom.indexOf(';', phoneContextStart); // If phone-context is not the last parameter\n\n  if (phoneContextEnd >= 0) {\n    return numberToExtractFrom.substring(phoneContextStart, phoneContextEnd);\n  } else {\n    return numberToExtractFrom.substring(phoneContextStart);\n  }\n}\n/**\r\n * Returns whether the value of phoneContext follows the syntax defined in RFC3966.\r\n *\r\n * @param {string|null} phoneContext\r\n * @return {boolean}\r\n */\n\nexport function isPhoneContextValid(phoneContext) {\n  if (phoneContext === null) {\n    return true;\n  }\n\n  if (phoneContext.length === 0) {\n    return false;\n  } // Does phone-context value match pattern of global-number-digits or domainname.\n\n\n  return RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_.test(phoneContext) || RFC3966_DOMAINNAME_PATTERN_.test(phoneContext);\n}\n//# sourceMappingURL=extractPhoneContext.js.map", "import extractPhoneContext, { isPhoneContextValid, PLUS_SIGN, RFC3966_PREFIX_, RFC3966_PHONE_CONTEXT_, RFC3966_ISDN_SUBADDRESS_ } from './extractPhoneContext.js';\nimport ParseError from '../ParseError.js';\n/**\r\n * @param  {string} numberToParse\r\n * @param  {string} nationalNumber\r\n * @return {}\r\n */\n\nexport default function extractFormattedPhoneNumberFromPossibleRfc3966NumberUri(numberToParse, _ref) {\n  var extractFormattedPhoneNumber = _ref.extractFormattedPhoneNumber;\n  var phoneContext = extractPhoneContext(numberToParse);\n\n  if (!isPhoneContextValid(phoneContext)) {\n    throw new ParseError('NOT_A_NUMBER');\n  }\n\n  var phoneNumberString;\n\n  if (phoneContext === null) {\n    // Extract a possible number from the string passed in.\n    // (this strips leading characters that could not be the start of a phone number)\n    phoneNumberString = extractFormattedPhoneNumber(numberToParse) || '';\n  } else {\n    phoneNumberString = ''; // If the phone context contains a phone number prefix, we need to capture\n    // it, whereas domains will be ignored.\n\n    if (phoneContext.charAt(0) === PLUS_SIGN) {\n      phoneNumberString += phoneContext;\n    } // Now append everything between the \"tel:\" prefix and the phone-context.\n    // This should include the national number, an optional extension or\n    // isdn-subaddress component. Note we also handle the case when \"tel:\" is\n    // missing, as we have seen in some of the phone number inputs.\n    // In that case, we append everything from the beginning.\n\n\n    var indexOfRfc3966Prefix = numberToParse.indexOf(RFC3966_PREFIX_);\n    var indexOfNationalNumber; // RFC 3966 \"tel:\" prefix is preset at this stage because\n    // `isPhoneContextValid()` requires it to be present.\n\n    /* istanbul ignore else */\n\n    if (indexOfRfc3966Prefix >= 0) {\n      indexOfNationalNumber = indexOfRfc3966Prefix + RFC3966_PREFIX_.length;\n    } else {\n      indexOfNationalNumber = 0;\n    }\n\n    var indexOfPhoneContext = numberToParse.indexOf(RFC3966_PHONE_CONTEXT_);\n    phoneNumberString += numberToParse.substring(indexOfNationalNumber, indexOfPhoneContext);\n  } // Delete the isdn-subaddress and everything after it if it is present.\n  // Note extension won't appear at the same time with isdn-subaddress\n  // according to paragraph 5.3 of the RFC3966 spec.\n\n\n  var indexOfIsdn = phoneNumberString.indexOf(RFC3966_ISDN_SUBADDRESS_);\n\n  if (indexOfIsdn > 0) {\n    phoneNumberString = phoneNumberString.substring(0, indexOfIsdn);\n  } // If both phone context and isdn-subaddress are absent but other\n  // parameters are present, the parameters are left in nationalNumber.\n  // This is because we are concerned about deleting content from a potential\n  // number string when there is no strong evidence that the number is\n  // actually written in RFC3966.\n\n\n  if (phoneNumberString !== '') {\n    return phoneNumberString;\n  }\n}\n//# sourceMappingURL=extractFormattedPhoneNumberFromPossibleRfc3966NumberUri.js.map", "// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of December 31th, 2018.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\nimport { VALID_DIGITS, PLUS_CHARS, MIN_LENGTH_FOR_NSN, MAX_LENGTH_FOR_NSN } from './constants.js';\nimport ParseError from './ParseError.js';\nimport Metadata from './metadata.js';\nimport isViablePhoneNumber, { isViablePhoneNumberStart } from './helpers/isViablePhoneNumber.js';\nimport extractExtension from './helpers/extension/extractExtension.js';\nimport parseIncompletePhoneNumber from './parseIncompletePhoneNumber.js';\nimport getCountryCallingCode from './getCountryCallingCode.js';\nimport { isPossibleNumber } from './isPossible.js'; // import { parseRFC3966 } from './helpers/RFC3966.js'\n\nimport PhoneNumber from './PhoneNumber.js';\nimport matchesEntirely from './helpers/matchesEntirely.js';\nimport extractCountryCallingCode from './helpers/extractCountryCallingCode.js';\nimport extractNationalNumber from './helpers/extractNationalNumber.js';\nimport stripIddPrefix from './helpers/stripIddPrefix.js';\nimport getCountryByCallingCode from './helpers/getCountryByCallingCode.js';\nimport extractFormattedPhoneNumberFromPossibleRfc3966NumberUri from './helpers/extractFormattedPhoneNumberFromPossibleRfc3966NumberUri.js'; // We don't allow input strings for parsing to be longer than 250 chars.\n// This prevents malicious input from consuming CPU.\n\nvar MAX_INPUT_STRING_LENGTH = 250; // This consists of the plus symbol, digits, and arabic-indic digits.\n\nvar PHONE_NUMBER_START_PATTERN = new RegExp('[' + PLUS_CHARS + VALID_DIGITS + ']'); // Regular expression of trailing characters that we want to remove.\n// A trailing `#` is sometimes used when writing phone numbers with extensions in US.\n// Example: \"+1 (645) 123 1234-910#\" number has extension \"910\".\n\nvar AFTER_PHONE_NUMBER_END_PATTERN = new RegExp('[^' + VALID_DIGITS + '#' + ']+$');\nvar USE_NON_GEOGRAPHIC_COUNTRY_CODE = false; // Examples:\n//\n// ```js\n// parse('8 (800) 555-35-35', 'RU')\n// parse('8 (800) 555-35-35', 'RU', metadata)\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } })\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } }, metadata)\n// parse('+7 800 555 35 35')\n// parse('+7 800 555 35 35', metadata)\n// ```\n//\n\n/**\r\n * Parses a phone number.\r\n *\r\n * parse('123456789', { defaultCountry: 'RU', v2: true }, metadata)\r\n * parse('123456789', { defaultCountry: 'RU' }, metadata)\r\n * parse('123456789', undefined, metadata)\r\n *\r\n * @param  {string} input\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {object|PhoneNumber?} If `options.v2: true` flag is passed, it returns a `PhoneNumber?` instance. Otherwise, returns an object of shape `{ phone: '...', country: '...' }` (or just `{}` if no phone number was parsed).\r\n */\n\nexport default function parse(text, options, metadata) {\n  // If assigning the `{}` default value is moved to the arguments above,\n  // code coverage would decrease for some weird reason.\n  options = options || {};\n  metadata = new Metadata(metadata); // Validate `defaultCountry`.\n\n  if (options.defaultCountry && !metadata.hasCountry(options.defaultCountry)) {\n    if (options.v2) {\n      throw new ParseError('INVALID_COUNTRY');\n    }\n\n    throw new Error(\"Unknown country: \".concat(options.defaultCountry));\n  } // Parse the phone number.\n\n\n  var _parseInput = parseInput(text, options.v2, options.extract),\n      formattedPhoneNumber = _parseInput.number,\n      ext = _parseInput.ext,\n      error = _parseInput.error; // If the phone number is not viable then return nothing.\n\n\n  if (!formattedPhoneNumber) {\n    if (options.v2) {\n      if (error === 'TOO_SHORT') {\n        throw new ParseError('TOO_SHORT');\n      }\n\n      throw new ParseError('NOT_A_NUMBER');\n    }\n\n    return {};\n  }\n\n  var _parsePhoneNumber = parsePhoneNumber(formattedPhoneNumber, options.defaultCountry, options.defaultCallingCode, metadata),\n      country = _parsePhoneNumber.country,\n      nationalNumber = _parsePhoneNumber.nationalNumber,\n      countryCallingCode = _parsePhoneNumber.countryCallingCode,\n      countryCallingCodeSource = _parsePhoneNumber.countryCallingCodeSource,\n      carrierCode = _parsePhoneNumber.carrierCode;\n\n  if (!metadata.hasSelectedNumberingPlan()) {\n    if (options.v2) {\n      throw new ParseError('INVALID_COUNTRY');\n    }\n\n    return {};\n  } // Validate national (significant) number length.\n\n\n  if (!nationalNumber || nationalNumber.length < MIN_LENGTH_FOR_NSN) {\n    // Won't throw here because the regexp already demands length > 1.\n\n    /* istanbul ignore if */\n    if (options.v2) {\n      throw new ParseError('TOO_SHORT');\n    } // Google's demo just throws an error in this case.\n\n\n    return {};\n  } // Validate national (significant) number length.\n  //\n  // A sidenote:\n  //\n  // They say that sometimes national (significant) numbers\n  // can be longer than `MAX_LENGTH_FOR_NSN` (e.g. in Germany).\n  // https://github.com/googlei18n/libphonenumber/blob/7e1748645552da39c4e1ba731e47969d97bdb539/resources/phonenumber.proto#L36\n  // Such numbers will just be discarded.\n  //\n\n\n  if (nationalNumber.length > MAX_LENGTH_FOR_NSN) {\n    if (options.v2) {\n      throw new ParseError('TOO_LONG');\n    } // Google's demo just throws an error in this case.\n\n\n    return {};\n  }\n\n  if (options.v2) {\n    var phoneNumber = new PhoneNumber(countryCallingCode, nationalNumber, metadata.metadata);\n\n    if (country) {\n      phoneNumber.country = country;\n    }\n\n    if (carrierCode) {\n      phoneNumber.carrierCode = carrierCode;\n    }\n\n    if (ext) {\n      phoneNumber.ext = ext;\n    }\n\n    phoneNumber.__countryCallingCodeSource = countryCallingCodeSource;\n    return phoneNumber;\n  } // Check if national phone number pattern matches the number.\n  // National number pattern is different for each country,\n  // even for those ones which are part of the \"NANPA\" group.\n\n\n  var valid = (options.extended ? metadata.hasSelectedNumberingPlan() : country) ? matchesEntirely(nationalNumber, metadata.nationalNumberPattern()) : false;\n\n  if (!options.extended) {\n    return valid ? result(country, nationalNumber, ext) : {};\n  } // isInternational: countryCallingCode !== undefined\n\n\n  return {\n    country: country,\n    countryCallingCode: countryCallingCode,\n    carrierCode: carrierCode,\n    valid: valid,\n    possible: valid ? true : options.extended === true && metadata.possibleLengths() && isPossibleNumber(nationalNumber, metadata) ? true : false,\n    phone: nationalNumber,\n    ext: ext\n  };\n}\n/**\r\n * Extracts a formatted phone number from text.\r\n * Doesn't guarantee that the extracted phone number\r\n * is a valid phone number (for example, doesn't validate its length).\r\n * @param  {string} text\r\n * @param  {boolean} [extract] — If `false`, then will parse the entire `text` as a phone number.\r\n * @param  {boolean} [throwOnError] — By default, it won't throw if the text is too long.\r\n * @return {string}\r\n * @example\r\n * // Returns \"(213) 373-4253\".\r\n * extractFormattedPhoneNumber(\"Call (213) 373-4253 for assistance.\")\r\n */\n\nfunction _extractFormattedPhoneNumber(text, extract, throwOnError) {\n  if (!text) {\n    return;\n  }\n\n  if (text.length > MAX_INPUT_STRING_LENGTH) {\n    if (throwOnError) {\n      throw new ParseError('TOO_LONG');\n    }\n\n    return;\n  }\n\n  if (extract === false) {\n    return text;\n  } // Attempt to extract a possible number from the string passed in\n\n\n  var startsAt = text.search(PHONE_NUMBER_START_PATTERN);\n\n  if (startsAt < 0) {\n    return;\n  }\n\n  return text // Trim everything to the left of the phone number\n  .slice(startsAt) // Remove trailing non-numerical characters\n  .replace(AFTER_PHONE_NUMBER_END_PATTERN, '');\n}\n/**\r\n * @param  {string} text - Input.\r\n * @param  {boolean} v2 - Legacy API functions don't pass `v2: true` flag.\r\n * @param  {boolean} [extract] - Whether to extract a phone number from `text`, or attempt to parse the entire text as a phone number.\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\n\n\nfunction parseInput(text, v2, extract) {\n  // // Parse RFC 3966 phone number URI.\n  // if (text && text.indexOf('tel:') === 0) {\n  // \treturn parseRFC3966(text)\n  // }\n  // let number = extractFormattedPhoneNumber(text, extract, v2)\n  var number = extractFormattedPhoneNumberFromPossibleRfc3966NumberUri(text, {\n    extractFormattedPhoneNumber: function extractFormattedPhoneNumber(text) {\n      return _extractFormattedPhoneNumber(text, extract, v2);\n    }\n  }); // If the phone number is not viable, then abort.\n\n  if (!number) {\n    return {};\n  }\n\n  if (!isViablePhoneNumber(number)) {\n    if (isViablePhoneNumberStart(number)) {\n      return {\n        error: 'TOO_SHORT'\n      };\n    }\n\n    return {};\n  } // Attempt to parse extension first, since it doesn't require region-specific\n  // data and we want to have the non-normalised number here.\n\n\n  var withExtensionStripped = extractExtension(number);\n\n  if (withExtensionStripped.ext) {\n    return withExtensionStripped;\n  }\n\n  return {\n    number: number\n  };\n}\n/**\r\n * Creates `parse()` result object.\r\n */\n\n\nfunction result(country, nationalNumber, ext) {\n  var result = {\n    country: country,\n    phone: nationalNumber\n  };\n\n  if (ext) {\n    result.ext = ext;\n  }\n\n  return result;\n}\n/**\r\n * Parses a viable phone number.\r\n * @param {string} formattedPhoneNumber — Example: \"(213) 373-4253\".\r\n * @param {string} [defaultCountry]\r\n * @param {string} [defaultCallingCode]\r\n * @param {Metadata} metadata\r\n * @return {object} Returns `{ country: string?, countryCallingCode: string?, nationalNumber: string? }`.\r\n */\n\n\nfunction parsePhoneNumber(formattedPhoneNumber, defaultCountry, defaultCallingCode, metadata) {\n  // Extract calling code from phone number.\n  var _extractCountryCallin = extractCountryCallingCode(parseIncompletePhoneNumber(formattedPhoneNumber), defaultCountry, defaultCallingCode, metadata.metadata),\n      countryCallingCodeSource = _extractCountryCallin.countryCallingCodeSource,\n      countryCallingCode = _extractCountryCallin.countryCallingCode,\n      number = _extractCountryCallin.number; // Choose a country by `countryCallingCode`.\n\n\n  var country;\n\n  if (countryCallingCode) {\n    metadata.selectNumberingPlan(countryCallingCode);\n  } // If `formattedPhoneNumber` is passed in \"national\" format\n  // then `number` is defined and `countryCallingCode` is `undefined`.\n  else if (number && (defaultCountry || defaultCallingCode)) {\n    metadata.selectNumberingPlan(defaultCountry, defaultCallingCode);\n\n    if (defaultCountry) {\n      country = defaultCountry;\n    } else {\n      /* istanbul ignore if */\n      if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\n        if (metadata.isNonGeographicCallingCode(defaultCallingCode)) {\n          country = '001';\n        }\n      }\n    }\n\n    countryCallingCode = defaultCallingCode || getCountryCallingCode(defaultCountry, metadata.metadata);\n  } else return {};\n\n  if (!number) {\n    return {\n      countryCallingCodeSource: countryCallingCodeSource,\n      countryCallingCode: countryCallingCode\n    };\n  }\n\n  var _extractNationalNumbe = extractNationalNumber(parseIncompletePhoneNumber(number), metadata),\n      nationalNumber = _extractNationalNumbe.nationalNumber,\n      carrierCode = _extractNationalNumbe.carrierCode; // Sometimes there are several countries\n  // corresponding to the same country phone code\n  // (e.g. NANPA countries all having `1` country phone code).\n  // Therefore, to reliably determine the exact country,\n  // national (significant) number should have been parsed first.\n  //\n  // When `metadata.json` is generated, all \"ambiguous\" country phone codes\n  // get their countries populated with the full set of\n  // \"phone number type\" regular expressions.\n  //\n\n\n  var exactCountry = getCountryByCallingCode(countryCallingCode, {\n    nationalNumber: nationalNumber,\n    defaultCountry: defaultCountry,\n    metadata: metadata\n  });\n\n  if (exactCountry) {\n    country = exactCountry;\n    /* istanbul ignore if */\n\n    if (exactCountry === '001') {// Can't happen with `USE_NON_GEOGRAPHIC_COUNTRY_CODE` being `false`.\n      // If `USE_NON_GEOGRAPHIC_COUNTRY_CODE` is set to `true` for some reason,\n      // then remove the \"istanbul ignore if\".\n    } else {\n      metadata.country(country);\n    }\n  }\n\n  return {\n    country: country,\n    countryCallingCode: countryCallingCode,\n    countryCallingCodeSource: countryCallingCodeSource,\n    nationalNumber: nationalNumber,\n    carrierCode: carrierCode\n  };\n}\n//# sourceMappingURL=parse.js.map", "function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport parse from './parse.js';\nexport default function parsePhoneNumberWithError(text, options, metadata) {\n  return parse(text, _objectSpread(_objectSpread({}, options), {}, {\n    v2: true\n  }), metadata);\n}\n//# sourceMappingURL=parsePhoneNumberWithError_.js.map", "function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport isObject from './helpers/isObject.js'; // Extracts the following properties from function arguments:\n// * input `text`\n// * `options` object\n// * `metadata` JSON\n\nexport default function normalizeArguments(args) {\n  var _Array$prototype$slic = Array.prototype.slice.call(args),\n      _Array$prototype$slic2 = _slicedToArray(_Array$prototype$slic, 4),\n      arg_1 = _Array$prototype$slic2[0],\n      arg_2 = _Array$prototype$slic2[1],\n      arg_3 = _Array$prototype$slic2[2],\n      arg_4 = _Array$prototype$slic2[3];\n\n  var text;\n  var options;\n  var metadata; // If the phone number is passed as a string.\n  // `parsePhoneNumber('88005553535', ...)`.\n\n  if (typeof arg_1 === 'string') {\n    text = arg_1;\n  } else throw new TypeError('A text for parsing must be a string.'); // If \"default country\" argument is being passed then move it to `options`.\n  // `parsePhoneNumber('88005553535', 'RU', [options], metadata)`.\n\n\n  if (!arg_2 || typeof arg_2 === 'string') {\n    if (arg_4) {\n      options = arg_3;\n      metadata = arg_4;\n    } else {\n      options = undefined;\n      metadata = arg_3;\n    }\n\n    if (arg_2) {\n      options = _objectSpread({\n        defaultCountry: arg_2\n      }, options);\n    }\n  } // `defaultCountry` is not passed.\n  // Example: `parsePhoneNumber('+78005553535', [options], metadata)`.\n  else if (isObject(arg_2)) {\n    if (arg_3) {\n      options = arg_2;\n      metadata = arg_3;\n    } else {\n      metadata = arg_2;\n    }\n  } else throw new Error(\"Invalid second argument: \".concat(arg_2));\n\n  return {\n    text: text,\n    options: options,\n    metadata: metadata\n  };\n}\n//# sourceMappingURL=normalizeArguments.js.map", "function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport parsePhoneNumberWithError from './parsePhoneNumberWithError_.js';\nimport ParseError from './ParseError.js';\nimport { isSupportedCountry } from './metadata.js';\nexport default function parsePhoneNumber(text, options, metadata) {\n  // Validate `defaultCountry`.\n  if (options && options.defaultCountry && !isSupportedCountry(options.defaultCountry, metadata)) {\n    options = _objectSpread(_objectSpread({}, options), {}, {\n      defaultCountry: undefined\n    });\n  } // Parse phone number.\n\n\n  try {\n    return parsePhoneNumberWithError(text, options, metadata);\n  } catch (error) {\n    /* istanbul ignore else */\n    if (error instanceof ParseError) {//\n    } else {\n      throw error;\n    }\n  }\n}\n//# sourceMappingURL=parsePhoneNumber_.js.map", "import normalizeArguments from './normalizeArguments.js';\nimport parsePhoneNumber_ from './parsePhoneNumber_.js';\nexport default function parsePhoneNumber() {\n  var _normalizeArguments = normalizeArguments(arguments),\n      text = _normalizeArguments.text,\n      options = _normalizeArguments.options,\n      metadata = _normalizeArguments.metadata;\n\n  return parsePhoneNumber_(text, options, metadata);\n}\n//# sourceMappingURL=parsePhoneNumber.js.map", "import withMetadataArgument from './withMetadataArgument.js'\r\nimport { default as _parsePhoneNumber } from '../../core/index.js'\r\n\r\nexport function parsePhoneNumber() {\r\n\treturn withMetadataArgument(_parsePhoneNumber, arguments)\r\n}", null, null, null, null, null],
  "mappings": "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C,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,MAAK,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,MAAK,MAAK,MAAK,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,MAAK,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,MAAK,MAAK,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,IAAK,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,MAAK,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,MAAK,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,MAAK,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,MAAK,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,MAAK,MAAK,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,MAAK,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAAE,KAAM,CAAC,IAAI,GAA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",
  "names": ["_sfc_main$1", "defineComponent", "value", "url", "index", "props", "ctx", "ui", "useUi", "imageListRef", "ref", "errorBinding", "computed", "_", "computedValues", "urls", "item", "buildImageList", "images", "previewUrls", "i", "image", "imageList", "previewUrl", "preview", "buildImageListUrls", "list", "values", "buildImageListByValue", "buildImageListByUrls", "watch", "_hoisted_1", "_hoisted_2", "_resolveComponent", "_openBlock", "_createElementBlock", "_createBlock", "_resolveDynamicComponent", "_ctx", "_guardReactiveProps", "_withCtx", "_Fragment", "_renderList", "_mergeProps", "_createElementVNode", "_createVNode", "_component_fs_loading", "_hoisted_3", "createAllUploadSuccessValidator", "getFormComponentRef", "rule", "AllUploadSuccessValidator", "compute", "getComponentRef", "createUploaderRules", "yourRules", "uploadingWarningMessage", "types$5", "t", "useI18n", "uiContext", "get", "form", "component", "name", "listType", "upload", "typeImageCard", "accept", "formItem", "rules", "validator", "message", "trigger", "column", "style", "previewTeleported", "previewMask", "icons", "eye", "viewForm", "height", "width", "limit", "align", "valueResolve", "row", "key", "Array", "length", "cropper", "aspectRatio", "autoCropArea", "viewMode", "defaultConfig", "context", "resolve", "reject", "ret", "fileName", "date", "fileType", "keepName", "ext", "uploaderConfig", "setConfig", "app", "config", "AllSuccessValidator", "FsUploaderType", "options", "newTypes", "types", "addTypes", "useTypes", "loadUploader", "type", "module", "buildKey", "file", "useUploader", "getDefaultType", "getConfig", "getUploaderImpl", "asyncModules", "syncModules", "registerMergeColumnPlugin", "useColumns", "columnProps", "crudOptions", "buildUrl", "buildUrls", "FsUploaderComponents", "utils", "FsExtendsUploader", "types$4", "ExtendsType", "FsExtendsEditor", "types$3", "FsExtendsType$3", "FsExtendsComponents", "FsExtendsJson", "FsExtendsType", "types$2", "FsExtendsType$2", "commonjsGlobal", "getDefaultExportFromCjs", "x", "createCommonjsModule", "fn", "basedir", "path", "base", "commonjsRequire", "clipboard", "exports", "root", "factory", "modules", "installedModules", "__webpack_require__", "moduleId", "getter", "mode", "ns", "object", "property", "select", "element", "selectedText", "isReadOnly", "selection", "range", "E", "callback", "e", "self", "listener", "data", "evtArr", "len", "evts", "liveEvents", "is", "delegate", "listen", "target", "listenNode", "listenNodeList", "listenSelector", "node", "nodeList", "selector", "closest", "_delegate", "useCapture", "listenerFn", "elements", "DOCUMENT_NODE_TYPE", "proto", "__webpack_exports__", "src_select", "select_default", "_typeof", "obj", "_createClass", "defineProperties", "descriptor", "Constructor", "protoProps", "staticProps", "_classCallCheck", "instance", "clipboard_action_ClipboardAction", "ClipboardAction", "_this", "isRTL", "yPosition", "succeeded", "action", "clipboard_action", "tiny_emitter", "tiny_emitter_default", "listen_default", "clipboard_typeof", "clipboard_createClass", "clipboard_classCallCheck", "_possibleConstructorReturn", "call", "_inherits", "subClass", "superClass", "clipboard_Clipboard", "_Emitter", "Clipboard", "_this2", "getAttributeValue", "actions", "support", "suffix", "attribute", "ClipboardJS", "VueClipboard", "autoSetContainer", "appendToBody", "toClipboard", "el", "binding", "text", "fakeElement", "FsExtendsCopyable", "types$1", "FsExtendsType$1", "FsExtendsTime", "allCountries", "country", "countries", "formValidator", "__props", "emits", "__emit", "selectValue", "countryDict", "dict", "countryOptions", "priorityCountries", "ignoredCountries", "priorities", "leaved", "computedSelect", "def", "handleSelectInput", "computedInput", "handleNumberInput", "setValue", "getCountryByValue", "countryCode", "changeCountry", "emitValue", "getEmitValue", "number", "oldValue", "metadata", "withMetadataArgument", "func", "_arguments", "args", "_defineProperties", "_setPrototypeOf", "_createSuper", "Derived", "hasNativeReflectConstruct", "_isNativeReflectConstruct", "Super", "_getPrototypeOf", "result", "NewTarget", "_assertThisInitialized", "_wrapNativeSuper", "Class", "_cache", "_isNativeFunction", "Wrapper", "_construct", "Parent", "a", "o", "p", "ParseError", "_Error", "_super", "code", "MIN_LENGTH_FOR_NSN", "MAX_LENGTH_FOR_NSN", "MAX_LENGTH_COUNTRY_CODE", "VALID_DIGITS", "DASHES", "SLASHES", "DOTS", "WHITESPACE", "BRACKETS", "TILDES", "VALID_PUNCTUATION", "PLUS_CHARS", "compare", "b", "pa", "pb", "na", "nb", "objectConstructor", "isObject", "V3", "V4", "DEFAULT_EXT_PREFIX", "CALLING_CODE_REG_EXP", "Metadata", "validateMetadata", "setVersion", "callingCode", "countryCodes", "NumberingPlan", "_type", "globalMetadataObject", "formats", "Format", "_type2", "getType", "Type", "format", "FIRST_GROUP_ONLY_PREFIX_PATTERN", "typeOf", "getCountryCallingCode", "isSupportedCountry", "version", "RFC3966_EXTN_PREFIX", "getExtensionDigitsPattern", "maxLength", "createExtensionPattern", "purpose", "extLimitAfterExplicitLabel", "extLimitAfterLikelyLabel", "extLimitAfterAmbiguousChar", "extLimitWhenNotSure", "possibleSeparatorsBetweenNumberAndExtLabel", "possibleCharsAfterExtLabel", "optionalExtnSuffix", "explicitExtLabels", "ambiguousExtLabels", "ambiguousSeparator", "possibleSeparatorsNumberExtLabelNoComma", "autoDiallingAndExtLabelsFound", "rfcExtn", "explicitExtn", "ambiguousExtn", "americanStyleExtnWithSuffix", "autoDiallingExtn", "onlyCommasExtn", "MIN_LENGTH_PHONE_NUMBER_PATTERN", "VALID_PHONE_NUMBER", "VALID_PHONE_NUMBER_START_REG_EXP", "VALID_PHONE_NUMBER_WITH_EXTENSION", "VALID_PHONE_NUMBER_PATTERN", "isViablePhoneNumber", "isViablePhoneNumberStart", "EXTN_PATTERN", "extractExtension", "start", "numberWithoutExtension", "matches", "DIGITS", "parseDigit", "character", "_createForOfIteratorHelperLoose", "allowArrayLike", "it", "_unsupportedIterableToArray", "minLen", "_arrayLikeToArray", "n", "arr", "arr2", "parseIncompletePhoneNumber", "string", "_iterator", "_step", "parsePhoneNumberCharacter", "prevParsedCharacters", "emitEvent", "mergeArrays", "merged", "checkNumberLength", "nationalNumber", "checkNumberLengthForType", "type_info", "possible_lengths", "mobile_type", "actual_length", "minimum_length", "isPossiblePhoneNumber", "input", "isPossibleNumber", "matchesEntirely", "regular_expression", "NON_FIXED_LINE_PHONE_TYPES", "getNumberType", "isNumberTypeEqualTo", "isValidNumber", "getPossibleCountriesForNumber", "_metadata", "possibleCountries", "couldNationalNumberBelongToCountry", "applyInternationalSeparatorStyle", "formattedNumber", "FIRST_GROUP_PATTERN", "formatNationalNumberUsingFormat", "_ref", "useInternationalFormat", "withNationalPrefix", "SINGLE_IDD_PREFIX_REG_EXP", "getIddPrefix", "countryMetadata", "formatRFC3966", "ownKeys", "enumerableOnly", "keys", "symbols", "sym", "_objectSpread", "source", "_defineProperty", "DEFAULT_OPTIONS", "extension", "formatNumber", "countryCallingCode", "formatNationalNumber", "addExtension", "formatIDD", "carrierCode", "formatAs", "chooseFormatForNumber", "availableFormats", "nationalNnumber", "lastLeadingDigitsPattern", "formatExtension", "fromCountry", "fromCountryCallingCode", "iddPrefix", "PhoneNumber", "countryOrCountryCallingCode", "_getCountryAndCountry", "getCountryAndCountryCallingCode", "phoneNumber", "_format", "isCountryCode", "metadataJson", "CAPTURING_DIGIT_PATTERN", "stripIddPrefix", "IDDPrefixPattern", "matchedGroups", "extractNationalNumberFromPossiblyIncompleteNumber", "prefixPattern", "prefixMatch", "capturedGroupsCount", "hasCapturedGroups", "prefixBeforeNationalNumber", "nationalPrefix", "possiblePositionOfTheFirstCapturedGroup", "possibleNationalPrefix", "extractNationalNumber", "_extractNationalNumbe", "shouldHaveExtractedNationalPrefix", "isPossibleIncompleteNationalNumber", "nationalNumberBefore", "nationalNumberAfter", "extractCountryCallingCodeFromInternationalNumberWithoutPlusSign", "possibleShorterNumber", "possibleShorterNationalNumber", "_extractNationalNumbe2", "extractCountryCallingCode", "isNumberWithIddPrefix", "numberWithoutIDD", "_extractCountryCallin", "shorterNumber", "_countryCallingCode", "getCountryByNationalNumber", "nationalPhoneNumber", "defaultCountry", "matchingCountries", "USE_NON_GEOGRAPHIC_COUNTRY_CODE", "getCountryByCallingCode", "PLUS_SIGN", "RFC3966_VISUAL_SEPARATOR_", "RFC3966_PHONE_DIGIT_", "RFC3966_GLOBAL_NUMBER_DIGITS_", "RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_", "ALPHANUM_", "RFC3966_DOMAINLABEL_", "VALID_ALPHA_", "RFC3966_TOPLABEL_", "RFC3966_DOMAINNAME_", "RFC3966_DOMAINNAME_PATTERN_", "RFC3966_PREFIX_", "RFC3966_PHONE_CONTEXT_", "RFC3966_ISDN_SUBADDRESS_", "extractPhoneContext", "numberToExtractFrom", "indexOfPhoneContext", "phoneContextStart", "phoneContextEnd", "isPhoneContextValid", "phoneContext", "extractFormattedPhoneNumberFromPossibleRfc3966NumberUri", "numberToParse", "extractFormattedPhoneNumber", "phoneNumberString", "indexOfRfc3966Prefix", "indexOfNationalNumber", "indexOfIsdn", "MAX_INPUT_STRING_LENGTH", "PHONE_NUMBER_START_PATTERN", "AFTER_PHONE_NUMBER_END_PATTERN", "parse", "_parseInput", "parseInput", "formattedPhoneNumber", "error", "_parsePhoneNumber", "parsePhoneNumber", "countryCallingCodeSource", "valid", "_extractFormattedPhoneNumber", "extract", "throwOnError", "startsAt", "v2", "withExtensionStripped", "defaultCallingCode", "exactCountry", "parsePhoneNumberWithError", "_slicedToArray", "_arrayWithHoles", "_iterableToArrayLimit", "_nonIterableRest", "_i", "_arr", "_n", "_d", "_s", "_e", "err", "normalizeArguments", "_Array$prototype$slic", "_Array$prototype$slic2", "arg_1", "arg_2", "arg_3", "arg_4", "_normalizeArguments", "parsePhoneNumber_", "getParsePhoneNumberFromString", "parsing", "parsePhoneNumberFromString", "phoneNumberValidator", "mobileValidator", "mobileRequiredValidator", "noCountryCode", "noCallingCode", "noPhoneNumber", "phone", "cellRender", "_createTextVNode", "vModel", "FsExtendsInput"]
}
