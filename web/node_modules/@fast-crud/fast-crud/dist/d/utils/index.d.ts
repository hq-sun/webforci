import store from "./util.store";
export * from "./util.log";
export declare const utils: {
    logger: {
        debug: (...args: any) => void;
        info: (...args: any) => void;
        warn: (...args: any) => void;
        error: (...args: any) => void;
        log: (...args: any) => void;
    };
    strings: {
        isEmpty: (value?: string) => boolean;
        isAllEmpty: (...values: any) => boolean;
        hasEmpty: (...values: any) => boolean;
    };
    trace: {
        trace(name: string): void;
    };
    vite: {
        transformFromGlob: (modules: any, pickNameExp?: any, transform?: any) => any;
        installAsyncComponents: (app: any, modules: any, excludes: any, pickNameExp: any, transform: any) => void;
        installSyncComponents: (app: any, modules: any, excludes: any, pickNameExp: any, transform: any) => void;
        createAsyncComponent: (es: any) => new () => import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}>, {}, {}>;
        loadAsyncComponentFromGlob: (modules: any) => any;
        loadComponentFromGlob: (modules: any) => any;
    };
    store: typeof store;
    deepdash: {
        forEachDeep: import("./deepdash/get-each-deep").ForEachDeep;
    };
    dash: {
        omit(ref: import("vue").Ref<any>, ...skips: string[]): any;
    };
};
export default utils;
