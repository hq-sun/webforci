import { ColumnCompositionProps, ColumnProps, CompositionColumns, CrudOptions, DynamicallyCrudOptions, FormProps, TableColumnsProps, UseFsContext } from "../d";
export type MergeColumnPlugin = {
    name: string;
    handle: (columnProps: any, crudOptions: any) => {};
    order: number;
};
export declare function registerMergeColumnPlugin(plugin: MergeColumnPlugin): void;
export declare function buildTableColumnsFlatMap(map: TableColumnsProps, columns: TableColumnsProps): TableColumnsProps;
declare function buildFormOptions(crudOptions: DynamicallyCrudOptions, context?: UseFsContext): FormProps;
declare function buildColumns(userOptions: CrudOptions): CrudOptions;
export declare function forEachTableColumns(columns: TableColumnsProps, callback: (col: ColumnProps, key: string) => void): void;
export declare function forEachColumns(columns: CompositionColumns, callback: (col: ColumnCompositionProps, key: string) => void): void;
export declare function useColumns(): {
    buildFormOptions: typeof buildFormOptions;
    buildColumns: typeof buildColumns;
    registerMergeColumnPlugin: typeof registerMergeColumnPlugin;
    forEachColumns: typeof forEachColumns;
};
export {};
