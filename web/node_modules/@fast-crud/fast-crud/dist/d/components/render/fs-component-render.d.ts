/**
 * 组件动态渲染组件
 */
declare const _default: import("vue").DefineComponent<{
    /**
     * modelValue
     */
    modelValue: {};
    /**
     * 组件名称
     */
    name: {};
    /**
     * 插槽
     */
    slots: {
        type: ObjectConstructor;
    };
    /**
     * 子元素，同slots
     */
    children: {
        type: ObjectConstructor;
    };
    /**
     * 事件监听
     */
    on: {
        type: ObjectConstructor;
    };
    /**
     * 同 on
     */
    events: {
        type: ObjectConstructor;
    };
    /**
     * 上下文scope
     */
    scope: {
        type: ObjectConstructor;
    };
    /**
     * modelValue的属性名
     */
    vModel: {
        type: (ObjectConstructor | StringConstructor)[];
    };
    /**
     * 组件参数，会与attrs合并
     */
    props: {};
    /**
     * 自定义render
     */
    render: {};
    /**
     * 当输入框的值上报为undefine时，转为null
     */
    undefineToNull: {
        type: BooleanConstructor;
        default: boolean;
    };
}, () => any, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("update:dict" | "update:modelValue" | "mounted")[], "update:dict" | "update:modelValue" | "mounted", import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    /**
     * modelValue
     */
    modelValue: {};
    /**
     * 组件名称
     */
    name: {};
    /**
     * 插槽
     */
    slots: {
        type: ObjectConstructor;
    };
    /**
     * 子元素，同slots
     */
    children: {
        type: ObjectConstructor;
    };
    /**
     * 事件监听
     */
    on: {
        type: ObjectConstructor;
    };
    /**
     * 同 on
     */
    events: {
        type: ObjectConstructor;
    };
    /**
     * 上下文scope
     */
    scope: {
        type: ObjectConstructor;
    };
    /**
     * modelValue的属性名
     */
    vModel: {
        type: (ObjectConstructor | StringConstructor)[];
    };
    /**
     * 组件参数，会与attrs合并
     */
    props: {};
    /**
     * 自定义render
     */
    render: {};
    /**
     * 当输入框的值上报为undefine时，转为null
     */
    undefineToNull: {
        type: BooleanConstructor;
        default: boolean;
    };
}>> & {
    "onUpdate:dict"?: (...args: any[]) => any;
    "onUpdate:modelValue"?: (...args: any[]) => any;
    onMounted?: (...args: any[]) => any;
}, {
    undefineToNull: boolean;
}, {}>;
export default _default;
