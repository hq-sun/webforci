import p from "lodash-es";
import { b as d, u as g } from "./index-d86da30d.mjs";
import f from "cos-js-sdk-v5";
import y from "dayjs";
import "vue";
import "@fast-crud/fast-crud";
function w(e) {
  let n = null;
  const c = e.secretId, r = e.secretKey, t = e.getAuthorization;
  return !c && !r && t ? n = new f({
    // 必选参数
    getAuthorization(i, a) {
      t(e).then((o) => {
        o.ExpiredTime && typeof o.ExpiredTime == "string" && (o.ExpiredTime = y(o.ExpiredTime).unix()), a(o);
      });
    }
  }) : (console.warn("您还未配置getAuthorization，将使用SecretKey授权进行上传"), n = new f({
    SecretId: c,
    SecretKey: r
  })), n;
}
async function h({ file: e, fileName: n, onProgress: c, options: r }) {
  const t = await d(e, n, r), i = r, a = w(i);
  return new Promise((o, m) => {
    a.putObject({
      Bucket: i.bucket,
      Region: i.region,
      Key: t,
      Body: e,
      onProgress(u) {
        const s = u;
        s.total > 0 && (s.percent = Math.floor(s.loaded / s.total * 100)), c(s);
      }
    }, async function(u, s) {
      if (u != null) {
        console.error(u), m(u);
        return;
      }
      let l = { url: i.domain + "/" + t, key: t };
      if (i.successHandle) {
        l = await i.successHandle(l), o(l);
        return;
      }
      o(l);
    });
  });
}
async function S(e) {
  const { getConfig: n } = g(), c = n("cos"), r = e.options, t = p.merge(p.cloneDeep(c), r);
  return e.options = t, await h(e);
}
export {
  w as getOssClient,
  S as upload
};
//# sourceMappingURL=uploader-cos-e7436133.mjs.map
