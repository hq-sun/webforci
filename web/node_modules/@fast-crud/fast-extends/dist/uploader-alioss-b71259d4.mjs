import l from "lodash-es";
import { b as d, u as g } from "./index-d86da30d.mjs";
import o from "ali-oss";
import "vue";
import "@fast-crud/fast-crud";
let a = null;
async function m(e) {
  if (a != null && a.expiresTime > (/* @__PURE__ */ new Date()).getTime())
    return a;
  const n = await e.getAuthorization(e);
  return a = n, a.expiresTime == null && (a.expiresTime = (/* @__PURE__ */ new Date()).getTime() + parseInt(n.expiration)), a;
}
async function f(e, s, n) {
  let c = null;
  !e.accessKeyId && !e.accessKeySecret && e.getAuthorization !== null ? c = await m({
    key: s,
    file: n,
    ...e
  }) : console.warn("您还未配置getAuthorization，将使用accessKeySecret作为授权进行上传");
  let t = null;
  return c != null ? (t = new o({
    region: e.region,
    accessKeyId: c.accessKeyId,
    accessKeySecret: c.accessKeySecret,
    stsToken: c.securityToken,
    bucket: e.bucket,
    ...e.sdkOpts
  }), s = c.key || s) : t = new o({
    region: e.region,
    accessKeyId: e.accessKeyId,
    accessKeySecret: e.accessKeySecret,
    bucket: e.bucket,
    ...e.sdkOpts
  }), { client: t, key: s };
}
async function p(e) {
  const { file: s, fileName: n, onProgress: c } = e, t = e.options, u = await d(s, n, t), { client: y, key: i } = await f(t, u, s);
  await y.put(i, s);
  let r = { url: t.domain + "/" + i, key: i };
  return t.successHandle && (r = await t.successHandle(r, t)), r;
}
async function T(e) {
  const { getConfig: s } = g(), n = s("alioss"), c = e.options, t = l.merge(l.cloneDeep(n), c);
  return e.options = t, await p(e);
}
export {
  f as getOssClient,
  m as getSts,
  T as upload
};
//# sourceMappingURL=uploader-alioss-b71259d4.mjs.map
