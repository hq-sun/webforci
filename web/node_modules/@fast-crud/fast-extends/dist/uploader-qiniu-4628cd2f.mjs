import c from "lodash-es";
import { b as l, u as m } from "./index-d86da30d.mjs";
import * as b from "qiniu-js";
import "vue";
import "@fast-crud/fast-crud";
async function d(n, o, a, e) {
  const t = await e.getToken({
    fileName: o,
    key: a,
    file: n,
    ...e.custom,
    ...e
  });
  let r = null;
  return typeof t == "string" ? r = { token: t, expires: 3600 } : r = t, r.expiresTime = (/* @__PURE__ */ new Date()).getTime() + r.expires * 1e3, r.token;
}
async function f({ file: n, fileName: o, onProgress: a, options: e }) {
  const t = await l(n, o, e), r = await d(n, o, t, e);
  return new Promise((u, p) => {
    b.upload(n, t, r, e.putExtra, e.putConfig).subscribe({
      next(s) {
        s && a(s.total);
      },
      error(s) {
        p(s);
      },
      async complete(s) {
        let i = { url: e.domain + "/" + t, key: t };
        if (e.successHandle) {
          i = await e.successHandle(i), u(i);
          return;
        }
        u(i);
      }
    });
  });
}
async function T(n) {
  const { getConfig: o } = m(), a = o("qiniu"), e = n.options, t = c.merge(c.cloneDeep(a), e);
  return n.options = t, await f(n);
}
export {
  d as getToken,
  T as upload
};
//# sourceMappingURL=uploader-qiniu-4628cd2f.mjs.map
